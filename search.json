[
  {
    "objectID": "reactome_path.html",
    "href": "reactome_path.html",
    "title": "Reactome pathway analysis",
    "section": "",
    "text": "!pip install reactome2py\n\n\nfrom reactome2py import analysis\nfrom matplotlib import pyplot as plt\nfrom pandas import json_normalize\nimport os, pandas as pd, numpy as np, seaborn as sns\nfrom tqdm import tqdm\nfrom PIL import Image",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#setup",
    "href": "reactome_path.html#setup",
    "title": "Reactome pathway analysis",
    "section": "",
    "text": "!pip install reactome2py\n\n\nfrom reactome2py import analysis\nfrom matplotlib import pyplot as plt\nfrom pandas import json_normalize\nimport os, pandas as pd, numpy as np, seaborn as sns\nfrom tqdm import tqdm\nfrom PIL import Image",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#utils",
    "href": "reactome_path.html#utils",
    "title": "Reactome pathway analysis",
    "section": "Utils",
    "text": "Utils\n\ndef get_reactome_raw(gene_list):\n    \n    \"Reactome pathway analysis for a given gene set; returns raw output in dataframe.\"\n    \n    gene_str = ','.join(gene_list)\n    \n    # set page size and page to -1 ensures to display all pathway results, sort by pvalue instead of fdr, projection set to True is consistent with official web\n    result = analysis.identifiers(gene_str, page_size='-1', page='-1', sort_by='ENTITIES_PVALUE',projection=True)\n    \n    out = json_normalize(result['pathways'])\n    \n    return out\n\nExample:\n\n# get gene list\ngenes = pd.read_csv('raw/AKT1.csv')['gene'].tolist()\n\nget_reactome_raw(genes).head()\n\n\n\n\n\n\n\n\nstId\ndbId\nname\nllp\ninDisease\nspecies.dbId\nspecies.taxId\nspecies.name\nentities.resource\nentities.total\nentities.found\nentities.ratio\nentities.pValue\nentities.fdr\nentities.exp\nreactions.resource\nreactions.total\nreactions.found\nreactions.ratio\n\n\n\n\n0\nR-HSA-111465\n111465\nApoptotic cleavage of cellular proteins\nTrue\nFalse\n48887\n9606\nHomo sapiens\nTOTAL\n38\n33\n0.002428\n0.000134\n0.322956\n[]\nTOTAL\n38\n38\n0.002506\n\n\n1\nR-HSA-5674400\n5674400\nConstitutive Signaling by AKT1 E17K in Cancer\nTrue\nTrue\n48887\n9606\nHomo sapiens\nTOTAL\n29\n25\n0.001853\n0.000889\n0.878858\n[]\nTOTAL\n18\n18\n0.001187\n\n\n2\nR-HSA-75153\n75153\nApoptotic execution phase\nTrue\nFalse\n48887\n9606\nHomo sapiens\nTOTAL\n54\n39\n0.003450\n0.001225\n0.878858\n[]\nTOTAL\n57\n57\n0.003759\n\n\n3\nR-HSA-3108232\n3108232\nSUMO E3 ligases SUMOylate target proteins\nFalse\nFalse\n48887\n9606\nHomo sapiens\nTOTAL\n184\n104\n0.011755\n0.002371\n0.878858\n[]\nTOTAL\n132\n102\n0.008705\n\n\n4\nR-HSA-2990846\n2990846\nSUMOylation\nFalse\nFalse\n48887\n9606\nHomo sapiens\nTOTAL\n193\n107\n0.012330\n0.003650\n0.878858\n[]\nTOTAL\n141\n111\n0.009298\n\n\n\n\n\n\n\n\ndef plot_path(react_out, top_n=10,max_label_length=80):\n\n    \"Plot the output of get_reactome.\"\n    \n    # Extract the data and reverse it\n    data = react_out.head(top_n).set_index('name')['-log10_pValue'].iloc[::-1]\n    \n    # Truncate labels if they are too long\n    truncated_labels = [label[:max_label_length] + '...' if len(label) &gt; max_label_length else label for label in data.index]\n    data.index = truncated_labels\n\n    # Calculate the required width: base width + additional width for the longest label\n    base_width = 2\n    max_label_length = max(data.index, key=len)\n    additional_width = len(max_label_length) * 0.1  # Adjust scaling factor as needed\n    \n    figsize = (base_width + additional_width, 3*top_n/10)  # Adjust height as necessary\n\n    # Plotting\n    data.plot.barh(figsize=figsize)\n    plt.ylabel('')\n    plt.xlabel('-log10(p)')\n    plt.tight_layout()  # Adjust layout to fit everything\n\n\ndef get_reactome(gene_list, plot=True):\n    \n    \"Given a gene list, get the processed output of reactome; output contains additional -log10(p)\"\n    out = get_reactome_raw(gene_list)\n    out = out[['name','entities.pValue']].rename(columns={'entities.pValue':'pValue'})\n    out['-log10_pValue'] = -np.log10(out['pValue']).round(3)\n\n    if plot:\n        plot_path\n    \n    return out\n\n\nout = get_reactome(genes)\nout.head()\n\n\n\n\n\n\n\n\nname\npValue\n-log10_pValue\n\n\n\n\n0\nApoptotic cleavage of cellular proteins\n0.000134\n3.874\n\n\n1\nConstitutive Signaling by AKT1 E17K in Cancer\n0.000889\n3.051\n\n\n2\nApoptotic execution phase\n0.001225\n2.912\n\n\n3\nSUMO E3 ligases SUMOylate target proteins\n0.002371\n2.625\n\n\n4\nSUMOylation\n0.003650\n2.438\n\n\n\n\n\n\n\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nplot_path(out)\nplt.title('AKT1');",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#run",
    "href": "reactome_path.html#run",
    "title": "Reactome pathway analysis",
    "section": "Run",
    "text": "Run\n\nfrom katlas.core import *\nfrom katlas.plot import *\n\nFor the original human phosphoproteome (all-uppercase):\n\nsite= Data.get_combine_site_psp_ochoa()\n\nFor phosphorylated human phosphoproteome, uncheck below:\n\n# site = Data.get_combine_site_phosphorylated()\n\nFor PSP site, uncheck below:\n\n# site = Data.get_psp_human_site()\n\n# site['acceptor'] = site.site_seq.str[7]\n\n# # remove none sty-phosphoacceptor sequence\n# site = site['acceptor'].isin(['s','t','y'])]\n\n# # convert lowercase other than s,t,y to capital; convert rare aa to _\n# site['site_seq'] = site.site_seq.apply(convert_string)\n\n# site = site.reset_index(drop=True)\n\n# site.to_parquet('PSP_human_processed_sites.parquet')\n\n# site = pd.read_parquet('PSP_human_processed_sites.parquet')\n\nAs the original phosphoproteome is an all-uppercase dataset, we choose param to be param_CDDM_upper\n\nparam = param_CDDM_upper\n\n## for phosphorylated dataset, we will choose the standard param\n# param = param_CDDM\n## or\n# param = param_PSPA\n\n\nref = param['ref']\n\n\nresults = predict_kinase_df(site,'site_seq',**param)\n\ninput dataframe has a length 121419\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n\nresult_df = pd.concat([site,results],axis=1)",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#plot-score-distribution",
    "href": "reactome_path.html#plot-score-distribution",
    "title": "Reactome pathway analysis",
    "section": "Plot score distribution",
    "text": "Plot score distribution\n\nresult_df['acceptor'] =  result_df.site_seq.str[7].str.upper()\n\n\npalette = get_color_dict(['S','T','Y'],'tab20')\n\nhist_params = {'element':'poly',\n              'edgecolor': None,\n              'alpha':0.5,\n              'bins':100,\n              'kde':True,\n              'palette':palette}\n\n\npalette\n\n{'S': (0.12156862745098039, 0.4666666666666667, 0.7058823529411765),\n 'T': (0.6823529411764706, 0.7803921568627451, 0.9098039215686274),\n 'Y': (1.0, 0.4980392156862745, 0.054901960784313725)}\n\n\n\ndef plot_hist(df,colname,sty_thr=None,hue='acceptor'):\n    \n    \"Plot histogram of a column (kinase). \"\n    \n    plt.figure(figsize=(6,2))\n    \n    sns.histplot(data=df,x=colname,hue=hue,**hist_params)\n    \n    plt.xlabel('')\n    plt.title(colname)\n\n    if sty_thr:\n        for acceptor,thr in sty_thr.items():\n            if thr is not None:\n                plt.axvline(thr,color=palette[acceptor])",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#ratio-method-to-determine-threshold",
    "href": "reactome_path.html#ratio-method-to-determine-threshold",
    "title": "Reactome pathway analysis",
    "section": "Ratio method to determine threshold",
    "text": "Ratio method to determine threshold\n\nStep1: Locate the max phosphoacceptor in the STY ratio of a kinase\nStep2: Get top 2% sites for that phosphoacceptor, and get the number of sites.\nStep3: Use the number and STY ratio to calculate the number of sites for other phosphoacceptor.\n\n\ndef get_ratio(df, kinase, ref, pct=0.98):\n    # Copy relevant columns and explode gene column\n    data = df[['gene', 'acceptor', kinase]].copy()\n    data['gene'] = data.gene.str.split('|')\n    data = data.explode('gene')\n\n    # Get STY ratio from reference data\n    row = ref[['0S', '0T', '0Y']].loc[kinase]\n    if row['0Y'] &gt; 0.8: # apply to pspa\n        ratio = {'S': 0, 'T': 0, 'Y': 1}\n    elif 0.1 &lt; row['0Y'] &lt; 0.8: # does not apply to pspa\n        ratio = {'S': row['0S'], 'T': row['0T'], 'Y': row['0Y']}\n    else: # apply to pspa\n        total = row['0S'] + row['0T']\n        ratio = {'S': row['0S'] / total, 'T': row['0T'] / total, 'Y': 0}\n\n    # Calculate thresholds and get genes\n    sty_thr = {'S': None, 'T': None, 'Y': None}\n    g_list = []\n\n    # Identify the largest acceptor and calculate its total for top percentile\n    max_acceptor = max(ratio, key=ratio.get)\n    max_data = data[data['acceptor'] == max_acceptor]\n\n    thr = max_data[kinase].quantile(pct)\n    top_max_data = max_data[max_data[kinase]&gt;thr]\n    top_total = len(top_max_data)\n    \n    threshold_max = top_max_data[kinase].min()\n\n    # Scale other acceptors and get the threshold\n    for acceptor in ['S', 'T', 'Y']:\n        if ratio[acceptor] != 0:\n            scaled_data = data[data['acceptor'] == acceptor]\n            scaled_data = scaled_data.sort_values(kinase, ascending=False)\n            n_top = int(top_total * (ratio[acceptor] / ratio[max_acceptor]))\n            top_scaled_data = scaled_data.head(n_top)\n            \n\n            g_list.append(top_scaled_data['gene'])\n            sty_thr[acceptor] = top_scaled_data[kinase].min()\n\n    genes = pd.concat(g_list).drop_duplicates().dropna().tolist()\n\n    return sty_thr, genes",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#pipeline",
    "href": "reactome_path.html#pipeline",
    "title": "Reactome pathway analysis",
    "section": "Pipeline",
    "text": "Pipeline\n\nGet threshold and genes within the percentiile\n\n\nk = 'ATM'\n\n\nsty_threshold,genes = get_ratio(result_df,k,ref=ref)\n\n\nsty_threshold\n\n{'S': 2.6404023, 'T': 1.9869915, 'Y': None}\n\n\n\nwith threshold, plot score distribute\n\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nplot_hist(result_df,k,sty_threshold)\n\n\n\n\n\n\n\n\n\nrun reactoe pathway analysis\n\n\nout = get_reactome(genes)\n\n\n# exclude paths that has no variance across kinases\nexclude=['GTPase','SUMO']\nfor n in exclude:\n    out = out[~out.name.str.contains(n)]\n\n\nplot path\n\n\nplot_path(out,10)\nplt.title(k);",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#run-all-kinases-and-save-images",
    "href": "reactome_path.html#run-all-kinases-and-save-images",
    "title": "Reactome pathway analysis",
    "section": "Run all kinases and save images",
    "text": "Run all kinases and save images\n\nfrom pathlib import Path\nfrom fastcore.xtras import *\n\n\ndef get_img(df, kinase_list, ref, SAVE=False,save_folder='cddm',exclude=['GTPase','SUMO'],pct=0.98):\n\n    paths = []\n    for kinase in tqdm(kinase_list):\n\n        sty_thr,genes = get_ratio(df,kinase,ref=ref,pct=pct)\n\n        out = get_reactome(genes)\n\n        out['kinase'] = kinase\n        paths.append(out)\n\n        # plot score distribution\n        plot_hist(df,kinase,sty_thr)\n\n        distribute_figname = Path(f'{save_folder}/score_distribute/{kinase}.png')\n        distribute_figname.parent.mkdir(parents=True,exist_ok=True)\n        \n        plt.savefig(distribute_figname,bbox_inches='tight', pad_inches=0.3) if SAVE else plt.show()\n        plt.close()\n\n\n        # exclude paths that has no variance across kinases\n        out_cut = out.copy()\n        for n in exclude:\n            out_cut = out_cut[~out_cut.name.str.contains(n)]\n            \n        # plot pathway bargraph\n        plot_path(out_cut,10)\n        \n        # title_acceptor ='/'.join(acceptors)\n        # plt.title(f'{kinase}, top 2% substrates in {title_acceptor} sites')\n\n        path_figname = Path(f'{save_folder}/path_fig/{kinase}.png')\n        path_figname.parent.mkdir(parents=True,exist_ok=True)\n        \n        plt.savefig(path_figname,bbox_inches='tight', pad_inches=0) if SAVE else plt.show()\n        plt.close()\n    return paths\n\n\npaths = get_img(result_df,['ATM','AKT1','EGFR'],ref,SAVE=False,save_folder='test')\n\n  0%|          | 0/3 [00:00&lt;?, ?it/s]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 33%|███▎      | 1/3 [00:01&lt;00:02,  1.39s/it]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n 67%|██████▋   | 2/3 [00:02&lt;00:01,  1.32s/it]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n100%|██████████| 3/3 [00:03&lt;00:00,  1.32s/it]\n\n\nUncheck below to generate figures for all of the kinases:\n\n# paths = get_img(result_df,ref.index,ref,SAVE=True,save_folder='test')\n\nThe above line will create two folders under the {save_folder}: - path_fig folder contains the pathway analysis. - score_distribute folder contains histogram of score distribution.",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#combine-images-for-pdf",
    "href": "reactome_path.html#combine-images-for-pdf",
    "title": "Reactome pathway analysis",
    "section": "Combine images for pdf",
    "text": "Combine images for pdf\n\ndef combine_images_vertically(image_paths, output_path):\n    # Open images and convert them to 'RGBA' for uniformity\n    images = [Image.open(image_path).convert('RGBA') for image_path in image_paths]\n    \n    # Calculate the total width as the maximum width of any image\n    total_width = max(image.width for image in images)\n    # Calculate the total height by summing the heights of all images\n    total_height = sum(image.height for image in images)\n    \n    # set the background white board size\n    # total_width, total_height = 2010,1200\n    total_width, total_height = 3000,1750\n\n    # Create a new image with a white background in 'RGBA' mode\n    combined_image = Image.new('RGBA', (total_width, total_height), (255, 255, 255, 255))\n\n    # Initialize the y_offset to start pasting images from the top\n    y_offset = 0\n    for image in images:\n        # Calculate the x position to center the image\n        x_offset = (total_width - image.width) // 2\n        # Paste the current image into the combined image\n        combined_image.paste(image, (x_offset, y_offset), image)\n        # Update the y_offset to move to the next position for the next image\n        y_offset += image.height\n\n    # Save the combined image to the specified output path\n    combined_image.save(output_path)\n\nUncheck below to merge the pathway figures and score distribution figures together:\n\n# folders = [\"test/score_distribute\", \"test/path_fig\"]\n# for k in tqdm(ref.index):\n#     filename = f\"{k}.png\"\n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n#     output_path = Path(f\"test/combine/{k}.png\")\n#     output_path.parent.mkdir(parents=True,exist_ok=True)\n    \n#     combine_images_vertically(image_paths, output_path)",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "reactome_path.html#save-path-in-csv",
    "href": "reactome_path.html#save-path-in-csv",
    "title": "Reactome pathway analysis",
    "section": "Save path in csv",
    "text": "Save path in csv\nUncheck below to save pathway csv:\n\n# path_data = pd.concat(paths)\n\n# path_data = path_data[['kinase','name','pValue','-log10_pValue']]\n\n# path_data.columns = ['kinase','Reactome_pathway','pValue','neg_log10_pValue']\n\n# path_data.to_csv('pathway_analysis.csv',index=False)",
    "crumbs": [
      "Reactome pathway analysis"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html",
    "href": "plot_heatmap_logo_cddm.html",
    "title": "Plot heatmap and logo of CDDM",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom katlas.core import *\nfrom katlas.plot import *\n\nfrom scipy.stats import spearmanr, pearsonr\n\nimport os\nfrom PIL import Image\nfrom tqdm import tqdm\n\n\ndef plot_count(df_k,title):\n    # Get value counts\n    source_counts = df_k.source.replace({'pplus':'PP','large_scale':'LS'}).value_counts()\n    plt.figure(figsize=(7,1))\n\n    source_counts.plot(kind='barh', stacked=True, color=['darkred', 'darkblue'])\n    # Annotate with the actual values\n    for index, value in enumerate(source_counts):\n        plt.text(value, index, str(value),fontsize=10,rotation=-90, va='center')\n\n    plt.xlabel('Count')\n    plt.title(title)\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#setup",
    "href": "plot_heatmap_logo_cddm.html#setup",
    "title": "Plot heatmap and logo of CDDM",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom katlas.core import *\nfrom katlas.plot import *\n\nfrom scipy.stats import spearmanr, pearsonr\n\nimport os\nfrom PIL import Image\nfrom tqdm import tqdm\n\n\ndef plot_count(df_k,title):\n    # Get value counts\n    source_counts = df_k.source.replace({'pplus':'PP','large_scale':'LS'}).value_counts()\n    plt.figure(figsize=(7,1))\n\n    source_counts.plot(kind='barh', stacked=True, color=['darkred', 'darkblue'])\n    # Annotate with the actual values\n    for index, value in enumerate(source_counts):\n        plt.text(value, index, str(value),fontsize=10,rotation=-90, va='center')\n\n    plt.xlabel('Count')\n    plt.title(title)\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#load-data",
    "href": "plot_heatmap_logo_cddm.html#load-data",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Load data",
    "text": "Load data\n\ndf = Data.get_ks_dataset()\ndf['SUB'] = df.substrate.str.upper()\n\n\ninfo = Data.get_kinase_info().query('pseudo==\"0\"')\n\n\n# It only contains kinase on the tree\ncnt = df.kinase_paper.value_counts()\n\n\nST = info[info.group!=\"TK\"].kinase\n\n\ndf[df.kinase_paper.isin(ST)].kinase_paper.value_counts()[10:20]\n\nNEK6     950\nPLK1     943\nCK2A1    919\nP38D     907\nDYRK2    907\nHGK      902\nTTBK1    896\nMST3     890\nMST1     884\nIKKE     880\nName: kinase_paper, dtype: int64\n\n\n\ncnt = cnt[cnt&gt;100]",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#generate-example-figures",
    "href": "plot_heatmap_logo_cddm.html#generate-example-figures",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Generate example figures",
    "text": "Generate example figures\n\ndef plot_heatmap2(matrix, title, figsize=(6,10), label_size=20):\n    plt.figure(figsize=figsize)\n    sns.heatmap(matrix, cmap='binary', annot=False,cbar=False)\n    plt.title(title,fontsize=label_size)\n        # Set the font size for the tick labels\n    plt.xticks(fontsize=label_size)\n    plt.yticks(fontsize=label_size)\n    plt.xlabel('')\n    plt.ylabel('')\n\n\nkinase_list = ['SRC','ABL1','ERK2','PKACA']\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\nfor k in kinase_list:\n    df_k = df.query(f'kinase==\"{k}\"')\n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n\n    paper,full = get_freq(df_k)\n\n    plot_heatmap2(full.drop(columns=[0]),f'{k}',figsize=(6,10))\n    plt.show()\n    plt.close()\n        \n    break\n\n    # if you want to generate and save all of figures, uncomment below\n    # plt.savefig(f'fig/{k}.png',bbox_inches='tight', pad_inches=0.3)\n    # plt.close()",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#generate-all-figures",
    "href": "plot_heatmap_logo_cddm.html#generate-all-figures",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Generate all figures",
    "text": "Generate all figures\nUncomment plt.savefig to save figures\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\nfor k in tqdm(cnt.index,total=len(cnt)):\n    \n    df_k = df.query(f'kinase==\"{k}\"')\n    \n    plot_count(df_k,k)\n    # plt.savefig(f'fig/count/{k}.png',bbox_inches='tight', pad_inches=0.1)\n    plt.show() # if visualize in jupyter notebook, uncheck the savefig\n    plt.close()\n    \n    \n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    paper,full = get_freq(df_k)\n\n    get_logo2(full, k)\n    # plt.savefig(f'fig/logo/{k}.png',bbox_inches='tight', pad_inches=0.3)\n    plt.show()\n    plt.close()\n\n    plot_heatmap(full.drop(columns=[0]),f'{k} (n={len(df_k)})',figsize=(7.5,10))\n    # plt.savefig(f'fig/heatmap/{k}.png',bbox_inches='tight', pad_inches=0)\n    plt.show()\n    plt.close()\n    # break\n    break\n\n  0%|          | 0/289 [00:00&lt;?, ?it/s]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  0%|          | 0/289 [00:02&lt;?, ?it/s]",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#combine-figures-for-pdf",
    "href": "plot_heatmap_logo_cddm.html#combine-figures-for-pdf",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Combine figures for pdf",
    "text": "Combine figures for pdf\n\ndef combine_images_vertically(image_paths, output_path):\n    images = [Image.open(image_path).convert('RGBA') for image_path in image_paths]\n    \n    total_width = max(image.width for image in images)\n    total_height = sum(image.height for image in images)\n\n    combined_image = Image.new('RGBA', (total_width, total_height))\n\n    y_offset = 0\n    for image in images:\n        combined_image.paste(image, (0, y_offset), image)\n        y_offset += image.height\n\n    combined_image.save(output_path)\n\nUncomment below to run\n\n# folders = [\"fig/count\", \"fig/logo\", \"fig/heatmap\"]\n# for k in tqdm(cnt.index,total=len(cnt)):\n#     filename = f\"{k}.png\"\n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n#     output_path = f\"fig/combine/{k}.png\"\n    \n#     combine_images_vertically(image_paths, output_path)\n#     # break",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#get-pssm-data-of-cddm",
    "href": "plot_heatmap_logo_cddm.html#get-pssm-data-of-cddm",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Get PSSM data of CDDM",
    "text": "Get PSSM data of CDDM\n\nfor i,k in enumerate(cnt.index):\n    \n    df_k = df.query(f'kinase==\"{k}\"')\n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    paper,full = get_freq(df_k)\n\n    melt = full.drop(columns = [0]).reset_index().melt(id_vars=['aa'], value_name=k, var_name='Position')\n    melt['substrate']=melt['Position'].astype(str)+ melt['aa']\n\n    position_0 = full[0][['s','t','y']].reset_index().rename(columns={0:k})\n    position_0['substrate'] = '0'+position_0['aa']\n\n    if i ==0:\n        first = pd.concat([melt,position_0])[['substrate',k]].set_index('substrate')\n    else:\n        k = pd.concat([melt,position_0])[['substrate',k]].set_index('substrate')\n        data = pd.concat([first,k],axis=1)\n        first = data.copy()\n    \n    # break\n\n\ndata = data.T\n\ndata.index = data.index.rename('kinase')\n\nTo save\n\n# data.to_csv('supp/CDDM.csv')\n\n# data.to_parquet('ks_main.parquet')",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#get-specialized-cddm-data-for-all-capital-substrates",
    "href": "plot_heatmap_logo_cddm.html#get-specialized-cddm-data-for-all-capital-substrates",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Get specialized CDDM data for all-capital substrates",
    "text": "Get specialized CDDM data for all-capital substrates\n\ncombine s,t,y to S,T,Y\n\n\n# List of suffixes\nsuffixes = ['S', 'T', 'Y']\n\nfor suffix in suffixes:\n    for i in range(-7, 8):  # looping from -7 to 7\n        if i == 0:  # Skip 0\n            continue\n        \n        upper_col = f\"{i}{suffix}\"  # e.g., -7S\n        lower_col = f\"{i}{suffix.lower()}\"  # e.g., -7s\n        data[upper_col] = data[upper_col] + data[lower_col]\n        data.drop(lower_col, axis=1,inplace=True)  # Drop the lowercase column after combining\n\n\ndata.columns[data.columns.str.contains('S')]\n\nIndex(['-7S', '-6S', '-5S', '-4S', '-3S', '-2S', '-1S', '1S', '2S', '3S', '4S',\n       '5S', '6S', '7S'],\n      dtype='object', name='substrate')\n\n\n\n# make sure the \"s\" in positions other than 0 is deleted from the columns\ndata.columns[data.columns.str.contains('s')]\n\nIndex(['0s'], dtype='object', name='substrate')\n\n\n\n# Make sure very position's sum is 1\ndata.loc[:,data.columns.str.contains('-7')].sum(1).sort_values()\n\nkinase\nDDR2      1.0\nNEK11     1.0\nMSK1      1.0\nTEK       1.0\nNIM1      1.0\n         ... \nCAMK2G    1.0\nPKG2      1.0\nMELK      1.0\nNEK1      1.0\nTLK2      1.0\nLength: 289, dtype: float64\n\n\n\ndata = data.rename(columns={'0s':'0S','0t':'0T','0y':'0Y'})\n\n\ndata.index = data.index.rename('kinase')\n\nTo save\n\n# data.to_parquet('ks_main_upper.parquet')\n# data.to_csv('supp/CDDM_upper.csv')",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#plot-other-kinases-mutated-lipid-kinase-isoforms",
    "href": "plot_heatmap_logo_cddm.html#plot-other-kinases-mutated-lipid-kinase-isoforms",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Plot other kinases (mutated, lipid kinase, isoforms)",
    "text": "Plot other kinases (mutated, lipid kinase, isoforms)\n\nkinases not on kinome tree\n\n\ncnt_other = df.query('on_tree==0').kinase.value_counts()\n\ncnt_other = cnt_other[cnt_other&gt;100]\n\n\nothers = cnt_other.index.tolist()+['LYN','ABL1','RET','FGFR3','PDGFRA','ALK',\n                          'EGFR','KIT','MET','PKCB','BRAF','PKG1'] # BRAF is less than 100\n\nUncheck savefig to save figures\n\nfor k in tqdm(others,total=len(others)):\n    df_k = df.query(f'kinase==\"{k}\"')\n    \n    plot_count(df_k,k)\n    # plt.savefig(f'fig_others/count/{k.replace(\"/\", \"_\")}.png',bbox_inches='tight', pad_inches=0.1)\n    plt.show() # if visualize in jupyter notebook, uncheck the savefig\n    plt.close()\n    \n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    paper,full = get_freq(df_k)\n    \n    get_logo2(full,k)\n    # plt.savefig(f'fig_others/logo/{k.replace(\"/\", \"_\")}.png',bbox_inches='tight', pad_inches=0.3)\n    plt.show()\n    plt.close()\n    \n    plot_heatmap(full.drop(columns=[0]),f'{k} (n={len(df_k)})',figsize=(7.5,10))\n    # plt.savefig(f'fig_others/heatmap/{k.replace(\"/\", \"_\")}.png',bbox_inches='tight', pad_inches=0)\n    plt.show()\n    plt.close()\n    \n    break\n\n  0%|          | 0/36 [00:00&lt;?, ?it/s]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  0%|          | 0/36 [00:01&lt;?, ?it/s]",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#combine-the-figures-for-pdf",
    "href": "plot_heatmap_logo_cddm.html#combine-the-figures-for-pdf",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Combine the figures for pdf",
    "text": "Combine the figures for pdf\nUncomment below to run\n\n# folders = [\"fig_others/count\", \"fig_others/logo\", \"fig_others/heatmap\"]\n# for k in tqdm(others,total = len(others)):\n#     k = k.replace(\"/\", \"_\")\n    \n#     filename = f\"{k}.png\"\n    \n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n    \n#     output_path = f\"fig_others/combine/{k}.png\"\n    \n#     combine_images_vertically(image_paths, output_path)\n#     # break",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_cddm.html#get-the-pssms-of-other-kinases",
    "href": "plot_heatmap_logo_cddm.html#get-the-pssms-of-other-kinases",
    "title": "Plot heatmap and logo of CDDM",
    "section": "Get the PSSMs of other kinases",
    "text": "Get the PSSMs of other kinases\n\nfor i,k in enumerate(others):\n    df_k = df.query(f'kinase==\"{k}\"')\n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    paper,full = get_freq(df_k)\n    \n    melt = full.drop(columns = [0]).reset_index().melt(id_vars=['aa'], value_name=k, var_name='Position')\n    melt['substrate']=melt['Position'].astype(str)+ melt['aa']\n\n    position_0 = full[0][['s','t','y']].reset_index().rename(columns={0:k})\n    position_0['substrate'] = '0'+position_0['aa']\n\n    if i ==0:\n        first = pd.concat([melt,position_0])[['substrate',k]].set_index('substrate')\n    else:\n        k = pd.concat([melt,position_0])[['substrate',k]].set_index('substrate')\n        data = pd.concat([first,k],axis=1)\n        first = data.copy()\n\n\ndata = data.T\n\ndata.index = data.index.rename('kinase')\n\nTo save:\n\n# data.to_csv('supp/CDDM_others.csv')\n\n# data.to_parquet('ks_others.parquet')",
    "crumbs": [
      "Plot heatmap and logo of CDDM"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_pspa.html",
    "href": "plot_heatmap_logo_pspa.html",
    "title": "Plot heatmap and logo of PSPA",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom katlas.core import *\nfrom katlas.plot import *\n\nfrom scipy.stats import spearmanr, pearsonr\n\nimport os\nfrom PIL import Image\nfrom tqdm import tqdm\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")",
    "crumbs": [
      "Plot heatmap and logo of PSPA"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_pspa.html#setup",
    "href": "plot_heatmap_logo_pspa.html#setup",
    "title": "Plot heatmap and logo of PSPA",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom katlas.core import *\nfrom katlas.plot import *\n\nfrom scipy.stats import spearmanr, pearsonr\n\nimport os\nfrom PIL import Image\nfrom tqdm import tqdm\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")",
    "crumbs": [
      "Plot heatmap and logo of PSPA"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_pspa.html#load-data",
    "href": "plot_heatmap_logo_pspa.html#load-data",
    "title": "Plot heatmap and logo of PSPA",
    "section": "Load data",
    "text": "Load data\n\ndf = Data.get_pspa_all_norm()\n\n\ninfo= Data.get_kinase_info().query('pseudo==\"0\"')\n\n\nraw = pd.read_csv('raw/pspa_st_raw.csv').set_index('kinase')\n\n\ndef logo_func(df:pd.DataFrame, # a dataframe that contains ratios for each amino acid at each position\n              title: str='logo', # title of the motif logo\n              figsize=(7,2.5)\n             ):\n    \"Use logomaker plot motif logos given a df matrix \"\n    \n    # Indicates color scheme of the amino acid\n    aa = {\n        'AG': '#037f04',\n        'DEsty': '#da143e', # sty seems to be the same color as big ST&Y even though we set it here\n        'F': '#84380b',\n        'HQN': '#8d2be1',\n        'LMIFWTVC': '#d9a41c',\n        'P': '#000000',\n        'RK': '#0000ff',\n        'ST': '#8d008d', # STY overwrites the previous s,t,y as logomaker does not distingusih capital and lower case\n        'Y': '#84380b',\n        \n        # some old settings\n        # 'st':'#8d2be1',\n        # 'y':'#8d2be1'\n        # 'pS/pT':'#8d2be1',# logomaker does not support double letters like pS or pT\n        # 'pY':'#8d2be1'\n    }\n    \n    # Use logomaker to plot\n    logo = logomaker.Logo(df,color_scheme = aa,flip_below=False,figsize=figsize) #5.5,2.5\n    \n    logo.style_xticks(fmt='%d')\n    logo.ax.set_yticks([])\n    logo.ax.set_title(title)\n\n\nimport logomaker\n\n\ndef get_logo(df: pd.DataFrame, # stacked Dataframe with kinase as index, substrates as columns\n             kinase: str, # a specific kinase name in index\n             figsize = (7,2.5)\n             ):\n    \"Given stacked df (index as kinase, columns as substrates), get a specific kinase's logo\"\n    \n    \n    # get raw kinase to calculate S/T\n    pp = get_one_kinase(df,kinase,normalize=False)\n    \n    # get S/T ratio value\n    ss = pp['S'].sum()\n    st = pp['T'].sum()\n\n    S_ctrl = 0.75*ss - 0.25*st\n    T_ctrl = 0.75*st - 0.25*ss\n\n    S0 = S_ctrl / max(S_ctrl, T_ctrl)\n    T0 = T_ctrl / max(S_ctrl, T_ctrl)\n\n    S_ratio = S0/(S0+T0)\n    T_ratio = T0/(S0+T0)\n    \n    # get normalized kinase\n    norm_p = get_one_kinase(df,kinase, normalize=True)\n    \n    # calculate ratio, divide values by median, followed by log2 transformation\n    ratio =norm_p.apply(lambda r: r/r.median(),axis=1)\n    ratio = np.log2(ratio)\n\n    m = ratio.apply(lambda row: row[row &gt; 0].sum(), axis=1).max()\n\n    new_row = pd.DataFrame({'S': S_ratio*m, 'T':T_ratio*m}, index=[0]) \n\n    ratio2 = pd.concat([ratio, new_row], ignore_index=False).fillna(0)\n    \n    # plot logo\n    logo_func(ratio2, kinase,figsize)\n\n\ndef get_tyr_logo(df_norm,kinase,figsize):\n    \n    norm_p = get_one_kinase(df_norm,kinase, normalize=False)\n    ratio =norm_p.apply(lambda r: r/r.median(),axis=1)\n    ratio = np.log2(ratio)\n    ratio = ratio.drop([0])\n    \n    m = ratio.apply(lambda row: row[row &gt; 0].sum(), axis=1).max()\n    new_row = pd.DataFrame({'Y': 1*m}, index=[0]) \n    ratio2=pd.concat([ratio, new_row], ignore_index=False).fillna(0)\n    logo_func(ratio2,kinase,figsize)\n\n\n## Test the logo function\n# for k in Tyr[:3]:\n#     get_tyr_logo(df,k)\n#     plt.show()\n#     plt.close()\n\n\nST = info[info.group!=\"TK\"].kinase",
    "crumbs": [
      "Plot heatmap and logo of PSPA"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_pspa.html#generate-all-figures",
    "href": "plot_heatmap_logo_pspa.html#generate-all-figures",
    "title": "Plot heatmap and logo of PSPA",
    "section": "Generate all figures",
    "text": "Generate all figures\nUncomment plt.savefig to save figures\n\ndef prepare_matrix(df,kinase,aa_order = ['P', 'G', 'A', 'C', 'S', 'T', 'V', 'I', 'L', 'M', 'F', 'Y', 'W', 'H', 'K', 'R', 'Q', 'N', 'D', 'E', 's', 't', 'y']):\n    d = df.loc[kinase].dropna()\n    d = d.to_frame().reset_index(names='position_aa')\n    d['aa'] = d.position_aa.str[-1]\n    d['position'] =d.position_aa.str[:-1].astype(int)\n    wide_form = d.pivot(index='aa',columns='position',values=kinase)\n    matrix = wide_form.drop(columns=[0])\n    column_order = matrix.columns.sort_values()\n    matrix = matrix.reindex(index=aa_order,columns=column_order)\n    return matrix\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nST = df[df['0Y']==0].index\nTyr = df[df['0Y']==1].index\n\n\nfor k in ST:\n    matrix=prepare_matrix(df,k)\n    plot_heatmap(matrix,title=k,figsize=(5.2,10))\n    plt.savefig(f'PSPA_heatmaps/heatmap/{k}.png',bbox_inches='tight', pad_inches=0)\n    # plt.show()\n    plt.close()\n    \n    get_logo(raw, k,(5.1,2.5)) # use raw data\n    plt.savefig(f'PSPA_heatmaps/logo/{k}.png',bbox_inches='tight', pad_inches=0.3)\n    # plt.show()\n    plt.close()\n    # break\n\n\nfor k in Tyr:\n    matrix=prepare_matrix(df,k)\n    plot_heatmap(matrix,title=k,figsize=(5.5,10))\n    plt.savefig(f'PSPA_heatmaps/heatmap/{k}.png',bbox_inches='tight', pad_inches=0)\n    # plt.show()\n    plt.close()\n    \n    get_tyr_logo(df, k,(5.3,2.5)) # use normalized data\n    plt.savefig(f'PSPA_heatmaps/logo/{k}.png',bbox_inches='tight', pad_inches=0.3)\n    # plt.show()\n    plt.close()\n    # break",
    "crumbs": [
      "Plot heatmap and logo of PSPA"
    ]
  },
  {
    "objectID": "plot_heatmap_logo_pspa.html#combine-figures-for-pdf",
    "href": "plot_heatmap_logo_pspa.html#combine-figures-for-pdf",
    "title": "Plot heatmap and logo of PSPA",
    "section": "Combine figures for pdf",
    "text": "Combine figures for pdf\n\ndef combine_images_vertically(image_paths, output_path):\n    images = [Image.open(image_path).convert('RGBA') for image_path in image_paths]\n    \n    total_width = max(image.width for image in images)\n    total_height = sum(image.height for image in images)\n\n    combined_image = Image.new('RGBA', (total_width, total_height))\n\n    y_offset = 0\n    for image in images:\n        combined_image.paste(image, (0, y_offset), image)\n        y_offset += image.height\n\n    combined_image.save(output_path)\n\nUncomment below to run\n\nfolders = [\"PSPA_heatmaps/logo\", \"PSPA_heatmaps/heatmap\"]\nfor k in tqdm(df.index,total=len(df)):\n    filename = f\"{k}.png\"\n    image_paths = [os.path.join(folder, filename) for folder in folders]\n    output_path = f\"PSPA_heatmaps/combine/{k}.png\"\n    \n    combine_images_vertically(image_paths, output_path)\n    # break\n\n100%|██████████| 396/396 [01:14&lt;00:00,  5.31it/s]\n\n\n\n# folders = [\"PSPA_heatmaps/logo\", \"PSPA_heatmaps/heatmap\"]\n# for k in tqdm(Tyr,total=len(Tyr)):\n#     filename = f\"{k}.png\"\n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n#     output_path = f\"PSPA_heatmaps/combine/{k}.png\"\n    \n#     combine_images_vertically(image_paths, output_path)\n#     break",
    "crumbs": [
      "Plot heatmap and logo of PSPA"
    ]
  },
  {
    "objectID": "ml_embedding.html",
    "href": "ml_embedding.html",
    "title": "Kinase embeddings",
    "section": "",
    "text": "import pandas as pd, seaborn as sns\n\nfrom katlas.imports import *\nfrom sklearn.preprocessing import StandardScaler\nfrom matplotlib import pyplot as plt\n\nfrom sklearn import set_config\nset_config(transform_output = \"pandas\")",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "ml_embedding.html#setup",
    "href": "ml_embedding.html#setup",
    "title": "Kinase embeddings",
    "section": "",
    "text": "import pandas as pd, seaborn as sns\n\nfrom katlas.imports import *\nfrom sklearn.preprocessing import StandardScaler\nfrom matplotlib import pyplot as plt\n\nfrom sklearn import set_config\nset_config(transform_output = \"pandas\")",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "ml_embedding.html#preprocess-target",
    "href": "ml_embedding.html#preprocess-target",
    "title": "Kinase embeddings",
    "section": "Preprocess target",
    "text": "Preprocess target\nWe will standardize each kinase’s PSSMs individually, so that each PSSM will have a mean of 0.\n\n# load target\ntarget = pd.read_csv('train_data/combine_freq_PSPA.csv').set_index('kinase')\n\n\n# standardize 0s,0t,0y\nv0 = StandardScaler().fit_transform(target.iloc[:,-3:].T).T\n\n# standardize all other positions\nvv = StandardScaler().fit_transform(target.iloc[:,:-3].T).T\n\n# combine the two\nv = pd.concat([vv,v0],axis=1)\n\n\nv\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n-3S\n-3T\n-3V\n-3I\n-3L\n-3M\n-3F\n-3Y\n-3W\n-3H\n-3K\n-3R\n-3Q\n-3N\n-3D\n-3E\n-3s\n-3t\n-3y\n-2P\n-2G\n-2A\n-2C\n-2S\n-2T\n-2V\n-2I\n-2L\n-2M\n-2F\n-2Y\n-2W\n-2H\n-2K\n-2R\n-2Q\n-2N\n-2D\n-2E\n-2s\n-2t\n-2y\n-1P\n-1G\n-1A\n-1C\n-1S\n-1T\n-1V\n-1I\n-1L\n-1M\n-1F\n-1Y\n-1W\n-1H\n-1K\n-1R\n-1Q\n-1N\n-1D\n-1E\n-1s\n-1t\n-1y\n1P\n1G\n1A\n1C\n1S\n1T\n1V\n1I\n1L\n1M\n1F\n1Y\n1W\n1H\n1K\n1R\n1Q\n1N\n1D\n1E\n1s\n1t\n1y\n2P\n2G\n2A\n2C\n2S\n2T\n2V\n2I\n2L\n2M\n2F\n2Y\n2W\n2H\n2K\n2R\n2Q\n2N\n2D\n2E\n2s\n2t\n2y\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n\n\n\n\nSRC\n0.288615\n0.937824\n0.905363\n-1.058492\n-0.441744\n-0.555355\n0.256155\n0.045162\n0.954054\n-0.944880\n-0.328132\n-1.512938\n-1.448017\n-0.798808\n1.100126\n0.223695\n0.158774\n-0.068449\n1.668183\n2.463463\n-0.474204\n-0.879959\n-0.490435\n0.479723\n1.257423\n0.593137\n-0.978465\n-0.233169\n-0.670626\n0.204287\n-0.265573\n1.435646\n-0.994667\n-0.459998\n-1.415922\n-1.415922\n-0.978465\n0.350106\n0.285298\n0.058468\n0.042266\n1.613869\n2.294357\n0.058468\n-0.784040\n-0.476201\n0.251267\n0.947354\n1.206363\n-1.302788\n-0.444820\n-0.736205\n0.299831\n-0.461008\n0.558840\n-1.140907\n-0.752393\n-1.335164\n-1.416104\n-0.946650\n0.526464\n0.008446\n0.477900\n0.008446\n1.821510\n3.764078\n-0.088682\n-0.849522\n-0.396256\n0.816792\n1.431673\n0.719706\n-1.189660\n-0.574780\n-0.914582\n0.363722\n-0.315883\n0.331360\n-1.189660\n-0.623323\n-1.497100\n-1.367652\n-0.833677\n0.671163\n-0.299702\n0.201912\n0.363722\n2.192183\n2.483442\n0.234274\n-0.623323\n-0.380607\n0.541714\n0.153368\n0.849154\n-1.011668\n-0.801315\n-0.801315\n2.062734\n1.399311\n2.192183\n-1.286747\n-0.202615\n-1.416195\n-1.302928\n-0.704228\n-0.315883\n-0.801315\n-0.218796\n-0.315883\n0.946241\n1.787656\n-0.445331\n-0.251158\n-0.056985\n-0.847837\n2.153449\n0.855596\n-1.107408\n-0.361142\n-1.042515\n0.709587\n0.222892\n0.806926\n-1.091184\n-0.458481\n-1.496764\n-1.366978\n-0.815391\n0.222892\n-0.361142\n0.482463\n-0.231356\n1.715424\n2.656368\n0.044437\n-0.636936\n-0.052902\n0.183643\n0.868580\n1.064276\n-1.006844\n-0.354522\n-0.664375\n0.787040\n0.004254\n1.308897\n-0.957920\n-0.550219\n-1.414545\n-1.267772\n-0.908996\n-0.044670\n-0.012054\n0.199951\n0.020562\n1.178433\n2.287379\n0.118410\n-0.582835\n-0.256674\n0.797607\n0.535536\n0.781228\n-1.020510\n-0.496368\n-0.823957\n0.895884\n0.338983\n2.468309\n-0.987751\n0.142430\n-1.151545\n-1.331719\n-0.545506\n0.126050\n0.437260\n-0.430850\n-0.332574\n0.895884\n1.076058\n-0.348953\n-0.840336\n-0.185159\n0.623344\n1.116021\n0.935373\n-1.133872\n-0.378433\n-0.936801\n0.656189\n-0.148517\n1.165289\n-0.838265\n-0.394856\n-1.281675\n-1.265252\n-0.805420\n1.214557\n0.935373\n-0.197785\n-0.345588\n0.968218\n1.822192\n-0.411278\n-0.903956\n-0.394856\n-0.701944\n-0.712257\n1.414201\n\n\nEPHA3\n0.067908\n0.886947\n0.696473\n-1.093984\n-0.427324\n-0.617799\n0.201240\n-0.236850\n0.486951\n-0.941604\n-0.293993\n-1.246363\n-1.246363\n-0.636846\n1.458369\n0.753615\n0.410761\n0.277430\n1.305990\n2.086933\n-0.560656\n-0.941604\n-0.389230\n0.214614\n1.467628\n0.746195\n-0.943475\n-0.487833\n-0.715654\n0.461419\n-0.089147\n0.898076\n-0.810579\n-0.297983\n-1.399116\n-1.380131\n-0.791594\n0.803151\n0.613300\n-0.241028\n-0.203058\n1.790374\n1.695448\n-0.127117\n-0.715654\n-0.487833\n0.384444\n0.953685\n1.086508\n-1.190457\n-0.735064\n-0.773013\n0.441368\n0.023925\n1.067534\n-1.114558\n-0.526342\n-1.380204\n-1.342254\n-0.697114\n0.801888\n0.213672\n0.194697\n0.004950\n1.219331\n2.149092\n0.156748\n-0.848912\n-0.089924\n0.460343\n1.162407\n0.934711\n-1.057634\n-0.564291\n-0.981735\n-0.146848\n0.004950\n0.232646\n-1.114558\n-0.810962\n-1.456103\n-1.266355\n-0.886861\n1.124458\n0.118798\n0.365469\n-0.070949\n1.352154\n2.566535\n0.308545\n-0.431468\n0.156748\n-0.659165\n0.004950\n0.365469\n-1.228406\n-0.981735\n-0.829937\n0.782913\n0.707014\n2.187041\n-1.342254\n-0.279671\n-1.456103\n-1.266355\n-0.981735\n-0.184797\n-0.431468\n-0.317620\n1.048559\n2.851156\n2.016269\n-0.260696\n-0.108898\n0.365469\n-0.999870\n1.603924\n1.014744\n-0.961859\n-1.037882\n-1.322969\n1.375854\n0.330536\n0.862698\n-0.809812\n-0.638760\n-1.437003\n-1.189928\n-0.695777\n-0.277650\n-0.790806\n0.577611\n-0.448702\n1.908017\n3.580527\n-0.144609\n-0.828818\n0.330536\n-0.098097\n0.341678\n1.010901\n-1.035010\n-0.901165\n-1.035010\n0.666729\n-0.327545\n0.743212\n-0.977648\n-0.346666\n-1.417423\n-1.168855\n-0.805562\n0.188713\n-0.327545\n-0.155459\n0.073989\n2.750882\n2.980330\n0.112230\n-0.537873\n0.265195\n0.524962\n0.428830\n0.794130\n-0.840106\n-0.840106\n-0.897785\n1.255561\n0.544188\n3.178192\n-0.840106\n-0.109506\n-1.378443\n-1.359216\n-0.705522\n-0.205638\n0.294246\n-0.282543\n-0.551711\n1.005619\n0.794130\n-0.301769\n-0.494032\n-0.013375\n0.335763\n0.817219\n0.952026\n-0.973796\n-0.222726\n-0.742698\n0.643895\n-0.184209\n0.701669\n-0.819731\n-0.261242\n-1.301186\n-1.166379\n-0.761956\n0.701669\n0.374279\n-0.164951\n0.104664\n1.163867\n1.876421\n-0.319017\n-0.588632\n-0.164951\n-0.683583\n-0.730373\n1.413956\n\n\nFES\n0.326894\n0.640167\n1.204058\n-1.030623\n-0.341422\n-0.717350\n0.326894\n-0.049034\n0.828130\n-1.114162\n-0.383192\n-1.448320\n-1.364781\n-0.821774\n1.579985\n0.013621\n0.264239\n0.076275\n1.642640\n2.310956\n-0.466731\n-0.926198\n-0.550271\n0.678069\n1.136762\n0.490421\n-0.864810\n-0.552064\n-0.531214\n0.594670\n-0.239318\n1.220161\n-0.906509\n-0.176769\n-1.427752\n-1.386052\n-0.948208\n0.657219\n0.261075\n-0.218469\n0.010878\n1.741404\n1.762253\n-0.051671\n-0.739711\n-0.510365\n0.176670\n0.926839\n1.551979\n-1.156963\n-0.677688\n-0.990259\n0.343374\n-0.344280\n0.989353\n-1.115287\n-0.761040\n-1.490371\n-1.490371\n-0.844392\n0.864325\n0.239184\n0.489240\n-0.052548\n1.677007\n2.552204\n-0.094224\n-0.781878\n-0.010872\n0.572592\n1.218571\n0.760134\n-1.115287\n-0.802716\n-1.094449\n0.385050\n-0.219252\n0.489240\n-1.136125\n-0.906907\n-1.532047\n-1.240315\n-0.948583\n1.322761\n-0.302604\n0.385050\n0.155832\n1.739521\n2.677232\n0.260022\n-0.531822\n-0.135900\n0.051642\n0.155832\n0.906001\n-1.115287\n-0.969421\n-1.094449\n1.260247\n0.968515\n2.177119\n-1.281991\n0.009966\n-1.552885\n-1.302829\n-0.698526\n0.093318\n-0.469308\n-0.031710\n0.197508\n1.656169\n1.572817\n-0.406794\n-0.156738\n0.030804\n-0.570568\n1.728059\n1.289230\n-1.030294\n-0.758638\n-1.155673\n0.850401\n0.139916\n0.578745\n-1.134777\n-0.633258\n-1.531813\n-1.427329\n-0.758638\n-0.027256\n-0.779534\n0.578745\n-0.215326\n2.187784\n3.190822\n0.202606\n-0.654155\n-0.069050\n0.374255\n0.688411\n0.876905\n-1.049918\n-0.966143\n-1.028975\n0.876905\n0.164818\n1.337667\n-0.966143\n-0.149338\n-1.573511\n-1.091806\n-0.840481\n0.269537\n-0.400663\n-0.275000\n0.122931\n2.007866\n2.154472\n-0.086507\n-0.337831\n-0.107450\n0.107815\n0.696230\n0.801304\n-1.005970\n-0.795822\n-1.090029\n0.759274\n0.465067\n2.167266\n-0.816836\n-0.228422\n-1.510325\n-1.279162\n-0.816836\n0.191874\n0.170860\n-0.018274\n-0.396540\n1.620881\n1.536822\n-0.207407\n-0.459585\n0.107815\n0.257037\n1.077542\n1.308967\n-1.047357\n-0.479314\n-0.836971\n1.014427\n-0.311005\n1.266890\n-1.026318\n-0.332044\n-1.341897\n-1.236704\n-0.836971\n1.035465\n0.488462\n-0.058542\n-0.163735\n1.014427\n1.498315\n-0.226851\n-0.668662\n-0.395160\n-0.693206\n-0.720917\n1.414123\n\n\nNTRK3\n0.246599\n0.825353\n0.917953\n-1.211859\n-0.517355\n-0.563656\n0.223449\n-0.054352\n1.126304\n-1.165559\n-0.494205\n-1.535961\n-1.535961\n-0.957208\n1.728208\n0.570701\n0.038248\n0.246599\n1.589307\n2.191211\n-0.517355\n-0.702556\n-0.447905\n0.611505\n1.327439\n1.050303\n-0.912740\n-0.866550\n-0.843456\n0.519127\n-0.081333\n1.581479\n-0.889645\n-0.196806\n-1.536294\n-1.443916\n-0.935834\n0.565316\n0.542222\n-0.150617\n-0.081333\n1.281249\n1.535290\n-0.081333\n-0.751077\n-0.242996\n0.310085\n1.071751\n1.833417\n-1.236327\n-0.890115\n-1.005519\n0.563974\n-0.174611\n1.094832\n-1.213246\n-0.728550\n-1.559458\n-1.420973\n-0.705469\n1.071751\n0.310085\n0.033116\n0.263924\n1.094832\n1.833417\n0.194681\n-0.497742\n-0.243853\n0.308897\n1.254642\n1.162374\n-1.005920\n-1.075121\n-1.236590\n0.124361\n0.101294\n0.839437\n-1.075121\n-0.567648\n-1.582594\n-1.328858\n-1.052054\n1.139307\n-0.175510\n0.101294\n0.170495\n1.900517\n2.384923\n0.147428\n-0.383112\n-0.152443\n-0.106309\n0.908638\n1.323843\n-1.052054\n-1.190456\n-1.236590\n0.493432\n0.124361\n1.831316\n-1.490326\n-0.290844\n-1.651795\n-1.328858\n-0.798317\n0.078227\n-0.360045\n-0.014041\n0.908638\n1.831316\n1.393044\n0.078227\n-0.198576\n0.747169\n-0.797266\n1.696953\n1.073398\n-0.912740\n-1.236064\n-1.282254\n1.881710\n0.611505\n1.581479\n-1.051307\n-0.081333\n-1.674862\n-1.490105\n-0.704888\n0.218897\n-0.704888\n0.057234\n-0.312279\n1.004114\n1.789331\n0.126518\n-0.266090\n0.472938\n0.158406\n0.947407\n1.689996\n-0.909067\n-1.117920\n-1.117920\n0.970613\n0.088788\n1.202672\n-1.001890\n-0.352125\n-1.628450\n-1.233950\n-1.071508\n0.552906\n-0.143271\n-0.027242\n0.042376\n1.272290\n1.922056\n0.251229\n-0.398536\n-0.096859\n0.396704\n1.094985\n1.327746\n-0.813649\n-0.860201\n-1.139513\n1.164813\n0.326876\n2.538099\n-0.976581\n-0.441233\n-1.605034\n-1.418826\n-0.836925\n0.303600\n0.210496\n-0.278300\n-0.301576\n1.118261\n1.025157\n-0.045540\n-0.511061\n-0.278300\n0.097329\n1.216607\n1.146652\n-1.045268\n-0.532265\n-1.138541\n0.890151\n-0.112536\n1.263243\n-0.695494\n-0.555584\n-1.558271\n-1.278451\n-0.882040\n1.169970\n0.237238\n-0.182491\n-0.019263\n1.100015\n1.636336\n-0.089218\n-0.578902\n-0.089218\n-0.648459\n-0.764176\n1.412635\n\n\nALK\n-0.000966\n0.532096\n1.154002\n-1.222566\n-0.378551\n-0.600660\n0.132300\n-0.200864\n0.776416\n-1.067090\n-0.689504\n-1.378042\n-1.244777\n-0.689504\n1.487166\n0.665362\n0.154511\n0.265565\n1.909173\n2.442235\n-0.489606\n-0.889402\n-0.667293\n0.169237\n1.363510\n0.899070\n-0.870223\n-0.450016\n-0.936572\n0.301934\n-0.317319\n1.518323\n-0.781759\n-0.427900\n-1.445244\n-1.401011\n-0.980804\n0.832722\n0.943303\n-0.206738\n-0.206738\n1.341394\n2.093344\n-0.074041\n-0.848107\n-0.516364\n0.146070\n0.764946\n1.428027\n-1.135887\n-1.025373\n-0.936962\n0.433405\n-0.318087\n1.273308\n-1.157989\n-0.760141\n-1.467427\n-1.379016\n-0.738038\n1.140692\n0.344994\n0.278686\n-0.052854\n1.317513\n2.908908\n0.013454\n-0.804346\n-0.273881\n0.299645\n1.183215\n0.763520\n-1.047799\n-0.893174\n-0.981531\n0.078753\n-0.142140\n0.454270\n-1.069888\n-0.848995\n-1.533762\n-1.312870\n-0.981531\n1.337840\n-0.097961\n0.388002\n0.167110\n2.110964\n2.508570\n0.189199\n-0.628103\n0.056664\n0.189199\n0.608895\n0.918144\n-1.224513\n-1.047799\n-1.246602\n1.315751\n0.896055\n2.177232\n-1.379137\n-0.628103\n-1.555851\n-1.334959\n-1.025709\n-0.009604\n-0.407210\n-0.385121\n0.233378\n1.845893\n1.912161\n-0.186318\n-0.274675\n0.608895\n-0.870654\n1.538540\n1.229102\n-0.826449\n-1.069579\n-1.202195\n1.405924\n0.477611\n1.162794\n-0.936962\n-0.384395\n-1.533735\n-1.312708\n-0.782243\n0.322892\n-0.428600\n0.300789\n-0.472806\n1.052281\n2.599470\n0.168173\n-0.649627\n0.212378\n0.369469\n0.657155\n1.365304\n-0.869792\n-1.068959\n-1.179607\n1.188266\n0.192432\n1.321044\n-0.847662\n-0.205902\n-1.467292\n-1.268125\n-0.936181\n0.767803\n0.280950\n-0.050994\n-0.006735\n0.789932\n1.520211\n-0.028865\n-0.515717\n-0.006735\n0.171369\n0.304228\n0.525659\n-0.692214\n-0.825073\n-1.046505\n1.832106\n0.813520\n2.673546\n-0.913646\n-0.227208\n-1.400795\n-1.201507\n-0.780787\n0.259941\n0.990666\n-0.426496\n-0.426496\n0.459230\n0.636375\n-0.249351\n-0.404353\n-0.072206\n0.238907\n0.615570\n1.235957\n-0.979710\n-0.603047\n-0.979710\n0.704197\n0.194593\n1.324584\n-0.891084\n-0.204227\n-1.312061\n-1.179120\n-0.846770\n1.501837\n0.571257\n-0.204227\n-0.115600\n0.947920\n1.058704\n-0.292853\n-0.514420\n-0.270697\n-0.688690\n-0.725365\n1.414055\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nVRK2\n0.913815\n0.836508\n0.449975\n0.527282\n-0.158815\n-0.158815\n-0.158815\n-0.767604\n-0.777268\n-0.661308\n-0.158815\n0.643242\n0.382332\n0.933142\n-0.129825\n0.285698\n-0.458378\n-0.545348\n-0.187805\n-0.796594\n0.053779\n0.053779\n-0.120161\n1.238276\n1.354168\n0.658818\n0.687791\n-0.239341\n-0.239341\n-0.036531\n-0.722223\n-0.722223\n-0.239341\n-0.258657\n0.320801\n0.581557\n0.204910\n-0.326260\n0.233883\n-0.654619\n-0.490440\n-0.896060\n-0.490440\n-0.017216\n-0.017216\n0.069703\n1.617455\n1.392879\n0.416463\n0.133302\n-0.061981\n-0.061981\n-0.315849\n-0.374434\n-0.335378\n-0.061981\n-0.120566\n0.416463\n0.367642\n0.738680\n-0.638067\n0.367642\n-0.647831\n-0.032689\n-1.028633\n-0.930992\n-0.393963\n-0.393963\n-0.052217\n0.658854\n3.601795\n0.199955\n0.170027\n-0.009542\n-0.009542\n-0.548250\n-0.857508\n0.209931\n1.087825\n0.050314\n-0.209064\n-0.039471\n0.409453\n-0.308824\n0.499237\n-0.009542\n-0.029494\n-0.787676\n-0.977221\n-1.047054\n-1.047054\n-1.007149\n0.689069\n-0.112765\n-0.201857\n-0.201857\n0.223808\n0.223808\n1.391911\n0.293102\n0.986044\n0.223808\n-0.686917\n0.283203\n-0.597824\n2.421426\n0.372295\n0.500985\n-0.370143\n-0.132563\n-1.102683\n-1.795625\n-0.865102\n-0.865102\n-0.677018\n1.216846\n0.411378\n-0.261544\n-0.740747\n-0.006649\n-0.006649\n3.470116\n1.675657\n-0.924271\n0.340008\n-0.404285\n-0.006649\n0.574511\n-0.648984\n-0.006649\n3.694424\n1.104692\n-1.148578\n-2.229333\n-1.739934\n-1.811305\n-1.811305\n-0.740747\n-1.547487\n0.847371\n-0.244845\n0.216091\n0.105867\n0.105867\n0.616904\n2.210136\n2.160034\n1.809323\n1.568835\n1.198083\n1.969648\n0.105867\n-0.254865\n-0.765902\n-0.545454\n-1.417223\n-2.028463\n-2.309032\n-1.657711\n-1.657711\n-0.485332\n-1.216215\n1.073850\n0.200009\n-0.231889\n-0.171624\n-0.171624\n-0.171624\n-0.342374\n-0.402639\n-0.543257\n0.501334\n0.742393\n3.755636\n1.857293\n-0.523169\n2.389633\n-0.523169\n0.491290\n-1.708378\n-1.979570\n-1.366877\n-1.366877\n-0.292154\n0.050297\n0.827835\n0.296833\n-0.243651\n-0.243651\n-0.243651\n-0.613456\n-0.784135\n-0.471223\n-0.376401\n0.097708\n0.249422\n1.671749\n0.666638\n-0.746206\n-0.471223\n-0.651384\n-0.234169\n-0.243651\n-1.286690\n0.306316\n0.306316\n2.136376\n-0.134920\n1.286619\n-1.151698\n\n\nWNK4\n-0.787779\n-0.171271\n-0.107219\n-0.087202\n0.056916\n0.056916\n-0.167268\n0.261085\n0.409207\n0.056916\n0.589355\n0.869586\n0.689437\n0.593358\n0.713457\n1.746308\n-0.759756\n-0.363430\n-1.112046\n-0.935901\n-0.543578\n-0.543578\n-0.463512\n-0.640355\n0.075796\n-0.112449\n-0.186110\n-0.112449\n-0.112449\n-0.153372\n-0.096080\n-0.362079\n-0.042880\n-0.186110\n0.464564\n0.231304\n0.640533\n1.573576\n3.001786\n-0.149280\n-0.177926\n-0.873616\n-0.783585\n-0.501217\n-0.501217\n-0.996385\n-0.076874\n0.231143\n-0.080874\n-0.020871\n-0.076874\n-0.076874\n-0.008870\n-0.036872\n-0.192880\n0.127138\n-0.504898\n0.003131\n-0.596903\n0.459156\n1.595219\n3.991352\n-0.520899\n-0.508898\n-1.348945\n-1.032927\n-0.360890\n-0.360890\n-0.600903\n0.917850\n4.265395\n1.354307\n0.234341\n-0.276232\n-0.276232\n0.090227\n-0.440933\n-0.720925\n-0.552106\n-0.276232\n-0.259762\n-0.663279\n1.465480\n0.234341\n1.959583\n-0.877390\n-0.778570\n-1.527959\n-1.527959\n-0.609751\n-0.609751\n-1.124442\n-1.161009\n0.607030\n0.511573\n0.316508\n-0.231336\n-0.231336\n-0.281140\n-0.318492\n-0.231336\n1.590658\n-0.343394\n0.308207\n-0.708623\n0.299906\n1.794024\n4.271769\n0.059187\n-0.712773\n-1.563590\n-1.123656\n-1.181760\n-1.181760\n-0.488656\n-1.683890\n-0.145187\n-0.681278\n1.008839\n0.075796\n0.075796\n0.075796\n0.628256\n1.160254\n2.449327\n0.464564\n0.988378\n0.083981\n-0.308879\n-0.055157\n2.228343\n0.542318\n0.010320\n-1.667521\n-1.671613\n-1.336045\n-1.336045\n-0.906354\n-1.487522\n0.483187\n0.129790\n0.179681\n0.125632\n0.125632\n0.558024\n2.121287\n0.765905\n0.948840\n0.125632\n0.262833\n-0.186189\n0.113159\n-0.132140\n3.023489\n-0.988608\n-0.643526\n-0.872195\n-1.159070\n-1.271326\n-1.271326\n-0.951190\n-0.995206\n-0.404314\n-0.559371\n-0.035530\n0.002186\n0.002186\n-0.173824\n0.002186\n0.245248\n0.291346\n2.923121\n1.334837\n1.749719\n1.058249\n0.345826\n0.743945\n-0.869484\n-0.563561\n-0.735381\n-0.986825\n-1.309510\n-1.309510\n-0.756335\n-0.567130\n-0.202433\n-0.153807\n0.137950\n0.044750\n0.044750\n0.044750\n0.693100\n-0.072763\n0.364873\n0.826822\n0.583691\n0.891657\n0.413499\n0.802509\n1.110475\n-0.660330\n-0.332103\n-0.976401\n-0.745426\n-0.794052\n-0.794052\n-0.660330\n0.514442\n0.883617\n-1.398059\n\n\nYANK2\n-0.069665\n0.063579\n-0.005842\n-0.045031\n-0.069665\n-0.069665\n-0.234261\n-0.192832\n-0.205148\n-0.193951\n-0.101016\n0.009834\n-0.162600\n0.031108\n0.167712\n0.195704\n-0.139086\n-0.039433\n-0.010321\n-0.140206\n0.381574\n0.381574\n0.447636\n-0.046635\n0.037552\n-0.047674\n-0.123546\n-0.123546\n-0.123546\n-0.252425\n-0.315825\n-0.263858\n-0.165120\n-0.227481\n-0.167199\n-0.239953\n-0.123546\n-0.045596\n0.085362\n-0.180710\n-0.118350\n-0.014415\n0.254775\n1.038440\n1.038440\n0.124857\n-0.313425\n-0.360362\n-0.326835\n-0.324824\n-0.360362\n-0.360362\n-0.395229\n-0.442165\n-0.415344\n-0.412662\n-0.421379\n-0.358350\n-0.462951\n-0.375113\n-0.303367\n0.137165\n-0.422049\n-0.347622\n-0.112939\n-0.185355\n3.159876\n3.159876\n0.243778\n-0.063168\n-0.323353\n-0.219643\n-0.047702\n-0.219643\n-0.219643\n-0.292422\n-0.306978\n0.188830\n-0.074994\n0.002334\n-0.047702\n-0.315166\n-0.066807\n-0.367931\n-0.172336\n-0.247845\n-0.172336\n-0.419786\n-0.226011\n0.209755\n0.209755\n3.192793\n0.301826\n0.160395\n-0.064230\n-0.010748\n-0.064230\n-0.064230\n-0.304306\n-0.329264\n-0.101074\n0.084331\n-0.137917\n0.095028\n-0.275782\n-0.026199\n0.204369\n0.696406\n0.003514\n-0.105828\n-0.330453\n-0.211604\n-0.002429\n-0.002429\n0.484854\n-0.544935\n-0.456711\n-0.330677\n-0.021321\n-0.091213\n-0.091213\n0.132211\n0.566455\n0.024509\n0.729153\n0.840292\n-0.043091\n-0.237870\n-0.190894\n-0.213809\n-0.086630\n-0.039653\n-0.351301\n-0.475043\n-0.091213\n0.037113\n0.037113\n0.898726\n-0.678916\n-0.668713\n-0.626626\n-0.534799\n-0.553610\n-0.553610\n-0.575611\n-0.550741\n-0.575292\n-0.544045\n-0.532567\n-0.229665\n-0.458595\n-0.418102\n-0.569871\n-0.530335\n-0.557755\n-0.587089\n-0.553610\n-0.378884\n-0.293752\n-0.293752\n11.265940\n-0.543125\n-0.506080\n-0.350320\n-0.270336\n-0.173513\n-0.173513\n-0.023648\n0.010872\n-0.079216\n-0.137310\n-0.042170\n-0.103632\n-0.019438\n-0.168461\n-0.173513\n-0.197929\n-0.309907\n-0.392418\n-0.417676\n-0.351162\n0.975736\n0.975736\n2.471022\n-0.168368\n-0.304390\n-0.333419\n-0.362448\n-0.297755\n-0.297755\n-0.356642\n-0.213156\n-0.322637\n-0.281167\n-0.355813\n-0.236379\n-0.165051\n-0.152610\n0.179980\n0.192421\n-0.297755\n-0.315172\n-0.456170\n-0.344201\n0.189103\n0.189103\n4.510281\n0.213252\n1.104115\n-1.317366\n\n\nYANK3\n0.036918\n0.227998\n0.064757\n0.002751\n-0.064317\n-0.064317\n-0.118731\n-0.074440\n-0.044070\n-0.066848\n-0.065582\n-0.064317\n-0.044070\n-0.112403\n0.026794\n0.307720\n-0.174410\n-0.097218\n0.128029\n-0.093422\n0.122967\n0.122967\n0.043245\n0.055050\n0.259423\n0.032073\n-0.042904\n-0.092486\n-0.092486\n-0.126346\n-0.177137\n-0.217045\n-0.085230\n-0.213417\n-0.165044\n-0.142067\n-0.210998\n-0.069509\n0.225562\n-0.157788\n-0.092486\n0.229190\n0.130027\n0.472261\n0.472261\n0.009096\n-0.236397\n-0.265901\n-0.285289\n-0.311421\n-0.355255\n-0.355255\n-0.350197\n-0.378015\n-0.371271\n-0.384759\n-0.450510\n-0.355255\n-0.407519\n-0.434494\n-0.282760\n1.072728\n-0.359470\n-0.377172\n-0.279388\n-0.242298\n2.736742\n2.736742\n-0.063589\n0.000460\n-0.119404\n-0.157008\n0.082719\n-0.140556\n-0.140556\n-0.239268\n-0.219291\n0.164979\n0.021612\n-0.034794\n-0.124105\n-0.140556\n-0.135856\n-0.182861\n0.967597\n-0.184037\n-0.172285\n-0.310951\n-0.200488\n0.129725\n0.129725\n1.005201\n0.546474\n0.190063\n-0.171457\n-0.142075\n-0.116526\n-0.116526\n-0.167625\n-0.309422\n-0.145908\n0.064873\n-0.199561\n-0.070538\n-0.249382\n-0.116526\n0.100641\n0.727873\n0.055930\n0.027826\n-0.148463\n-0.177844\n0.054653\n0.054653\n0.308867\n-0.465117\n-0.361424\n-0.328094\n-0.112066\n-0.086143\n-0.086143\n0.073101\n0.637242\n-0.052813\n0.532314\n0.758217\n-0.086143\n-0.126879\n-0.326860\n-0.266372\n0.017551\n0.102727\n-0.281185\n-0.354017\n0.055818\n-0.009607\n-0.009607\n0.775500\n-0.689165\n-0.652955\n-0.644131\n-0.490467\n-0.609138\n-0.609138\n-0.609138\n-0.570190\n-0.540978\n-0.558322\n-0.536718\n-0.387315\n-0.317938\n-0.567451\n-0.651738\n-0.621005\n-0.626178\n-0.618875\n-0.630438\n-0.552237\n-0.278076\n-0.278076\n12.039666\n-0.463843\n-0.388116\n-0.340672\n-0.189218\n-0.233925\n-0.233925\n-0.038677\n0.055298\n-0.233925\n-0.247610\n-0.174620\n-0.121703\n-0.103455\n-0.165497\n-0.188306\n-0.091594\n-0.261296\n-0.305090\n-0.383554\n-0.240311\n1.003254\n1.003254\n2.343530\n-0.131072\n-0.287017\n-0.247593\n-0.356229\n-0.247593\n-0.247593\n-0.343088\n-0.322937\n-0.325566\n-0.294902\n-0.371999\n-0.290522\n-0.211673\n-0.227443\n-0.141585\n-0.111798\n-0.200284\n-0.242336\n-0.308044\n0.001219\n0.300844\n0.300844\n4.306364\n0.817024\n0.591165\n-1.408189\n\n\nYSK4\n-0.032950\n0.568875\n0.640203\n0.595623\n-0.015118\n-0.015118\n-0.371756\n-0.893337\n-0.746225\n-0.394045\n0.158742\n-0.001744\n0.689240\n0.283565\n-0.336092\n-0.015118\n-0.532242\n0.069583\n0.408388\n-0.411877\n0.457426\n0.457426\n-0.563448\n0.108431\n0.381554\n0.090522\n0.242754\n0.090522\n0.090522\n-0.540794\n-0.831827\n-0.352743\n-0.124394\n0.054702\n0.099477\n0.520354\n0.126341\n-0.478111\n-0.334833\n-0.209465\n0.229322\n0.327825\n0.211412\n0.292006\n0.292006\n-0.285581\n-0.156075\n0.392044\n-0.111147\n0.180883\n-0.111147\n-0.111147\n-1.077095\n-0.960282\n-0.758107\n-0.165061\n-0.241438\n0.091028\n0.531320\n0.171898\n-0.358250\n-0.236945\n0.082042\n0.989583\n1.187265\n0.046100\n0.203347\n0.203347\n0.207840\n-0.756930\n0.055572\n0.179110\n0.117341\n-0.286534\n-0.286534\n-1.004006\n-1.118041\n-1.260585\n-0.381564\n1.975165\n3.410109\n2.341028\n1.077137\n-1.659709\n-1.322355\n-0.286534\n0.340660\n0.725529\n-0.300789\n-0.604883\n-0.604883\n-0.348303\n0.278396\n-0.303281\n-0.345162\n-0.629020\n-0.098531\n-0.098531\n-0.991987\n-1.071095\n0.422652\n0.152753\n-0.396350\n1.116011\n-0.373083\n0.753044\n0.064339\n-0.172986\n-0.098531\n0.743737\n1.441750\n-0.177639\n-0.610407\n-0.610407\n1.004329\n-2.088449\n-1.134681\n-1.347178\n0.244082\n-1.134681\n-1.134681\n0.713553\n2.270221\n3.723111\n1.869935\n1.192908\n1.894644\n5.171060\n0.229257\n-1.525083\n-1.416364\n-1.268110\n-1.164332\n-1.648628\n-1.554734\n-0.393410\n-0.393410\n-1.105030\n-0.860170\n-0.401302\n-0.802812\n-0.468220\n-0.774132\n-0.774132\n-0.195767\n-0.774132\n-1.132623\n-0.917529\n-0.974887\n-0.554258\n-0.783692\n1.113919\n3.594675\n5.755180\n-0.057151\n1.348133\n-0.812371\n-1.247340\n0.535554\n0.535554\n-1.352497\n0.768778\n0.442187\n-0.233993\n-0.169595\n-0.017799\n-0.017799\n-0.192594\n-0.670981\n-0.463987\n-0.500786\n-0.040799\n-0.017799\n0.198394\n0.290392\n0.883775\n0.529585\n-0.008600\n0.635382\n-0.509985\n-0.606583\n0.276592\n0.276592\n-0.850376\n0.963629\n0.645691\n-0.036261\n-0.109986\n-0.036261\n-0.036261\n-0.626058\n-0.506256\n-0.460178\n-0.340375\n-0.552333\n-0.404884\n-0.192926\n0.350793\n1.074215\n0.171089\n0.737847\n0.180305\n0.019032\n-0.446354\n0.244814\n0.244814\n-0.884094\n0.450034\n0.936061\n-1.386095\n\n\n\n\n390 rows × 210 columns\n\n\n\n\n# get the index column out and rename it with 'kinase'\ntarget = v.reset_index().rename(columns={'index':'kinase'})\n\n\ntarget\n\n\n\n\n\n\n\n\nkinase\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n-3S\n-3T\n-3V\n-3I\n-3L\n-3M\n-3F\n-3Y\n-3W\n-3H\n-3K\n-3R\n-3Q\n-3N\n-3D\n-3E\n-3s\n-3t\n-3y\n-2P\n-2G\n-2A\n-2C\n-2S\n-2T\n-2V\n-2I\n-2L\n-2M\n-2F\n-2Y\n-2W\n-2H\n-2K\n-2R\n-2Q\n-2N\n-2D\n-2E\n-2s\n-2t\n-2y\n-1P\n-1G\n-1A\n-1C\n-1S\n-1T\n-1V\n-1I\n-1L\n-1M\n-1F\n-1Y\n-1W\n-1H\n-1K\n-1R\n-1Q\n-1N\n-1D\n-1E\n-1s\n-1t\n-1y\n1P\n1G\n1A\n1C\n1S\n1T\n1V\n1I\n1L\n1M\n1F\n1Y\n1W\n1H\n1K\n1R\n1Q\n1N\n1D\n1E\n1s\n1t\n1y\n2P\n2G\n2A\n2C\n2S\n2T\n2V\n2I\n2L\n2M\n2F\n2Y\n2W\n2H\n2K\n2R\n2Q\n2N\n2D\n2E\n2s\n2t\n2y\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n\n\n\n\n0\nSRC\n0.288615\n0.937824\n0.905363\n-1.058492\n-0.441744\n-0.555355\n0.256155\n0.045162\n0.954054\n-0.944880\n-0.328132\n-1.512938\n-1.448017\n-0.798808\n1.100126\n0.223695\n0.158774\n-0.068449\n1.668183\n2.463463\n-0.474204\n-0.879959\n-0.490435\n0.479723\n1.257423\n0.593137\n-0.978465\n-0.233169\n-0.670626\n0.204287\n-0.265573\n1.435646\n-0.994667\n-0.459998\n-1.415922\n-1.415922\n-0.978465\n0.350106\n0.285298\n0.058468\n0.042266\n1.613869\n2.294357\n0.058468\n-0.784040\n-0.476201\n0.251267\n0.947354\n1.206363\n-1.302788\n-0.444820\n-0.736205\n0.299831\n-0.461008\n0.558840\n-1.140907\n-0.752393\n-1.335164\n-1.416104\n-0.946650\n0.526464\n0.008446\n0.477900\n0.008446\n1.821510\n3.764078\n-0.088682\n-0.849522\n-0.396256\n0.816792\n1.431673\n0.719706\n-1.189660\n-0.574780\n-0.914582\n0.363722\n-0.315883\n0.331360\n-1.189660\n-0.623323\n-1.497100\n-1.367652\n-0.833677\n0.671163\n-0.299702\n0.201912\n0.363722\n2.192183\n2.483442\n0.234274\n-0.623323\n-0.380607\n0.541714\n0.153368\n0.849154\n-1.011668\n-0.801315\n-0.801315\n2.062734\n1.399311\n2.192183\n-1.286747\n-0.202615\n-1.416195\n-1.302928\n-0.704228\n-0.315883\n-0.801315\n-0.218796\n-0.315883\n0.946241\n1.787656\n-0.445331\n-0.251158\n-0.056985\n-0.847837\n2.153449\n0.855596\n-1.107408\n-0.361142\n-1.042515\n0.709587\n0.222892\n0.806926\n-1.091184\n-0.458481\n-1.496764\n-1.366978\n-0.815391\n0.222892\n-0.361142\n0.482463\n-0.231356\n1.715424\n2.656368\n0.044437\n-0.636936\n-0.052902\n0.183643\n0.868580\n1.064276\n-1.006844\n-0.354522\n-0.664375\n0.787040\n0.004254\n1.308897\n-0.957920\n-0.550219\n-1.414545\n-1.267772\n-0.908996\n-0.044670\n-0.012054\n0.199951\n0.020562\n1.178433\n2.287379\n0.118410\n-0.582835\n-0.256674\n0.797607\n0.535536\n0.781228\n-1.020510\n-0.496368\n-0.823957\n0.895884\n0.338983\n2.468309\n-0.987751\n0.142430\n-1.151545\n-1.331719\n-0.545506\n0.126050\n0.437260\n-0.430850\n-0.332574\n0.895884\n1.076058\n-0.348953\n-0.840336\n-0.185159\n0.623344\n1.116021\n0.935373\n-1.133872\n-0.378433\n-0.936801\n0.656189\n-0.148517\n1.165289\n-0.838265\n-0.394856\n-1.281675\n-1.265252\n-0.805420\n1.214557\n0.935373\n-0.197785\n-0.345588\n0.968218\n1.822192\n-0.411278\n-0.903956\n-0.394856\n-0.701944\n-0.712257\n1.414201\n\n\n1\nEPHA3\n0.067908\n0.886947\n0.696473\n-1.093984\n-0.427324\n-0.617799\n0.201240\n-0.236850\n0.486951\n-0.941604\n-0.293993\n-1.246363\n-1.246363\n-0.636846\n1.458369\n0.753615\n0.410761\n0.277430\n1.305990\n2.086933\n-0.560656\n-0.941604\n-0.389230\n0.214614\n1.467628\n0.746195\n-0.943475\n-0.487833\n-0.715654\n0.461419\n-0.089147\n0.898076\n-0.810579\n-0.297983\n-1.399116\n-1.380131\n-0.791594\n0.803151\n0.613300\n-0.241028\n-0.203058\n1.790374\n1.695448\n-0.127117\n-0.715654\n-0.487833\n0.384444\n0.953685\n1.086508\n-1.190457\n-0.735064\n-0.773013\n0.441368\n0.023925\n1.067534\n-1.114558\n-0.526342\n-1.380204\n-1.342254\n-0.697114\n0.801888\n0.213672\n0.194697\n0.004950\n1.219331\n2.149092\n0.156748\n-0.848912\n-0.089924\n0.460343\n1.162407\n0.934711\n-1.057634\n-0.564291\n-0.981735\n-0.146848\n0.004950\n0.232646\n-1.114558\n-0.810962\n-1.456103\n-1.266355\n-0.886861\n1.124458\n0.118798\n0.365469\n-0.070949\n1.352154\n2.566535\n0.308545\n-0.431468\n0.156748\n-0.659165\n0.004950\n0.365469\n-1.228406\n-0.981735\n-0.829937\n0.782913\n0.707014\n2.187041\n-1.342254\n-0.279671\n-1.456103\n-1.266355\n-0.981735\n-0.184797\n-0.431468\n-0.317620\n1.048559\n2.851156\n2.016269\n-0.260696\n-0.108898\n0.365469\n-0.999870\n1.603924\n1.014744\n-0.961859\n-1.037882\n-1.322969\n1.375854\n0.330536\n0.862698\n-0.809812\n-0.638760\n-1.437003\n-1.189928\n-0.695777\n-0.277650\n-0.790806\n0.577611\n-0.448702\n1.908017\n3.580527\n-0.144609\n-0.828818\n0.330536\n-0.098097\n0.341678\n1.010901\n-1.035010\n-0.901165\n-1.035010\n0.666729\n-0.327545\n0.743212\n-0.977648\n-0.346666\n-1.417423\n-1.168855\n-0.805562\n0.188713\n-0.327545\n-0.155459\n0.073989\n2.750882\n2.980330\n0.112230\n-0.537873\n0.265195\n0.524962\n0.428830\n0.794130\n-0.840106\n-0.840106\n-0.897785\n1.255561\n0.544188\n3.178192\n-0.840106\n-0.109506\n-1.378443\n-1.359216\n-0.705522\n-0.205638\n0.294246\n-0.282543\n-0.551711\n1.005619\n0.794130\n-0.301769\n-0.494032\n-0.013375\n0.335763\n0.817219\n0.952026\n-0.973796\n-0.222726\n-0.742698\n0.643895\n-0.184209\n0.701669\n-0.819731\n-0.261242\n-1.301186\n-1.166379\n-0.761956\n0.701669\n0.374279\n-0.164951\n0.104664\n1.163867\n1.876421\n-0.319017\n-0.588632\n-0.164951\n-0.683583\n-0.730373\n1.413956\n\n\n2\nFES\n0.326894\n0.640167\n1.204058\n-1.030623\n-0.341422\n-0.717350\n0.326894\n-0.049034\n0.828130\n-1.114162\n-0.383192\n-1.448320\n-1.364781\n-0.821774\n1.579985\n0.013621\n0.264239\n0.076275\n1.642640\n2.310956\n-0.466731\n-0.926198\n-0.550271\n0.678069\n1.136762\n0.490421\n-0.864810\n-0.552064\n-0.531214\n0.594670\n-0.239318\n1.220161\n-0.906509\n-0.176769\n-1.427752\n-1.386052\n-0.948208\n0.657219\n0.261075\n-0.218469\n0.010878\n1.741404\n1.762253\n-0.051671\n-0.739711\n-0.510365\n0.176670\n0.926839\n1.551979\n-1.156963\n-0.677688\n-0.990259\n0.343374\n-0.344280\n0.989353\n-1.115287\n-0.761040\n-1.490371\n-1.490371\n-0.844392\n0.864325\n0.239184\n0.489240\n-0.052548\n1.677007\n2.552204\n-0.094224\n-0.781878\n-0.010872\n0.572592\n1.218571\n0.760134\n-1.115287\n-0.802716\n-1.094449\n0.385050\n-0.219252\n0.489240\n-1.136125\n-0.906907\n-1.532047\n-1.240315\n-0.948583\n1.322761\n-0.302604\n0.385050\n0.155832\n1.739521\n2.677232\n0.260022\n-0.531822\n-0.135900\n0.051642\n0.155832\n0.906001\n-1.115287\n-0.969421\n-1.094449\n1.260247\n0.968515\n2.177119\n-1.281991\n0.009966\n-1.552885\n-1.302829\n-0.698526\n0.093318\n-0.469308\n-0.031710\n0.197508\n1.656169\n1.572817\n-0.406794\n-0.156738\n0.030804\n-0.570568\n1.728059\n1.289230\n-1.030294\n-0.758638\n-1.155673\n0.850401\n0.139916\n0.578745\n-1.134777\n-0.633258\n-1.531813\n-1.427329\n-0.758638\n-0.027256\n-0.779534\n0.578745\n-0.215326\n2.187784\n3.190822\n0.202606\n-0.654155\n-0.069050\n0.374255\n0.688411\n0.876905\n-1.049918\n-0.966143\n-1.028975\n0.876905\n0.164818\n1.337667\n-0.966143\n-0.149338\n-1.573511\n-1.091806\n-0.840481\n0.269537\n-0.400663\n-0.275000\n0.122931\n2.007866\n2.154472\n-0.086507\n-0.337831\n-0.107450\n0.107815\n0.696230\n0.801304\n-1.005970\n-0.795822\n-1.090029\n0.759274\n0.465067\n2.167266\n-0.816836\n-0.228422\n-1.510325\n-1.279162\n-0.816836\n0.191874\n0.170860\n-0.018274\n-0.396540\n1.620881\n1.536822\n-0.207407\n-0.459585\n0.107815\n0.257037\n1.077542\n1.308967\n-1.047357\n-0.479314\n-0.836971\n1.014427\n-0.311005\n1.266890\n-1.026318\n-0.332044\n-1.341897\n-1.236704\n-0.836971\n1.035465\n0.488462\n-0.058542\n-0.163735\n1.014427\n1.498315\n-0.226851\n-0.668662\n-0.395160\n-0.693206\n-0.720917\n1.414123\n\n\n3\nNTRK3\n0.246599\n0.825353\n0.917953\n-1.211859\n-0.517355\n-0.563656\n0.223449\n-0.054352\n1.126304\n-1.165559\n-0.494205\n-1.535961\n-1.535961\n-0.957208\n1.728208\n0.570701\n0.038248\n0.246599\n1.589307\n2.191211\n-0.517355\n-0.702556\n-0.447905\n0.611505\n1.327439\n1.050303\n-0.912740\n-0.866550\n-0.843456\n0.519127\n-0.081333\n1.581479\n-0.889645\n-0.196806\n-1.536294\n-1.443916\n-0.935834\n0.565316\n0.542222\n-0.150617\n-0.081333\n1.281249\n1.535290\n-0.081333\n-0.751077\n-0.242996\n0.310085\n1.071751\n1.833417\n-1.236327\n-0.890115\n-1.005519\n0.563974\n-0.174611\n1.094832\n-1.213246\n-0.728550\n-1.559458\n-1.420973\n-0.705469\n1.071751\n0.310085\n0.033116\n0.263924\n1.094832\n1.833417\n0.194681\n-0.497742\n-0.243853\n0.308897\n1.254642\n1.162374\n-1.005920\n-1.075121\n-1.236590\n0.124361\n0.101294\n0.839437\n-1.075121\n-0.567648\n-1.582594\n-1.328858\n-1.052054\n1.139307\n-0.175510\n0.101294\n0.170495\n1.900517\n2.384923\n0.147428\n-0.383112\n-0.152443\n-0.106309\n0.908638\n1.323843\n-1.052054\n-1.190456\n-1.236590\n0.493432\n0.124361\n1.831316\n-1.490326\n-0.290844\n-1.651795\n-1.328858\n-0.798317\n0.078227\n-0.360045\n-0.014041\n0.908638\n1.831316\n1.393044\n0.078227\n-0.198576\n0.747169\n-0.797266\n1.696953\n1.073398\n-0.912740\n-1.236064\n-1.282254\n1.881710\n0.611505\n1.581479\n-1.051307\n-0.081333\n-1.674862\n-1.490105\n-0.704888\n0.218897\n-0.704888\n0.057234\n-0.312279\n1.004114\n1.789331\n0.126518\n-0.266090\n0.472938\n0.158406\n0.947407\n1.689996\n-0.909067\n-1.117920\n-1.117920\n0.970613\n0.088788\n1.202672\n-1.001890\n-0.352125\n-1.628450\n-1.233950\n-1.071508\n0.552906\n-0.143271\n-0.027242\n0.042376\n1.272290\n1.922056\n0.251229\n-0.398536\n-0.096859\n0.396704\n1.094985\n1.327746\n-0.813649\n-0.860201\n-1.139513\n1.164813\n0.326876\n2.538099\n-0.976581\n-0.441233\n-1.605034\n-1.418826\n-0.836925\n0.303600\n0.210496\n-0.278300\n-0.301576\n1.118261\n1.025157\n-0.045540\n-0.511061\n-0.278300\n0.097329\n1.216607\n1.146652\n-1.045268\n-0.532265\n-1.138541\n0.890151\n-0.112536\n1.263243\n-0.695494\n-0.555584\n-1.558271\n-1.278451\n-0.882040\n1.169970\n0.237238\n-0.182491\n-0.019263\n1.100015\n1.636336\n-0.089218\n-0.578902\n-0.089218\n-0.648459\n-0.764176\n1.412635\n\n\n4\nALK\n-0.000966\n0.532096\n1.154002\n-1.222566\n-0.378551\n-0.600660\n0.132300\n-0.200864\n0.776416\n-1.067090\n-0.689504\n-1.378042\n-1.244777\n-0.689504\n1.487166\n0.665362\n0.154511\n0.265565\n1.909173\n2.442235\n-0.489606\n-0.889402\n-0.667293\n0.169237\n1.363510\n0.899070\n-0.870223\n-0.450016\n-0.936572\n0.301934\n-0.317319\n1.518323\n-0.781759\n-0.427900\n-1.445244\n-1.401011\n-0.980804\n0.832722\n0.943303\n-0.206738\n-0.206738\n1.341394\n2.093344\n-0.074041\n-0.848107\n-0.516364\n0.146070\n0.764946\n1.428027\n-1.135887\n-1.025373\n-0.936962\n0.433405\n-0.318087\n1.273308\n-1.157989\n-0.760141\n-1.467427\n-1.379016\n-0.738038\n1.140692\n0.344994\n0.278686\n-0.052854\n1.317513\n2.908908\n0.013454\n-0.804346\n-0.273881\n0.299645\n1.183215\n0.763520\n-1.047799\n-0.893174\n-0.981531\n0.078753\n-0.142140\n0.454270\n-1.069888\n-0.848995\n-1.533762\n-1.312870\n-0.981531\n1.337840\n-0.097961\n0.388002\n0.167110\n2.110964\n2.508570\n0.189199\n-0.628103\n0.056664\n0.189199\n0.608895\n0.918144\n-1.224513\n-1.047799\n-1.246602\n1.315751\n0.896055\n2.177232\n-1.379137\n-0.628103\n-1.555851\n-1.334959\n-1.025709\n-0.009604\n-0.407210\n-0.385121\n0.233378\n1.845893\n1.912161\n-0.186318\n-0.274675\n0.608895\n-0.870654\n1.538540\n1.229102\n-0.826449\n-1.069579\n-1.202195\n1.405924\n0.477611\n1.162794\n-0.936962\n-0.384395\n-1.533735\n-1.312708\n-0.782243\n0.322892\n-0.428600\n0.300789\n-0.472806\n1.052281\n2.599470\n0.168173\n-0.649627\n0.212378\n0.369469\n0.657155\n1.365304\n-0.869792\n-1.068959\n-1.179607\n1.188266\n0.192432\n1.321044\n-0.847662\n-0.205902\n-1.467292\n-1.268125\n-0.936181\n0.767803\n0.280950\n-0.050994\n-0.006735\n0.789932\n1.520211\n-0.028865\n-0.515717\n-0.006735\n0.171369\n0.304228\n0.525659\n-0.692214\n-0.825073\n-1.046505\n1.832106\n0.813520\n2.673546\n-0.913646\n-0.227208\n-1.400795\n-1.201507\n-0.780787\n0.259941\n0.990666\n-0.426496\n-0.426496\n0.459230\n0.636375\n-0.249351\n-0.404353\n-0.072206\n0.238907\n0.615570\n1.235957\n-0.979710\n-0.603047\n-0.979710\n0.704197\n0.194593\n1.324584\n-0.891084\n-0.204227\n-1.312061\n-1.179120\n-0.846770\n1.501837\n0.571257\n-0.204227\n-0.115600\n0.947920\n1.058704\n-0.292853\n-0.514420\n-0.270697\n-0.688690\n-0.725365\n1.414055\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n385\nVRK2\n0.913815\n0.836508\n0.449975\n0.527282\n-0.158815\n-0.158815\n-0.158815\n-0.767604\n-0.777268\n-0.661308\n-0.158815\n0.643242\n0.382332\n0.933142\n-0.129825\n0.285698\n-0.458378\n-0.545348\n-0.187805\n-0.796594\n0.053779\n0.053779\n-0.120161\n1.238276\n1.354168\n0.658818\n0.687791\n-0.239341\n-0.239341\n-0.036531\n-0.722223\n-0.722223\n-0.239341\n-0.258657\n0.320801\n0.581557\n0.204910\n-0.326260\n0.233883\n-0.654619\n-0.490440\n-0.896060\n-0.490440\n-0.017216\n-0.017216\n0.069703\n1.617455\n1.392879\n0.416463\n0.133302\n-0.061981\n-0.061981\n-0.315849\n-0.374434\n-0.335378\n-0.061981\n-0.120566\n0.416463\n0.367642\n0.738680\n-0.638067\n0.367642\n-0.647831\n-0.032689\n-1.028633\n-0.930992\n-0.393963\n-0.393963\n-0.052217\n0.658854\n3.601795\n0.199955\n0.170027\n-0.009542\n-0.009542\n-0.548250\n-0.857508\n0.209931\n1.087825\n0.050314\n-0.209064\n-0.039471\n0.409453\n-0.308824\n0.499237\n-0.009542\n-0.029494\n-0.787676\n-0.977221\n-1.047054\n-1.047054\n-1.007149\n0.689069\n-0.112765\n-0.201857\n-0.201857\n0.223808\n0.223808\n1.391911\n0.293102\n0.986044\n0.223808\n-0.686917\n0.283203\n-0.597824\n2.421426\n0.372295\n0.500985\n-0.370143\n-0.132563\n-1.102683\n-1.795625\n-0.865102\n-0.865102\n-0.677018\n1.216846\n0.411378\n-0.261544\n-0.740747\n-0.006649\n-0.006649\n3.470116\n1.675657\n-0.924271\n0.340008\n-0.404285\n-0.006649\n0.574511\n-0.648984\n-0.006649\n3.694424\n1.104692\n-1.148578\n-2.229333\n-1.739934\n-1.811305\n-1.811305\n-0.740747\n-1.547487\n0.847371\n-0.244845\n0.216091\n0.105867\n0.105867\n0.616904\n2.210136\n2.160034\n1.809323\n1.568835\n1.198083\n1.969648\n0.105867\n-0.254865\n-0.765902\n-0.545454\n-1.417223\n-2.028463\n-2.309032\n-1.657711\n-1.657711\n-0.485332\n-1.216215\n1.073850\n0.200009\n-0.231889\n-0.171624\n-0.171624\n-0.171624\n-0.342374\n-0.402639\n-0.543257\n0.501334\n0.742393\n3.755636\n1.857293\n-0.523169\n2.389633\n-0.523169\n0.491290\n-1.708378\n-1.979570\n-1.366877\n-1.366877\n-0.292154\n0.050297\n0.827835\n0.296833\n-0.243651\n-0.243651\n-0.243651\n-0.613456\n-0.784135\n-0.471223\n-0.376401\n0.097708\n0.249422\n1.671749\n0.666638\n-0.746206\n-0.471223\n-0.651384\n-0.234169\n-0.243651\n-1.286690\n0.306316\n0.306316\n2.136376\n-0.134920\n1.286619\n-1.151698\n\n\n386\nWNK4\n-0.787779\n-0.171271\n-0.107219\n-0.087202\n0.056916\n0.056916\n-0.167268\n0.261085\n0.409207\n0.056916\n0.589355\n0.869586\n0.689437\n0.593358\n0.713457\n1.746308\n-0.759756\n-0.363430\n-1.112046\n-0.935901\n-0.543578\n-0.543578\n-0.463512\n-0.640355\n0.075796\n-0.112449\n-0.186110\n-0.112449\n-0.112449\n-0.153372\n-0.096080\n-0.362079\n-0.042880\n-0.186110\n0.464564\n0.231304\n0.640533\n1.573576\n3.001786\n-0.149280\n-0.177926\n-0.873616\n-0.783585\n-0.501217\n-0.501217\n-0.996385\n-0.076874\n0.231143\n-0.080874\n-0.020871\n-0.076874\n-0.076874\n-0.008870\n-0.036872\n-0.192880\n0.127138\n-0.504898\n0.003131\n-0.596903\n0.459156\n1.595219\n3.991352\n-0.520899\n-0.508898\n-1.348945\n-1.032927\n-0.360890\n-0.360890\n-0.600903\n0.917850\n4.265395\n1.354307\n0.234341\n-0.276232\n-0.276232\n0.090227\n-0.440933\n-0.720925\n-0.552106\n-0.276232\n-0.259762\n-0.663279\n1.465480\n0.234341\n1.959583\n-0.877390\n-0.778570\n-1.527959\n-1.527959\n-0.609751\n-0.609751\n-1.124442\n-1.161009\n0.607030\n0.511573\n0.316508\n-0.231336\n-0.231336\n-0.281140\n-0.318492\n-0.231336\n1.590658\n-0.343394\n0.308207\n-0.708623\n0.299906\n1.794024\n4.271769\n0.059187\n-0.712773\n-1.563590\n-1.123656\n-1.181760\n-1.181760\n-0.488656\n-1.683890\n-0.145187\n-0.681278\n1.008839\n0.075796\n0.075796\n0.075796\n0.628256\n1.160254\n2.449327\n0.464564\n0.988378\n0.083981\n-0.308879\n-0.055157\n2.228343\n0.542318\n0.010320\n-1.667521\n-1.671613\n-1.336045\n-1.336045\n-0.906354\n-1.487522\n0.483187\n0.129790\n0.179681\n0.125632\n0.125632\n0.558024\n2.121287\n0.765905\n0.948840\n0.125632\n0.262833\n-0.186189\n0.113159\n-0.132140\n3.023489\n-0.988608\n-0.643526\n-0.872195\n-1.159070\n-1.271326\n-1.271326\n-0.951190\n-0.995206\n-0.404314\n-0.559371\n-0.035530\n0.002186\n0.002186\n-0.173824\n0.002186\n0.245248\n0.291346\n2.923121\n1.334837\n1.749719\n1.058249\n0.345826\n0.743945\n-0.869484\n-0.563561\n-0.735381\n-0.986825\n-1.309510\n-1.309510\n-0.756335\n-0.567130\n-0.202433\n-0.153807\n0.137950\n0.044750\n0.044750\n0.044750\n0.693100\n-0.072763\n0.364873\n0.826822\n0.583691\n0.891657\n0.413499\n0.802509\n1.110475\n-0.660330\n-0.332103\n-0.976401\n-0.745426\n-0.794052\n-0.794052\n-0.660330\n0.514442\n0.883617\n-1.398059\n\n\n387\nYANK2\n-0.069665\n0.063579\n-0.005842\n-0.045031\n-0.069665\n-0.069665\n-0.234261\n-0.192832\n-0.205148\n-0.193951\n-0.101016\n0.009834\n-0.162600\n0.031108\n0.167712\n0.195704\n-0.139086\n-0.039433\n-0.010321\n-0.140206\n0.381574\n0.381574\n0.447636\n-0.046635\n0.037552\n-0.047674\n-0.123546\n-0.123546\n-0.123546\n-0.252425\n-0.315825\n-0.263858\n-0.165120\n-0.227481\n-0.167199\n-0.239953\n-0.123546\n-0.045596\n0.085362\n-0.180710\n-0.118350\n-0.014415\n0.254775\n1.038440\n1.038440\n0.124857\n-0.313425\n-0.360362\n-0.326835\n-0.324824\n-0.360362\n-0.360362\n-0.395229\n-0.442165\n-0.415344\n-0.412662\n-0.421379\n-0.358350\n-0.462951\n-0.375113\n-0.303367\n0.137165\n-0.422049\n-0.347622\n-0.112939\n-0.185355\n3.159876\n3.159876\n0.243778\n-0.063168\n-0.323353\n-0.219643\n-0.047702\n-0.219643\n-0.219643\n-0.292422\n-0.306978\n0.188830\n-0.074994\n0.002334\n-0.047702\n-0.315166\n-0.066807\n-0.367931\n-0.172336\n-0.247845\n-0.172336\n-0.419786\n-0.226011\n0.209755\n0.209755\n3.192793\n0.301826\n0.160395\n-0.064230\n-0.010748\n-0.064230\n-0.064230\n-0.304306\n-0.329264\n-0.101074\n0.084331\n-0.137917\n0.095028\n-0.275782\n-0.026199\n0.204369\n0.696406\n0.003514\n-0.105828\n-0.330453\n-0.211604\n-0.002429\n-0.002429\n0.484854\n-0.544935\n-0.456711\n-0.330677\n-0.021321\n-0.091213\n-0.091213\n0.132211\n0.566455\n0.024509\n0.729153\n0.840292\n-0.043091\n-0.237870\n-0.190894\n-0.213809\n-0.086630\n-0.039653\n-0.351301\n-0.475043\n-0.091213\n0.037113\n0.037113\n0.898726\n-0.678916\n-0.668713\n-0.626626\n-0.534799\n-0.553610\n-0.553610\n-0.575611\n-0.550741\n-0.575292\n-0.544045\n-0.532567\n-0.229665\n-0.458595\n-0.418102\n-0.569871\n-0.530335\n-0.557755\n-0.587089\n-0.553610\n-0.378884\n-0.293752\n-0.293752\n11.265940\n-0.543125\n-0.506080\n-0.350320\n-0.270336\n-0.173513\n-0.173513\n-0.023648\n0.010872\n-0.079216\n-0.137310\n-0.042170\n-0.103632\n-0.019438\n-0.168461\n-0.173513\n-0.197929\n-0.309907\n-0.392418\n-0.417676\n-0.351162\n0.975736\n0.975736\n2.471022\n-0.168368\n-0.304390\n-0.333419\n-0.362448\n-0.297755\n-0.297755\n-0.356642\n-0.213156\n-0.322637\n-0.281167\n-0.355813\n-0.236379\n-0.165051\n-0.152610\n0.179980\n0.192421\n-0.297755\n-0.315172\n-0.456170\n-0.344201\n0.189103\n0.189103\n4.510281\n0.213252\n1.104115\n-1.317366\n\n\n388\nYANK3\n0.036918\n0.227998\n0.064757\n0.002751\n-0.064317\n-0.064317\n-0.118731\n-0.074440\n-0.044070\n-0.066848\n-0.065582\n-0.064317\n-0.044070\n-0.112403\n0.026794\n0.307720\n-0.174410\n-0.097218\n0.128029\n-0.093422\n0.122967\n0.122967\n0.043245\n0.055050\n0.259423\n0.032073\n-0.042904\n-0.092486\n-0.092486\n-0.126346\n-0.177137\n-0.217045\n-0.085230\n-0.213417\n-0.165044\n-0.142067\n-0.210998\n-0.069509\n0.225562\n-0.157788\n-0.092486\n0.229190\n0.130027\n0.472261\n0.472261\n0.009096\n-0.236397\n-0.265901\n-0.285289\n-0.311421\n-0.355255\n-0.355255\n-0.350197\n-0.378015\n-0.371271\n-0.384759\n-0.450510\n-0.355255\n-0.407519\n-0.434494\n-0.282760\n1.072728\n-0.359470\n-0.377172\n-0.279388\n-0.242298\n2.736742\n2.736742\n-0.063589\n0.000460\n-0.119404\n-0.157008\n0.082719\n-0.140556\n-0.140556\n-0.239268\n-0.219291\n0.164979\n0.021612\n-0.034794\n-0.124105\n-0.140556\n-0.135856\n-0.182861\n0.967597\n-0.184037\n-0.172285\n-0.310951\n-0.200488\n0.129725\n0.129725\n1.005201\n0.546474\n0.190063\n-0.171457\n-0.142075\n-0.116526\n-0.116526\n-0.167625\n-0.309422\n-0.145908\n0.064873\n-0.199561\n-0.070538\n-0.249382\n-0.116526\n0.100641\n0.727873\n0.055930\n0.027826\n-0.148463\n-0.177844\n0.054653\n0.054653\n0.308867\n-0.465117\n-0.361424\n-0.328094\n-0.112066\n-0.086143\n-0.086143\n0.073101\n0.637242\n-0.052813\n0.532314\n0.758217\n-0.086143\n-0.126879\n-0.326860\n-0.266372\n0.017551\n0.102727\n-0.281185\n-0.354017\n0.055818\n-0.009607\n-0.009607\n0.775500\n-0.689165\n-0.652955\n-0.644131\n-0.490467\n-0.609138\n-0.609138\n-0.609138\n-0.570190\n-0.540978\n-0.558322\n-0.536718\n-0.387315\n-0.317938\n-0.567451\n-0.651738\n-0.621005\n-0.626178\n-0.618875\n-0.630438\n-0.552237\n-0.278076\n-0.278076\n12.039666\n-0.463843\n-0.388116\n-0.340672\n-0.189218\n-0.233925\n-0.233925\n-0.038677\n0.055298\n-0.233925\n-0.247610\n-0.174620\n-0.121703\n-0.103455\n-0.165497\n-0.188306\n-0.091594\n-0.261296\n-0.305090\n-0.383554\n-0.240311\n1.003254\n1.003254\n2.343530\n-0.131072\n-0.287017\n-0.247593\n-0.356229\n-0.247593\n-0.247593\n-0.343088\n-0.322937\n-0.325566\n-0.294902\n-0.371999\n-0.290522\n-0.211673\n-0.227443\n-0.141585\n-0.111798\n-0.200284\n-0.242336\n-0.308044\n0.001219\n0.300844\n0.300844\n4.306364\n0.817024\n0.591165\n-1.408189\n\n\n389\nYSK4\n-0.032950\n0.568875\n0.640203\n0.595623\n-0.015118\n-0.015118\n-0.371756\n-0.893337\n-0.746225\n-0.394045\n0.158742\n-0.001744\n0.689240\n0.283565\n-0.336092\n-0.015118\n-0.532242\n0.069583\n0.408388\n-0.411877\n0.457426\n0.457426\n-0.563448\n0.108431\n0.381554\n0.090522\n0.242754\n0.090522\n0.090522\n-0.540794\n-0.831827\n-0.352743\n-0.124394\n0.054702\n0.099477\n0.520354\n0.126341\n-0.478111\n-0.334833\n-0.209465\n0.229322\n0.327825\n0.211412\n0.292006\n0.292006\n-0.285581\n-0.156075\n0.392044\n-0.111147\n0.180883\n-0.111147\n-0.111147\n-1.077095\n-0.960282\n-0.758107\n-0.165061\n-0.241438\n0.091028\n0.531320\n0.171898\n-0.358250\n-0.236945\n0.082042\n0.989583\n1.187265\n0.046100\n0.203347\n0.203347\n0.207840\n-0.756930\n0.055572\n0.179110\n0.117341\n-0.286534\n-0.286534\n-1.004006\n-1.118041\n-1.260585\n-0.381564\n1.975165\n3.410109\n2.341028\n1.077137\n-1.659709\n-1.322355\n-0.286534\n0.340660\n0.725529\n-0.300789\n-0.604883\n-0.604883\n-0.348303\n0.278396\n-0.303281\n-0.345162\n-0.629020\n-0.098531\n-0.098531\n-0.991987\n-1.071095\n0.422652\n0.152753\n-0.396350\n1.116011\n-0.373083\n0.753044\n0.064339\n-0.172986\n-0.098531\n0.743737\n1.441750\n-0.177639\n-0.610407\n-0.610407\n1.004329\n-2.088449\n-1.134681\n-1.347178\n0.244082\n-1.134681\n-1.134681\n0.713553\n2.270221\n3.723111\n1.869935\n1.192908\n1.894644\n5.171060\n0.229257\n-1.525083\n-1.416364\n-1.268110\n-1.164332\n-1.648628\n-1.554734\n-0.393410\n-0.393410\n-1.105030\n-0.860170\n-0.401302\n-0.802812\n-0.468220\n-0.774132\n-0.774132\n-0.195767\n-0.774132\n-1.132623\n-0.917529\n-0.974887\n-0.554258\n-0.783692\n1.113919\n3.594675\n5.755180\n-0.057151\n1.348133\n-0.812371\n-1.247340\n0.535554\n0.535554\n-1.352497\n0.768778\n0.442187\n-0.233993\n-0.169595\n-0.017799\n-0.017799\n-0.192594\n-0.670981\n-0.463987\n-0.500786\n-0.040799\n-0.017799\n0.198394\n0.290392\n0.883775\n0.529585\n-0.008600\n0.635382\n-0.509985\n-0.606583\n0.276592\n0.276592\n-0.850376\n0.963629\n0.645691\n-0.036261\n-0.109986\n-0.036261\n-0.036261\n-0.626058\n-0.506256\n-0.460178\n-0.340375\n-0.552333\n-0.404884\n-0.192926\n0.350793\n1.074215\n0.171089\n0.737847\n0.180305\n0.019032\n-0.446354\n0.244814\n0.244814\n-0.884094\n0.450034\n0.936061\n-1.386095\n\n\n\n\n390 rows × 211 columns",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "ml_embedding.html#extract-kinase-features",
    "href": "ml_embedding.html#extract-kinase-features",
    "title": "Kinase embeddings",
    "section": "Extract kinase features",
    "text": "Extract kinase features\nWe will use two models, T5 and ESM2, to extract protein embeddings from the amino acid sequence for each kinase.\n\n# load a df that contains sequence info\ninfo = pd.read_excel('train_data/combine_info_PSPA.xlsx')\n\nUncheck below to run to extract embeddings\nFor ESM2:\n\n# # get esm embeddings from full kinase sequence\n# feat = get_esm(info,'human_uniprot_sequence')\n\n# import gc\n# gc.collect()\n\n\n# # get esm embeddings from kinase domain sequence\n# feat_kd = get_esm(info,'kinasecom_domain')\n\n# gc.collect()\n\nFor T5 model:\n\n# # get T5 embeddings from full kinase sequence\n# feat_t5 = get_t5(info,'human_uniprot_sequence')\n\n# gc.collect()\n\n\n# # get T5 embeddings from kinase domain sequence\n# feat_kd_t5 = get_t5(info,'kinasecom_domain')\n\n# gc.collect()\n\nSave\n\n# # for esm\n# feat.astype(float).to_parquet('train_data/esm_combine.parquet')\n# feat_kd.astype(float).to_parquet('train_data/esm_combine_kd.parquet')\n\n# # for t5\n# feat_t5.astype(float).to_parquet('train_data/t5_combine.parquet')\n# feat_kd_t5.astype(float).to_parquet('train_data/t5_combine_kd.parquet')\n\nOr directly load the embeddings\n\n# # for esm\nfeat= pd.read_parquet('train_data/esm_combine.parquet')\nfeat_kd = pd.read_parquet('train_data/esm_combine_kd.parquet')\n\n# for t5\nfeat_t5 = pd.read_parquet('train_data/t5_combine.parquet')\nfeat_kd_t5 = pd.read_parquet('train_data/t5_combine_kd.parquet')",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "ml_embedding.html#esm-plot",
    "href": "ml_embedding.html#esm-plot",
    "title": "Kinase embeddings",
    "section": "ESM plot",
    "text": "ESM plot\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nESM2 kinase colored by family\n\nplot_cluster(feat,'umap',complexity=10,hue=info.group,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\nTo visualize PSPA categories, we only look at those with more than 10 kinases\n\ncnt = info.pspa_category_big.str.split('_').str[0].value_counts()\n\ncnt_10 = cnt[cnt&gt;10]\n\ncnt_10_bool = info.pspa_category_big.isin(cnt_10.index)\n\npspa_cat10 = info[cnt_10_bool].pspa_category_big\n\n\n\nESM2 kinase colored by PSPA category\n\nplot_cluster(feat,'umap',complexity=10,\n             hue=pspa_cat10,\n             legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nESM2 kinase domain colored by family\n\nplot_cluster(feat_kd,'umap',complexity=13,hue=info.group,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nESM2 kinase domain colored by PSPA category\n\nplot_cluster(feat_kd,'umap',complexity=13,hue=pspa_cat10,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "ml_embedding.html#t5-plot",
    "href": "ml_embedding.html#t5-plot",
    "title": "Kinase embeddings",
    "section": "T5 plot",
    "text": "T5 plot\n\nT5 kinase colored by family\n\nplot_cluster(feat_t5,'umap',complexity=15,hue=info.group,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nT5 kinase colored by PSPA category\n\nplot_cluster(feat_t5,'umap',complexity=15,hue=pspa_cat10,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nT5 kinase domain colored by family\n\nplot_cluster(feat_kd_t5,'umap',complexity=13,hue=info.group,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nT5 kinase domain colored by PSPA category\n\nplot_cluster(feat_kd_t5,'umap',complexity=13,hue=pspa_cat10,legend=True)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "ml_embedding.html#save-dataframes",
    "href": "ml_embedding.html#save-dataframes",
    "title": "Kinase embeddings",
    "section": "Save Dataframes",
    "text": "Save Dataframes\n\ntarget = {'combine': target}\n\n\nkinase_all = {'esm':feat,'t5':feat_t5, 'esm_kd':feat_kd, 't5_kd': feat_kd_t5}\n\n\ndfs = {}\nfor i, t in target.items():\n    for j, k in kinase_all.items():\n        # df = t.merge(k).reset_index(drop=True)\n        df = pd.concat([t,k],axis=1).set_index('kinase')\n        dfs[i+'_'+j] = df\n        # break\n\nUncomment to save:\n\n# for key, df in dfs.items():\n#     df.astype(float).to_parquet(f'train_data/{key}.parquet')",
    "crumbs": [
      "Kinase embeddings"
    ]
  },
  {
    "objectID": "correlation_st.html",
    "href": "correlation_st.html",
    "title": "Compare CDDM and PSPA in Ser/Thr kinases",
    "section": "",
    "text": "from katlas.imports import *\nimport os, seaborn as sns\n\nfrom fastbook import *\nfrom scipy.stats import spearmanr, pearsonr\n\nfrom PIL import Image\nfrom tqdm import tqdm\n\nset_sns()",
    "crumbs": [
      "Compare CDDM and PSPA in Ser/Thr kinases"
    ]
  },
  {
    "objectID": "correlation_st.html#setup",
    "href": "correlation_st.html#setup",
    "title": "Compare CDDM and PSPA in Ser/Thr kinases",
    "section": "",
    "text": "from katlas.imports import *\nimport os, seaborn as sns\n\nfrom fastbook import *\nfrom scipy.stats import spearmanr, pearsonr\n\nfrom PIL import Image\nfrom tqdm import tqdm\n\nset_sns()",
    "crumbs": [
      "Compare CDDM and PSPA in Ser/Thr kinases"
    ]
  },
  {
    "objectID": "correlation_st.html#load-data",
    "href": "correlation_st.html#load-data",
    "title": "Compare CDDM and PSPA in Ser/Thr kinases",
    "section": "Load data",
    "text": "Load data\n\ndf = Data.get_ks_dataset()\ndf['SUB'] = df.substrate.str.upper()",
    "crumbs": [
      "Compare CDDM and PSPA in Ser/Thr kinases"
    ]
  },
  {
    "objectID": "correlation_st.html#get-overlap-kinase",
    "href": "correlation_st.html#get-overlap-kinase",
    "title": "Compare CDDM and PSPA in Ser/Thr kinases",
    "section": "Get overlap kinase",
    "text": "Get overlap kinase\n\n# normalized PSPA data\nnorm = pd.read_csv('raw/pspa_st_norm.csv')\nraw = pd.read_csv('raw/pspa_st_raw.csv')\n\n\n#get overlap and count\noverlap_cnt = df[df.kinase_paper.isin(raw.kinase)].kinase_paper.value_counts()\n\n\noverlap_cnt\n\n\noverlap_cnt = overlap_cnt[overlap_cnt&gt;100]\n\n\noverlap_cnt\n\n\n# PSPA data\nraw = raw.set_index('kinase')\nnorm = norm.set_index('kinase')",
    "crumbs": [
      "Compare CDDM and PSPA in Ser/Thr kinases"
    ]
  },
  {
    "objectID": "correlation_st.html#plot",
    "href": "correlation_st.html#plot",
    "title": "Compare CDDM and PSPA in Ser/Thr kinases",
    "section": "Plot",
    "text": "Plot\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\n# aa_order = [i for i in 'PGACSTVILMFYWHKRQNDEsty']\naa_order_paper = [i for i in 'PGACSTVILMFYWHKRQNDEsty']\n# position = [i for i in range(-7,8)]\nposition_paper = [-5,-4,-3,-2,-1,1,2,3,4]\n\n\nDataset-driven vs. normalized\nTo generate all of other figures and save them, uncheck plt.savefig, and comment out plt.show() and break\n\nset_sns()\n\n\nfor k in tqdm(overlap_cnt.index,total=len(overlap_cnt)):\n    df_k = df.query(f'kinase_paper==\"{k}\"')\n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    paper,full = get_freq(df_k)\n    raw_k = get_one_kinase(norm,k,drop_s=False).T.reindex(index=aa_order_paper,columns=position_paper).round(3)\n    \n    plot_heatmap(paper,f'{k} from CDDM (n={overlap_cnt[k]})')\n    # plt.savefig(f'corr/KS/{k}.png',bbox_inches='tight', pad_inches=0.05)\n    plt.show()\n    plt.close()\n\n    plot_heatmap(raw_k,f'{k} from PSPA')\n    # plt.savefig(f'corr/PSPA/{k}.png',bbox_inches='tight', pad_inches=0.05)\n    plt.show()\n    plt.close()\n\n    plot_corr(y = paper.unstack().values, #dataset driven\n              x = raw_k.unstack().values, # PSPA\n              ylabel='CDDM',\n              xlabel='PSPA')\n    plt.title(k)\n    # plt.savefig(f'corr/pear/{k}.png',bbox_inches='tight', pad_inches=0.2)\n    plt.show()\n    plt.close()\n    \n    break\n\nCombine the figures: correlation on top, and two heatmaps on the bottom\n\ndef combine_images_custom_layout(image_paths, output_path):\n    images = [Image.open(image_path).convert('RGBA') for image_path in image_paths]\n    \n    # Calculate total width and height for the new image\n    total_width = max(images[0].width, images[1].width + images[2].width)\n    total_height = images[0].height + max(images[1].height, images[2].height)\n    \n    # Create a new image with calculated dimensions\n    combined_image = Image.new('RGBA', (total_width, total_height))\n    \n    # Paste the first image at the top-center\n    x_offset = (total_width - images[0].width) // 2\n    combined_image.paste(images[0], (x_offset, 0), images[0])\n    \n    # Paste the second image at the bottom-left\n    combined_image.paste(images[1], (0, images[0].height), images[1])\n    \n    # Paste the third image at the bottom-right\n    combined_image.paste(images[2], (images[1].width, images[0].height), images[2])\n    \n    # Save the result\n    combined_image.save(output_path)\n\nUncheck below to save combined figures\n\n# folders = [\"corr/pear\",'corr/KS','corr/PSPA']\n\n# for k in tqdm(overlap_cnt.index,total=len(overlap_cnt)):\n#     filename = f\"{k}.png\"\n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n#     output_path = f\"corr/combine/{k}.png\"\n#     combine_images_custom_layout(image_paths, output_path)\n#     # break",
    "crumbs": [
      "Compare CDDM and PSPA in Ser/Thr kinases"
    ]
  },
  {
    "objectID": "correlation_st.html#plot-comparison",
    "href": "correlation_st.html#plot-comparison",
    "title": "Compare CDDM and PSPA in Ser/Thr kinases",
    "section": "Plot comparison",
    "text": "Plot comparison\nCorrelation with raw PSPA\n\ndata = []\nfor k in tqdm(overlap_cnt.index):\n    df_k = df.query(f'kinase_paper==\"{k}\"')\n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    cnt = df_k.shape[0]\n    \n    paper,full = get_freq(df_k)\n    raw_k = get_one_kinase(raw,k,drop_s=False).T.reindex(index=aa_order_paper,columns=position_paper).round(3)\n    \n    full_corr,_ = pearsonr(raw_k.unstack().values,paper.unstack().values)\n    \n    data.append([k,full_corr,cnt])\n\n\ncorr_raw = pd.DataFrame(data,columns= ['kinase','corr_with_raw','count_unique'])\n\nCorrelation with normalized PSPA\n\ndata = []\nfor k in overlap_cnt.index:\n    df_k = df.query(f'kinase_paper==\"{k}\"')\n    df_k = df_k.drop_duplicates(subset='SUB').reset_index()\n    \n    cnt = df_k.shape[0]\n    \n    paper,full = get_freq(df_k)\n    norm_k = get_one_kinase(norm,k,drop_s=False).T.reindex(index=aa_order_paper,columns=position_paper).round(3)\n    \n    full_corr,_ = pearsonr(norm_k.unstack().values,paper.unstack().values)\n    \n    data.append([k,full_corr])\n\n\ncorr_norm = pd.DataFrame(data,columns= ['kinase','corr_with_norm',\n                                ])\n\nMerge with specificity\n\ncorr = corr_raw.merge(corr_norm)\n\n\nm = pd.read_csv('raw/specificity_pspa.csv')\n\n\ncorr= corr.merge(m).rename(columns={'max':'specificity'})\n\n\ncorr\n\n\ncorr.query('kinase == \"CK1A\"')\n\nPearson vs. Specificity\n\nplot_corr(x=corr.specificity.values,\n          y=corr.corr_with_norm.values)\nplt.ylabel('Pearson\\n dataset-driven vs. raw PSPA')\nplt.xlabel('Kinase specificity');\n\n\ninfo = Data.get_kinase_info().query('pseudo==\"0\"')\n\ncorr2 = corr.merge(info)\n\ncolor = load_pickle('raw/kinase_color.pkl')\n\n\nplot_bar(corr2,'corr_with_norm','group',palette=color)\nplt.ylabel('Pearson');\n\n\nplt.figure(figsize=(7,3))\ncorr.corr_with_norm.hist(bins=20)\nplt.xlabel('Pearson')\nplt.ylabel('# Kinase')\nplt.title('Distribution of Pearson score')\n\n\ncorr.plot.scatter(y='corr_with_norm',x='specificity',c='darkblue')\nplt.ylabel('Pearson\\n Dataset-driven vs. norm PSPA')\nplt.xlabel('Kinase specificity');\n# plt.title('Dataset-driven vs. raw PSPA')\n\nExamples of outliers\n\n# Examples of data\nk = 'CK1A'\ndf_k=df.query(f'kinase_paper == \"{k}\"')\ndf_k=df_k.drop_duplicates(subset='SUB')\n\npaper, full = get_freq(df_k)\n\nraw_k = get_one_kinase(raw,k,drop_s=False).T\nraw_k = raw_k.reindex(index=aa_order_paper)\n\nplot_heatmap(raw_k,f'{k} from raw PSPA')\nplot_heatmap(paper,f'{k} from KS datasets (n={len(df_k)})')\n\nTo check all of the outliers, uncheck below\n\n# # Examples of data\n# for k in corr.query('corr_with_norm&lt;0.4 & specificity&gt;0.55').kinase:\n    \n#     df_k=df.query(f'kinase_paper == \"{k}\"')\n#     df_k=df_k.drop_duplicates(subset='SUB')\n\n#     paper, full = get_freq(df_k)\n\n#     raw_k = get_one_kinase(raw,k,drop_s=False).T\n#     raw_k = raw_k.reindex(index=aa_order_paper)\n    \n#     plot_heatmap(raw_k,f'{k} from raw PSPA')\n#     plot_heatmap(paper,f'{k} from KS datasets (n={len(df_k)})')\n\n\nPearson with raw vs. Pearson with norm\n\nmelt = pd.melt(corr[['corr_with_raw','corr_with_norm']])\n\n\nmelt['variable'] = melt.variable.replace({'corr_with_raw':'raw','corr_with_norm':'normalized'})\n\n\ndef plot_box(data,x,y,dots=True):\n    if dots:\n        sns.stripplot(data=data,x=x,y=y)\n    sns.boxplot(data=data, x=x, y=y, palette='pastel')\n\n\nplot_box(melt,'variable','value')\nplt.ylabel('Pearson \\nDataset-driven vs. PSPA')\nplt.xlabel('PSPA');\n\n\n\nCheck if changed pearson is correlated with specificity\n\ncorr['change_corr'] = corr['corr_with_norm'] - corr['corr_with_raw']\n\n\nplot_corr(y=corr.change_corr,x=corr.specificity,text_location=[0.8,0.85])\nplt.xlabel('Kinase specificity based on PSPA')\nplt.ylabel('Δ Pearson');\n\n\ncorr.plot.scatter(y='change_corr',x='specificity',c='darkblue')\npear,pvalue = pearsonr(corr.change_corr,corr.specificity)\nplt.text(s=f'Pearson = {round(pear,2)}\\n   p = {\"{:.2e}\".format(pvalue)}',x=0.6,y=0.2)\nplt.ylabel('Δ Pearson')\nplt.xlabel('Kinase specificity');\n\n\n# corr.to_csv('PSSM_vs_dataset_summary.csv',index=False)\n\n\n\nFind out the factor that cause the biggest change in correlation\nPlot the kinase with biggest change in pearson after normalization; uncheck ‘break’ to run all\n\nfor k in corr.sort_values('change_corr',ascending=False).kinase[:5]:\n    \n    df_k=df.query(f'kinase_paper == \"{k}\"')\n    df_k = df_k.drop_duplicates(subset=\"SUB\")\n    \n    paper, full = get_freq(df_k)\n\n    raw_k = get_one_kinase(raw,k,drop_s=False).T\n    raw_k = raw_k.reindex(index=aa_order_paper)\n    \n    norm_k = get_one_kinase(norm,k,drop_s=False).T\n    norm_k = norm_k.reindex(index=aa_order_paper)\n    \n    plot_heatmap(raw_k,f'{k} from raw PSPA')\n    plot_heatmap(norm_k,f'{k} from normalized PSPA')\n    plot_heatmap(paper,f'{k} from KS datasets (n={len(df_k)})')\n\n    break\n\nCalculate S and T ratio\n\ndata = []\nfor k in overlap_cnt.index:\n\n    # paper, full = get_freq(df,k)\n\n    raw_k = get_one_kinase(raw,k,drop_s=False).T\n    raw_k = raw_k.reindex(index=aa_order_paper)\n    \n    s_ratio = (raw_k.loc['S']/raw_k.sum()).median() #use median because it can better reflect the distribution of the data than the average\n    t_ratio = (raw_k.loc['T']/raw_k.sum()).median()\n    data.append([k,s_ratio,t_ratio])\n\n\nST_ratio = pd.DataFrame(data,columns=['kinase','S_ratio','T_ratio'])\n\n\ncorr = corr.merge(ST_ratio)\n\n\ncorr\n\n\ncorr.corr(numeric_only=True)\n\nCheck change_corr column in the correlation plot, it seems T ratio is highly correlated with change_corr\n\nplot_corr(y=corr.change_corr,x=corr.T_ratio)\nplt.xlabel('T ratio in raw PSPA')\nplt.ylabel('Δ Pearson');",
    "crumbs": [
      "Compare CDDM and PSPA in Ser/Thr kinases"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html",
    "href": "combine_psp_ochoa.html",
    "title": "Build human phosphoproteome dataset",
    "section": "",
    "text": "import pandas as pd\nfrom matplotlib import pyplot as plt\nfrom katlas.core import *\nimport seaborn as sns\nfrom tqdm import tqdm\nimport numpy as np\n\ntqdm.pandas()",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#setup",
    "href": "combine_psp_ochoa.html#setup",
    "title": "Build human phosphoproteome dataset",
    "section": "",
    "text": "import pandas as pd\nfrom matplotlib import pyplot as plt\nfrom katlas.core import *\nimport seaborn as sns\nfrom tqdm import tqdm\nimport numpy as np\n\ntqdm.pandas()",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#load-phosphositeplus-and-ochoa-et-al.",
    "href": "combine_psp_ochoa.html#load-phosphositeplus-and-ochoa-et-al.",
    "title": "Build human phosphoproteome dataset",
    "section": "Load PhosphoSitePlus and Ochoa et al.",
    "text": "Load PhosphoSitePlus and Ochoa et al.\n\nochoa = Data.get_ochoa_site()\npsp = Data.get_psp_human_site()\n\nBoth sets’ gene column contains nan\nPSP is gene name, ochoa is porotein name",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#psp",
    "href": "combine_psp_ochoa.html#psp",
    "title": "Build human phosphoproteome dataset",
    "section": "PSP",
    "text": "PSP\n\npsp = psp[psp.site.str[0].isin(['S','T','Y'])]\n\n\npsp = psp[psp.LT_LIT.notna()].reset_index(drop=True)\n\n\npsp['site_seq'] = psp['site_seq'].str.upper()\n\n\npsp = psp[['gene','uniprot','site','site_seq']]",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#ochoa",
    "href": "combine_psp_ochoa.html#ochoa",
    "title": "Build human phosphoproteome dataset",
    "section": "Ochoa",
    "text": "Ochoa\n\nochoa['site'] = ochoa.residue+ochoa.position.astype(str)\n\n\nochoa = ochoa[['gene','current_uniprot','site','site_seq']]\n\n\nochoa = ochoa.rename(columns={'current_uniprot':'uniprot'})",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#combine",
    "href": "combine_psp_ochoa.html#combine",
    "title": "Build human phosphoproteome dataset",
    "section": "Combine",
    "text": "Combine\n\nochoa['source']='ochoa'\n\n\npsp['source']='psp'\n\n\ncomb = psp.merge(ochoa,how='outer',on=['uniprot','site'],suffixes=('_psp','_ochoa'))\n\n\ndef join_columns(row, columns):\n    \"Join non-NA values from specified columns with a separator\"\n    valid_values = set(row[col] for col in columns if pd.notna(row[col]))\n    # return nan if all empty list\n    return np.nan if not valid_values else '|'.join(valid_values)\n\n\ncomb['gene'] = comb.apply(lambda r: join_columns(r, ['gene_psp','gene_ochoa']), axis=1)\n\ncomb['source'] = comb.apply(lambda r: join_columns(r, ['source_psp','source_ochoa']), axis=1)\n\ncomb['site_seq'] = comb.apply(lambda r: join_columns(r, ['site_seq_psp','site_seq_ochoa']), axis=1)\n\n\ncomb = comb[['uniprot','gene','site','site_seq','source']]\n\n\ncomb.source.value_counts()\n\nsource\nochoa        106327\npsp            9138\nochoa|psp      5954\nName: count, dtype: int64\n\n\n\ncomb.shape\n\n(121419, 5)\n\n\n\ncomb['position'] =comb.site.str[1:].astype(int)\n\ncomb = comb.sort_values(by=['uniprot', 'position']).reset_index(drop=True)\n\ncomb = comb.iloc[:,:5]\n\nTo save and load:\n\n# comb.to_parquet('combine_site_psp_ochoa.parquet')\n\n# comb = pd.read_parquet('combine_site_psp_ochoa.parquet')",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#query-uniprot-sequence-on-uniprot-mapping-sequence",
    "href": "combine_psp_ochoa.html#query-uniprot-sequence-on-uniprot-mapping-sequence",
    "title": "Build human phosphoproteome dataset",
    "section": "Query uniprot sequence on uniprot; mapping sequence",
    "text": "Query uniprot sequence on uniprot; mapping sequence\nUncheck below to use the csv for uniprot id mapping\n\n# comb.drop_duplicates(subset='uniprot').to_csv('uniprot.csv',index=False)\n\n\n# unmapped = pd.Series(['AAC50053',\n# 'P18433-2',\n# 'AAA58698',\n# 'NP_001184222',\n# 'AAA60149'])\n\n\nsequence = pd.read_excel('raw/idmapping_2024_06_17.xlsx')\n\n# there are few duplicates uniprot (history uniprot)\nsequence = sequence.drop_duplicates(subset='uniprot')\n\n\nseq = sequence[['uniprot','sequence']].copy()\n\n\ncomb = comb.merge(seq,how='inner',on='uniprot')\n\n\ncomb.shape\n\n(121272, 6)\n\n\n\n121419-121272 # unmatched\n\n147",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#validate-position",
    "href": "combine_psp_ochoa.html#validate-position",
    "title": "Build human phosphoproteome dataset",
    "section": "Validate position",
    "text": "Validate position\n\ncomb['position'] = comb.site.str[1:].astype(int)\n\n\ncomb['acceptor'] = comb.site.str[0]\n\n\ndef validate_position(row):\n    # Extract amino acid and position from the new columns\n    amino_acid = row['acceptor']\n    position = int(row['position'])\n    \n    try:\n        # Check if the amino acid at the given position matches the specified amino acid\n        if row['sequence'][position-1] == amino_acid:\n            return 1\n        else:\n            return 0\n    except IndexError:  # Handle the case when position-1 exceeds the length of sequence\n        return 0\n\n\ncomb['is_valid'] = comb.apply(validate_position,axis=1)\n\n\ncomb.is_valid.value_counts()\n\nis_valid\n1    120104\n0      1168\nName: count, dtype: int64\n\n\n\ncomb = comb[comb.is_valid==1]\n\n\ncomb.source.value_counts()\n\nsource\nochoa        105775\npsp            8382\nochoa|psp      5947\nName: count, dtype: int64\n\n\n\ncomb.shape\n\n(120104, 9)",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#phosphorylate-sequence",
    "href": "combine_psp_ochoa.html#phosphorylate-sequence",
    "title": "Build human phosphoproteome dataset",
    "section": "Phosphorylate sequence",
    "text": "Phosphorylate sequence\n\nmodify=comb.groupby('uniprot').agg({'site':lambda r: r.unique()}).reset_index()\n\n\nmodify = modify.merge(seq)\n\n\ndef phosphorylate_seq(row):\n    seq = list(row['sequence'])\n    for pos in row['site']:\n        # extract character and position\n        position = int(pos[1:]) - 1  # Subtracting 1 because Python uses 0-based indexing\n\n        # convert sequence\n        seq[position] = seq[position].lower()\n    return ''.join(seq)\n\n\nmodify['phospho_seq'] = modify.apply(phosphorylate_seq,axis=1)\n\n\nseq2 = modify[['uniprot','phospho_seq']]",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#extract-sequence",
    "href": "combine_psp_ochoa.html#extract-sequence",
    "title": "Build human phosphoproteome dataset",
    "section": "Extract sequence",
    "text": "Extract sequence\n\ncomb = comb.merge(seq2)\n\n\ncomb.shape\n\n(120104, 10)\n\n\n\nsite_seq = extract_site_seq(comb,'phospho_seq','position')\n\n100%|██████████| 120104/120104 [00:03&lt;00:00, 31171.64it/s]\n\n\n\ncomb['site_seq'] = site_seq\n\n\ncomb.shape\n\n(120104, 10)\n\n\nReorder\n\ncomb['position'] =comb.site.str[1:].astype(int)\n\ncomb = comb.sort_values(by=['uniprot', 'position']).reset_index(drop=True)\n\ncomb = comb.iloc[:,:5]\n\nTo save and load:\n\n# comb.to_parquet('phosphorylated_combine_site.parquet')\n\n# comb=pd.read_parquet('phosphorylated_combine_site.parquet')\n\n\ncomb\n\n\n\n\n\n\n\n\nuniprot\ngene\nsite\nsite_seq\nsource\n\n\n\n\n0\nA0A024R4G9\nC19orf48\nS20\nITGSRLLsMVPGPAR\npsp\n\n\n1\nA0A075B6Q4\nNaN\nS24\nVDDEKGDsNDDYDSA\nochoa\n\n\n2\nA0A075B6Q4\nNaN\nS35\nYDSAGLLsDEDCMSV\nochoa\n\n\n3\nA0A075B6Q4\nNaN\nS57\nIADHLFWsEETKSRF\nochoa\n\n\n4\nA0A075B6Q4\nNaN\nS68\nKSRFTEYsMTssVMR\nochoa\n\n\n...\n...\n...\n...\n...\n...\n\n\n120099\nV9GYY5\nNaN\nS127\nEGGAGDRsEEEAsst\nochoa\n\n\n120100\nV9GYY5\nNaN\nS132\nDRsEEEAsstEKPtK\nochoa\n\n\n120101\nV9GYY5\nNaN\nS133\nRsEEEAsstEKPtKA\nochoa\n\n\n120102\nV9GYY5\nNaN\nT134\nsEEEAsstEKPtKAL\nochoa\n\n\n120103\nV9GYY5\nNaN\nT138\nAsstEKPtKALPRKS\nochoa\n\n\n\n\n120104 rows × 5 columns",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#access-the-dataset-through-data",
    "href": "combine_psp_ochoa.html#access-the-dataset-through-data",
    "title": "Build human phosphoproteome dataset",
    "section": "Access the dataset through Data",
    "text": "Access the dataset through Data\n\nData.get_combine_site_psp_ochoa()\n\n\n\n\n\n\n\n\nuniprot\ngene\nsite\nsite_seq\nsource\nAM_pathogenicity\nCDDM_upper\nCDDM_max_score\n\n\n\n\n0\nA0A024R4G9\nC19orf48\nS20\nITGSRLLSMVPGPAR\npsp\nNaN\nPRKX,AKT1,PKG1,P90RSK,HIPK4,AKT3,HIPK1,PKACB,H...\n2.407041\n\n\n1\nA0A075B6Q4\nNone\nS24\nVDDEKGDSNDDYDSA\nochoa\nNaN\nCK2A2,CK2A1,GRK7,GRK5,CK1G1,CK1A,IKKA,CK1G2,CA...\n2.295654\n\n\n2\nA0A075B6Q4\nNone\nS35\nYDSAGLLSDEDCMSV\nochoa\nNaN\nCK2A2,CK2A1,IKKA,ATM,IKKB,CAMK1D,MARK2,GRK7,IK...\n2.488683\n\n\n3\nA0A075B6Q4\nNone\nS57\nIADHLFWSEETKSRF\nochoa\nNaN\nGRK7,CK2A1,CK2A2,PKN2,GRK1,GRK5,MARK1,MARK2,UL...\n1.851894\n\n\n4\nA0A075B6Q4\nNone\nS68\nKSRFTEYSMTSSVMR\nochoa\nNaN\nAKT1,P90RSK,AKT3,SGK1,AKT2,NDR2,RSK2,P70S6K,RS...\n2.026384\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n121414\nV9GYY5\nNone\nS127\nEGGAGDRSEEEASST\nochoa\nNaN\nCK2A1,CK2A2,GRK7,GRK5,ALK2,GRK1,CK1E,PLK3,CK1A...\n2.665606\n\n\n121415\nV9GYY5\nNone\nS132\nDRSEEEASSTEKPTK\nochoa\nNaN\nCK2A2,CK2A1,GRK7,TGFBR1,GRK2,ALK2,PLK3,CLK3,BM...\n2.445179\n\n\n121416\nV9GYY5\nNone\nS133\nRSEEEASSTEKPTKA\nochoa\nNaN\nCK2A1,ATR,GRK1,CK1G1,PLK3,CLK3,GRK7,CK1G2,MARK...\n2.090739\n\n\n121417\nV9GYY5\nNone\nT134\nSEEEASSTEKPTKAL\nochoa\nNaN\nASK1,PERK,EEF2K,MAP2K4,MEKK2,MST1,BMPR1B,OSR1,...\n1.832532\n\n\n121418\nV9GYY5\nNone\nT138\nASSTEKPTKALPRKS\nochoa\nNaN\nASK1,MEK2,MPSK1,TNIK,PBK,MST2,MINK,NEK4,LKB1,MEK5\n1.807565\n\n\n\n\n121419 rows × 8 columns\n\n\n\n\ncomb2 = Data.get_combine_site_phosphorylated()\n\n\ncomb2[comb2.gene=='CTNNB1']\n\n\n\n\n\n\n\n\nuniprot\ngene\nsite\nsite_seq\nsource\nAM_pathogenicity\nCDDM\nPSPA\nCDDM_max_score\nPSPA_max_score\n\n\n\n\n28253\nP35222\nCTNNB1\nT3\n_____MAtQADLMEL\nochoa\n0.350216\nATR,ATM,DNAPK,CAMKK1,CAMKK2,PBK,ASK1,OSR1,TNIK...\nMARK1,MARK2,DNAPK,ATR,SMG1,HUNK,QSK,MARK3,MARK...\n1.685871\n2.839518\n\n\n28254\nP35222\nCTNNB1\nS23\nPDRKAAVsHWQQQsy\npsp\n0.434195\nP90RSK,RSK4,MARK1,RSK2,AKT1,TSSK2,SGK1,P70S6K,...\nSSTK,BRSK1,PRKD3,BRSK2,P70S6K,SNRK,MARK3,MAPKA...\n1.795827\n3.255439\n\n\n28255\nP35222\nCTNNB1\nS29\nVsHWQQQsyLDsGIH\nochoa|psp\n0.628389\nPAK4,CAMK1D,NIM1,LATS2,PAK5,TBK1,TSSK1,GRK7,NU...\nGSK3A,GSK3B,LATS2,MAPKAPK2,CAMK2A,CAMK2B,LATS1...\n1.693298\n6.465129\n\n\n28256\nP35222\nCTNNB1\nY30\nsHWQQQsyLDsGIHs\nochoa|psp\n0.780358\nERBB4,FGFR4,TNK1,JAK3,CSK,KIT,EPHA5,EGFR,JAK2,...\nBMPR2_TYR,PTK2,SYK,ERBB4,PDHK1_TYR,EPHA3,PDHK4...\n1.596045\n2.796830\n\n\n28257\nP35222\nCTNNB1\nS33\nQQQsyLDsGIHsGAT\npsp\n0.978753\nGSK3B,IKKB,IKKA,GSK3A,TBK1,PAK4,GRK1,IKKE,P90R...\nCK1G2,CK1A,CK1G3,GSK3A,GSK3B,GRK3,CK1A2,CK1D,J...\n1.797053\n8.479370\n\n\n28258\nP35222\nCTNNB1\nS37\nyLDsGIHsGATtTAP\nochoa|psp\n0.954689\nGSK3A,PAK6,PAK5,GSK3B,TBK1,PAK4,PRKX,IKKB,ULK3...\nGSK3A,GSK3B,CK1A,CK1G2,GRK7,IKKA,GRK4,GRK5,IKK...\n1.795597\n8.083523\n\n\n28259\nP35222\nCTNNB1\nT41\nGIHsGATtTAPsLsG\npsp\n0.903105\nMPSK1,GSK3B,PBK,GSK3A,MEK2,ASK1,LKB1,TNIK,MEKK...\nGSK3A,GSK3B,PRP4,PASK,CK1G2,CK1A,GRK7,CK1D,CK1...\n1.649193\n7.866048\n\n\n28260\nP35222\nCTNNB1\nS45\nGATtTAPsLsGKGNP\nochoa|psp\n0.915674\nTBK1,IKKE,PAK6,MTOR,PAK5,PRKX,RSK4,RSK2,CK1A,ULK3\nCK1A,CK1G1,CK1D,CK1G2,MTOR,CK1E,CK1A2,CLK3,IKK...\n2.044766\n4.275749\n\n\n28261\nP35222\nCTNNB1\nS47\nTtTAPsLsGKGNPEE\nochoa\n0.556963\nCK1G2,PAK5,PAK6,PRKX,PKACB,CK2A1,PRKD3,ULK3,RS...\nMPSK1,CK1E,ERK5,GRK1,CK1D,COT,MOS,NLK,MLK3,ERK1\n1.823853\n2.982430\n\n\n28262\nP35222\nCTNNB1\nS60\nEEEDVDTsQVLyEWE\npsp\n0.208932\nATM,ATR,GRK7,GRK1,BUB1B,CK2A2,GRK5,DNAPK,CK2A1...\nATM,ACVR2B,ACVR2A,GRK4,GRK7,CK1G2,PLK1,TLK2,PL...\n2.656530\n5.809839\n\n\n28263\nP35222\nCTNNB1\nY64\nVDTsQVLyEWEQGFS\npsp\n0.294942\nTEC,BLK,EPHA4,BTK,SRMS,SYK,FES,EPHA7,EPHA6,FYN\nSYK,MERTK,EPHA5,SRMS,EPHA4,FER,EPHA3,PTK6,FES,TEK\n1.804839\n2.871988\n\n\n28264\nP35222\nCTNNB1\nS73\nWEQGFSQsFTQEQVA\npsp\n0.347105\nBRSK2,IKKB,ULK3,TSSK1,NUAK1,PKACB,PRKX,NDR2,TB...\nCAMK2G,ULK1,PLK1,PLK3,IKKA,CAMK2B,DSTYK,NEK2,I...\n1.725664\n2.099936\n\n\n28265\nP35222\nCTNNB1\nY86\nVADIDGQyAMTRAQR\npsp\n0.688526\nJAK3,FGFR4,EGFR,TEK,KIT,FYN,BLK,LTK,TNK2,ABL1\nABL1,ABL2,MATK,BLK,FYN,FGR,MERTK,ZAP70,LCK,HCK\n1.819756\n2.467626\n\n\n28266\nP35222\nCTNNB1\nT102\nRAAMFPEtLDEGMQI\npsp\n0.894711\nTNIK,CK2A2,HGK,CAMKK1,MEKK3,NEK4,MINK,GCK,KHS1...\nDNAPK,CK2A1,CK2A2,CAMK2G,PLK2,PLK3,CAMK2A,TGFB...\n1.607649\n3.374482\n\n\n28267\nP35222\nCTNNB1\nT112\nEGMQIPStQFDAAHP\npsp\n0.663232\nATR,ATM,DNAPK,EEF2K,CAMKK2,PBK,ICK,MPSK1,OSR1,...\nATR,DNAPK,SMG1,P38D,MPSK1,ATM,ICK,EEF2K,TLK2,A...\n1.758952\n2.576788\n\n\n28268\nP35222\nCTNNB1\nT120\nQFDAAHPtNVQRLAE\npsp\n0.878526\nPBK,LKB1,CAMKK1,OSR1,TNIK,EEF2K,ROCK2,NEK4,MIN...\nMPSK1,TAK1,PINK1,VRK1,YANK2,GAK,GSK3A,PASK,ROC...\n1.595444\n1.445671\n\n\n28269\nP35222\nCTNNB1\nY142\nAVVNLINyQDDAELA\npsp\n0.980268\nEPHA4,ATR,EPHA6,EPHA7,EPHB1,EPHA3,EPHB2,EPHA8,...\nPDHK3_TYR,EPHA4,PDHK4_TYR,EPHA5,EPHA3,PDHK1_TY...\n1.930682\n0.982576\n\n\n28270\nP35222\nCTNNB1\nS184\nQLSKKEAsRHAIMRs\npsp\n0.927547\nPAK4,TSSK1,BRSK2,MNK2,PAK6,PKN2,MARK2,NUAK1,DC...\nSSTK,DCAMKL1,BRSK2,TSSK1,BRSK1,TLK1,TSSK2,AMPK...\n1.935281\n4.978343\n\n\n28271\nP35222\nCTNNB1\nS191\nsRHAIMRsPQMVSAI\nochoa|psp\n0.811158\nCDK4,ERK2,DYRK1A,CDK1,HIPK3,CDK2,CDK5,ERK1,DYR...\nCDK17,CDK16,CDK14,CDK18,ERK1,ERK2,P38G,CDK9,CD...\n2.070521\n4.814151\n\n\n28272\nP35222\nCTNNB1\nS246\nALVKMLGsPVDSVLF\npsp\n0.772711\nCDK4,CDK1,CDK2,CDK5,ERK2,CDK3,JNK1,ERK1,DYRK4,...\nJNK1,JNK2,P38D,JNK3,P38G,P38B,P38A,CDK8,NLK,CDK14\n2.267036\n6.378471\n\n\n28273\nP35222\nCTNNB1\nT298\nVKFLAITtDCLQILA\npsp\n0.972658\nPBK,LKB1,TNIK,NEK4,MST2,MINK,CAMKK1,MST1,NEK1,HGK\nMEK1,GSK3B,MOS,DAPK2,ALK4,ACVR2B,ACVR2A,MEK2,B...\n1.589268\n0.414628\n\n\n28274\nP35222\nCTNNB1\nS311\nLAYGNQEsKLIILAS\npsp\n0.972500\nTSSK1,NIM1,QIK,TSSK2,MARK2,MARK1,CAMK1D,MARK3,...\nIRE2,SKMLCK,TSSK1,SSTK,SMMLCK,TLK1,TSSK2,MELK,...\n1.821695\n2.632692\n\n\n28275\nP35222\nCTNNB1\nY331\nLVNIMRTytyEKLLW\npsp\n0.837516\nDDR2,FGFR4,EPHB1,LCK,RET,EPHA8,FES,EPHA4,EPHA5...\nPTK2,EPHA4,EPHA7,EPHA3,EPHA6,PTK2B,BMPR2_TYR,S...\n1.629153\n4.126294\n\n\n28276\nP35222\nCTNNB1\nT332\nVNIMRTytyEKLLWT\npsp\n0.408153\nAKT1,PBK,AMPKA1,LRRK2,CHK2,LKB1,TNIK,GCK,ROCK2...\nALPHAK3,YANK2,PASK,GRK7,SBK,YANK3,MAPKAPK2,NUA...\n1.434642\n4.102963\n\n\n28277\nP35222\nCTNNB1\nY333\nNIMRTytyEKLLWTT\npsp\n0.982195\nEPHA1,EPHA7,EPHA2,BLK,TNK2,SRMS,EPHA4,LTK,EPHA...\nSYK,BLK,EPHA6,EPHA4,FRK,PTK2,ZAP70,ERBB4,EPHA8...\n1.711815\n3.995439\n\n\n28278\nP35222\nCTNNB1\nS352\nKVLSVCSsNKPAIVE\npsp\n0.839116\nPRKD2,PRKD3,HIPK4,PRKD1,MAPKAPK3,TSSK2,CAMK4,M...\nBUB1,HIPK4,PRKD1,PRKD2,PRKD3,CDK18,KIS,PERK,ML...\n2.003260\n2.875428\n\n\n28279\nP35222\nCTNNB1\nT371\nQALGLHLtDPsQRLV\npsp\n0.286979\nPBK,LKB1,NEK4,TNIK,CAMKK1,MEKK3,CAMKK2,MINK,GC...\nSMG1,MEK1,MEK2,ACVR2B,CK2A1,GSK3B,MOS,DAPK2,BU...\n1.658914\n1.683408\n\n\n28280\nP35222\nCTNNB1\nS374\nGLHLtDPsQRLVQNC\npsp\n0.960511\nATR,ATM,DNAPK,ERK7,NIM1,TSSK2,LATS1,PKCA,DSTYK...\nCK1G3,CK1D,CK1A,CK1E,CK1A2,CK1G2,CK1G1,KIS,TGF...\n2.421310\n5.546010\n\n\n28281\nP35222\nCTNNB1\nT384\nLVQNCLWtLRNLSDA\npsp\n0.945400\nCAMKK1,MINK,TNIK,CAMKK2,MST1,ERK7,NEK4,HGK,LKB...\nERK7,TAK1,NEK4,MST1,HPK1,NEK8,CAMKK1,IRAK1,NEK...\n1.728943\n2.678529\n\n\n28282\nP35222\nCTNNB1\nT393\nRNLSDAAtKQEGMEG\npsp\n0.846858\nCK2A2,MEKK3,PBK,TNIK,CAMKK1,CAMKK2,MINK,MST1,M...\nGSK3A,CK1G3,TLK1,TSSK2,TLK2,GRK7,ALPHAK3,GSK3B...\n1.609937\n1.804045\n\n\n28283\nP35222\nCTNNB1\nT472\nICALRHLtSRHQEAE\npsp\n0.988368\nAKT1,ROCK1,ROCK2,SGK1,ERK7,MRCKB,PBK,AKT3,MST1...\nPIM2,PKN1,ROCK1,MRCKB,PKCE,AKT3,LOK,AKT1,SGK1,...\n1.585884\n4.709928\n\n\n28284\nP35222\nCTNNB1\nY489\nQNAVRLHyGLPVVVK\nochoa|psp\n0.690221\nCSK,PTK6,TNK1,TNK2,ABL1,PTK2B,LTK,TYRO3,LCK,PD...\nABL1,PTK2B,ABL2,PKMYT1_TYR,TNK2,FER,TNK1,PTK6,...\n1.824113\n2.370134\n\n\n28285\nP35222\nCTNNB1\nT547\nLVRAHQDtQRRtsMG\nochoa\n0.646316\nATR,OSR1,ATM,DNAPK,TNIK,MINK,ERK7,HGK,EEF2K,LKB1\nGSK3B,GSK3A,EEF2K,OSR1,PIM1,MLK4,PKCB,CAMK2A,E...\n1.709029\n5.511960\n\n\n28286\nP35222\nCTNNB1\nT551\nHQDtQRRtsMGGtQQ\nochoa|psp\n0.402405\nLKB1,PBK,ROCK1,OSR1,TNIK,ROCK2,AURB,ASK1,HASPI...\nDAPK1,DAPK3,CK1G2,GRK2,GRK3,AURA,CK1A,CK1A2,CK...\n1.511777\n4.392697\n\n\n28287\nP35222\nCTNNB1\nS552\nQDtQRRtsMGGtQQQ\nochoa|psp\n0.596179\nPRKX,PKACA,PKACB,AKT1,PKG2,PKG1,AURB,AURC,AKT3...\nAURA,PRKX,CLK2,GSK3B,PKACB,MSK1,AURC,GSK3A,DAP...\n2.333742\n7.778372\n\n\n28288\nP35222\nCTNNB1\nT556\nRRtsMGGtQQQFVEG\nochoa|psp\n0.330547\nATR,ATM,DNAPK,OSR1,PBK,HASPIN,TNIK,GCK,HGK,MINK\nATR,DNAPK,SMG1,CK1G3,ATM,TLK2,NEK5,CK1D,MEKK2,...\n1.792496\n3.552549\n\n\n28289\nP35222\nCTNNB1\nS605\nLFVQLLYsPIENIQR\npsp\n0.744484\nCDK1,CDK4,CDK5,CDK2,CDK3,ERK2,ERK1,JNK1,P38G,JNK2\nJNK1,JNK3,JNK2,P38D,P38G,P38B,ERK5,ERK2,ERK1,D...\n2.161258\n5.347646\n\n\n28290\nP35222\nCTNNB1\nS646\nPLTELLHsRNEGVAt\npsp\n0.956311\nCK2A2,CK2A1,IKKB,GRK1,GRK7,PAK4,IKKA,ULK3,P90R...\nGRK6,PINK1,NEK9,PLK2,CAMKK1,NEK7,PLK3,GRK5,COT...\n2.018886\n2.662771\n\n\n28291\nP35222\nCTNNB1\nT653\nsRNEGVAtyAAAVLF\nochoa|psp\n0.986426\nTNIK,PBK,OSR1,TAO2,MINK,MST1,KHS1,MST2,GCK,TAO1\nGRK7,PRP4,TGFBR1,ALK4,JNK1,P38G,P38B,ACVR2B,BM...\n1.631637\n2.709797\n\n\n28292\nP35222\nCTNNB1\nY654\nRNEGVAtyAAAVLFR\nochoa|psp\n0.993016\nEPHA7,EPHA4,TXK,CSK,LTK,BTK,EPHB3,LYN,EPHA1,BLK\nPTK2,EPHA6,EPHB2,BLK,FYN,ZAP70,ABL2,ABL1,SYK,LCK\n1.929364\n3.188853\n\n\n28293\nP35222\nCTNNB1\nY670\nSEDKPQDyKKRLsVE\npsp\n0.954805\nFLT1,SYK,PTK2,KIT,CSF1R,EPHA4,EPHA6,JAK2,EPHA2...\nPDHK4_TYR,WEE1_TYR,TNNI3K_TYR,BMPR2_TYR,PDHK3_...\n1.951307\n1.536509\n\n\n28294\nP35222\nCTNNB1\nS675\nQDyKKRLsVELtssL\nochoa|psp\n0.980063\nPAK4,PAK6,PAK5,PKACA,AURB,PAK1,PKG2,PRKX,PAK2,...\nGSK3B,AURA,MYLK4,MSK1,CLK4,PKACA,DAPK1,SKMLCK,...\n2.388692\n6.234278\n\n\n28295\nP35222\nCTNNB1\nT679\nKRLsVELtssLFRTE\nochoa\n0.953053\nTGFBR1,BMPR1B,ALK2,PBK,CAMKK2,ALK4,OSR1,PERK,T...\nBMPR1B,BMPR1A,ACVR2B,ACVR2A,TGFBR1,GRK2,GRK3,A...\n1.719372\n6.180493\n\n\n28296\nP35222\nCTNNB1\nS680\nRLsVELtssLFRTEP\nochoa\n0.810021\nIKKB,GRK7,CLK3,CK1G1,CDK7,CK1G3,P90RSK,RSK4,CK...\nCK1G2,CK1A,GRK2,CK1E,GRK3,CK1A2,CK1D,CK1G3,ACV...\n1.845225\n4.125982\n\n\n28297\nP35222\nCTNNB1\nS681\nLsVELtssLFRTEPM\nochoa\n0.905768\nULK3,CLK3,TBK1,MTOR,IKKE,DSTYK,IKKB,NEK7,NEK6,...\nCK1G2,CK1D,CK1E,CK1A2,CK1A,GRK1,CK1G3,GRK3,GRK...\n1.881727\n4.856114\n\n\n28298\nP35222\nCTNNB1\nS715\nGYRQDDPsyRsFHSG\nochoa|psp\n0.276474\nCK1G2,CK1G3,ERK7,CK1G1,AKT1,CK1A,RSK4,P90RSK,T...\nGRK7,CK1G2,CLK3,GRK3,CK1G3,GRK2,ACVR2A,GSK3A,L...\n1.845451\n5.621210\n\n\n28299\nP35222\nCTNNB1\nY716\nYRQDDPsyRsFHSGG\nochoa\n0.276789\nKIT,EGFR,JAK1,FGFR4,FLT3,CSF1R,FYN,ABL1,TEK,FLT1\nPTK2,FYN,ERBB4,FLT1,SYK,ZAP70,SRC,BLK,MET,LCK\n1.730527\n6.357552\n\n\n28300\nP35222\nCTNNB1\nS718\nQDDPsyRsFHSGGYG\npsp\n0.365442\nIKKA,TBK1,IKKB,CK1A,PAK5,CK1G2,PAK6,ULK3,MNK2,...\nCK1G2,CK1G3,CK1A,YANK2,GRK3,CK1G1,YANK3,CK1A2,...\n1.670313\n10.234688",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#code-only-add-alphamissense-score-to-each-site",
    "href": "combine_psp_ochoa.html#code-only-add-alphamissense-score-to-each-site",
    "title": "Build human phosphoproteome dataset",
    "section": "(code only) Add AlphaMissense score to each site",
    "text": "(code only) Add AlphaMissense score to each site\nThe AM_mean.parquet file is too big to upload to the current repository. To generate the file, refer to others_01_Process_AM.ipynb notebook.\n\ndf = pd.read_parquet('raw/AM_mean.parquet')\n\n\ndf.columns = ['uniprot','site','AM_pathogenicity','position']\n\n\ndf = df.iloc[:,:3]\n\nThe original:\n\ncomb1 = Data.get_combine_site_psp_ochoa()\n\n\ncomb1=comb1.merge(df,how='left',on=['uniprot','site'])\n\nThe phosphorylated\n\ncomb2 = Data.get_combine_site_phosphorylated()\n\n\ncomb2=comb2.merge(df,how='left',on=['uniprot','site'])",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "combine_psp_ochoa.html#add-kinase-prediction",
    "href": "combine_psp_ochoa.html#add-kinase-prediction",
    "title": "Build human phosphoproteome dataset",
    "section": "Add kinase prediction",
    "text": "Add kinase prediction\nfor uppercase, only cddm\n\ncomb1['site_seq'] = comb1['site_seq'].str.split('|').str[0] # only one site with one aa difference\n\n\ncddm_upper = predict_kinase_df(comb1,'site_seq',**param_CDDM_upper)\n\ninput dataframe has a length 121419\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [02:22&lt;00:00,  2.03it/s]\n\n\n\ndef get_top(r, n):\n    top = r.sort_values(ascending=False)[:n].index\n    return ','.join(top)\n\n\ncddm_upper_rnk = cddm_upper.apply(lambda r: get_top(r,10),axis=1)\n\n\ncomb1['CDDM_upper']=cddm_upper_rnk\n\n\ncomb1['CDDM_max_score'] = cddm_upper.max(1)\n\nUncheck below to save:\n\n# comb1.to_parquet('raw/combine_site_psp_ochoa.parquet')\n\nFor phosphorylated:\n\ncddm = predict_kinase_df(comb2,'site_seq',**param_CDDM)\n\ninput dataframe has a length 120104\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [02:17&lt;00:00,  2.11it/s]\n\n\n\npspa = predict_kinase_df(comb2,'site_seq',**param_PSPA)\n\ninput dataframe has a length 120104\nPreprocessing\nFinish preprocessing\nCalculating position: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5]\n\n\n100%|██████████| 396/396 [04:16&lt;00:00,  1.55it/s]\n\n\n\ncddm_rnk = cddm.apply(lambda r: get_top(r,10),axis=1)\npspa_rnk = pspa.apply(lambda r: get_top(r,10),axis=1)\n\n\ncomb2['CDDM']=cddm_rnk\n\n\ncomb2['PSPA']=pspa_rnk\n\n\ncomb2['CDDM_max_score']=cddm.max(1)\ncomb2['PSPA_max_score']=pspa.max(1)\n\nTo save and load:\n\n# comb2.to_parquet('raw/phosphorylated_combine_site.parquet')\n\n# comb2 = pd.read_parquet('raw/phosphorylated_combine_site.parquet')",
    "crumbs": [
      "Build human phosphoproteome dataset"
    ]
  },
  {
    "objectID": "ml_analysis.html",
    "href": "ml_analysis.html",
    "title": "Analyze DL/ML results",
    "section": "",
    "text": "from fastbook import *\nfrom scipy.optimize import minimize\nfrom katlas.imports import *\nimport seaborn as sns",
    "crumbs": [
      "Analyze DL/ML results"
    ]
  },
  {
    "objectID": "ml_analysis.html#setup",
    "href": "ml_analysis.html#setup",
    "title": "Analyze DL/ML results",
    "section": "",
    "text": "from fastbook import *\nfrom scipy.optimize import minimize\nfrom katlas.imports import *\nimport seaborn as sns",
    "crumbs": [
      "Analyze DL/ML results"
    ]
  },
  {
    "objectID": "ml_analysis.html#load-data",
    "href": "ml_analysis.html#load-data",
    "title": "Analyze DL/ML results",
    "section": "Load data",
    "text": "Load data\n\n# read training data\ndf = pd.read_parquet('train_data/combine_t5_kd.parquet').reset_index()\n# column name of feature and target\nfeat_col = df.columns[df.columns.str.startswith('T5_')]\ntarget_col = df.columns[~df.columns.isin(feat_col)][1:]\n\ny = df[target_col]\n\n\noof_results = pd.read_pickle('raw/oof.pkl')\n\n\nsource = pd.read_excel('train_data/combine_info_PSPA.xlsx').iloc[:,:2]\n\ninfo = Data.get_kinase_info().query('pseudo !=\"1\"')\n\ninfo = source.merge(info)",
    "crumbs": [
      "Analyze DL/ML results"
    ]
  },
  {
    "objectID": "ml_analysis.html#ensemble",
    "href": "ml_analysis.html#ensemble",
    "title": "Analyze DL/ML results",
    "section": "Ensemble",
    "text": "Ensemble\nThe goal here is to use different weights for each oof to optimize the results; then choose the top models, and re-ensemble them and see their weights.\n\ndef ensemble(oof_results, # dictionary of oofs\n             y # target df\n            ):\n    \n    \"Ensemble a dictionary of OOFs\"\n    \n    oofs = np.zeros((len(oof_results), y.shape[0], y.shape[1]))\n    y_true = y.values\n    \n    for i in range(oofs.shape[0]):\n        oofs[i] = list(oof_results.values())[i]\n        \n    # The sum of weights is 1 (because we normalize it)\n    cons = ({'type':'eq','fun':lambda w: 1-sum(w)})\n\n    # Each weight is bounded between 0 and 1\n    num_models = len(oofs)\n    bounds = [(0, 1)] * num_models\n\n    # Initial guess - divide 1 equally among all models\n    initial_weights = [1./num_models] * num_models\n    \n    # Objective function to minimize (Mean Squared Error)\n    def objective(weights): \n        ''' Minimize negative Mean Squared Error to find the best weights '''\n        final_prediction = sum(w * oof for w, oof in zip(weights, oofs))\n        return np.mean((final_prediction - y_true) ** 2)\n\n    # Use 'trust-constr' or 'SLSQP' method to ensure constraints are followed\n    result = minimize(objective, initial_weights, method='SLSQP', bounds=bounds, constraints=cons)\n    # result = minimize(objective, initial_weights, method='trust-constr', bounds=bounds, constraints=cons, options={'maxiter': 5000})\n\n    # Check whether it is converged\n    print(f'result: {result.success}')\n    print(result.message)\n\n    # Extract the optimized weights\n    best_weights = result.x\n    # print(best_weights)\n    \n    weights = {}\n\n    i = 0\n    for k,v in oof_results.items():\n        weights[k] = best_weights[i]\n        i+=1\n        \n    weights_df = pd.DataFrame(weights.items(),columns=['model','weights'])\n    \n    display(weights_df.sort_values('weights',ascending=False))\n    \n    final_prediction = sum(w * oof for w, oof in zip(best_weights, oofs))\n    oof_w = pd.DataFrame(final_prediction,columns=target_col)\n    \n    return weights_df, oof_w\n\n\n# get ensemble weights for each oof\nweights,oof_ensemble = ensemble(oof_results,y)\n\nresult: True\nOptimization terminated successfully\n\n\n\n\n\n\n\n\n\nmodel\nweights\n\n\n\n\n5\ncnn_t5_kd\n2.229052e-01\n\n\n7\ncnn_esm_kd\n2.044781e-01\n\n\n4\ncnn_t5\n1.372858e-01\n\n\n19\nRidge_esm_kd\n7.176390e-02\n\n\n29\nKNN_t5_kd\n7.153355e-02\n\n\n11\nLinearRegression_esm_kd\n5.621854e-02\n\n\n10\nLinearRegression_esm\n5.518402e-02\n\n\n9\nLinearRegression_t5_kd\n4.254569e-02\n\n\n6\ncnn_esm\n4.045877e-02\n\n\n28\nKNN_t5\n2.837086e-02\n\n\n31\nKNN_esm_kd\n2.613324e-02\n\n\n8\nLinearRegression_t5\n1.770226e-02\n\n\n25\nDecisionTreeRegressor_t5_kd\n1.498182e-02\n\n\n27\nDecisionTreeRegressor_esm_kd\n5.412341e-03\n\n\n18\nRidge_esm\n5.025994e-03\n\n\n15\nLasso_esm_kd\n1.081117e-17\n\n\n20\nElasticNet_t5\n7.169454e-18\n\n\n1\nmlp_t5_kd\n5.042534e-18\n\n\n14\nLasso_esm\n3.581190e-18\n\n\n0\nmlp_t5\n3.488243e-18\n\n\n21\nElasticNet_t5_kd\n1.283283e-18\n\n\n22\nElasticNet_esm\n1.233044e-18\n\n\n13\nLasso_t5_kd\n8.692677e-19\n\n\n2\nmlp_esm\n7.528412e-19\n\n\n17\nRidge_t5_kd\n0.000000e+00\n\n\n23\nElasticNet_esm_kd\n0.000000e+00\n\n\n24\nDecisionTreeRegressor_t5\n0.000000e+00\n\n\n26\nDecisionTreeRegressor_esm\n0.000000e+00\n\n\n12\nLasso_t5\n0.000000e+00\n\n\n3\nmlp_esm_kd\n0.000000e+00\n\n\n30\nKNN_esm\n0.000000e+00\n\n\n16\nRidge_t5\n0.000000e+00\n\n\n\n\n\n\n\n\n_ = score_each(y,oof_ensemble)\n\noverall MSE: 0.2979\nAverage Pearson: 0.8240 \n\n\nThen we choose the top three models and ensemble them.\n\ntop = ['cnn_t5_kd','cnn_esm_kd','cnn_t5']\n\n\noofs2 = {key: oof_results[key] for key in top}\n\n\nweights2,oof_ensemble2 = ensemble(oofs2,y)\n\nresult: True\nOptimization terminated successfully\n\n\n\n\n\n\n\n\n\nmodel\nweights\n\n\n\n\n1\ncnn_esm_kd\n0.370932\n\n\n0\ncnn_t5_kd\n0.350575\n\n\n2\ncnn_t5\n0.278493\n\n\n\n\n\n\n\n\n_,_,corr = score_each(y,oof_ensemble2)\n\noverall MSE: 0.3081\nAverage Pearson: 0.8174 \n\n\n\n# Pie Chart\nlabels = weights2.model\nsizes =  weights2.weights\n\nplt.figure(figsize=(5, 5))\nplt.pie(sizes, labels=labels, autopct='%1.2f%%', startangle=140, colors=sns.color_palette(\"Set3\", len(weights2)))\nplt.title(\"Ensemble Weights\")\nplt.show()\n\n\n\n\n\n\n\n\nAs it looks to be an average of the three models, we’ll take the average of them\n\noof_ensemble = (oof_results['cnn_t5_kd'] + oof_results['cnn_esm_kd'] + oof_results['cnn_t5']) / 3\n\n\noof_ensemble\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n-3S\n-3T\n-3V\n-3I\n-3L\n-3M\n-3F\n-3Y\n-3W\n-3H\n-3K\n-3R\n-3Q\n-3N\n-3D\n-3E\n-3s\n-3t\n-3y\n-2P\n-2G\n-2A\n-2C\n-2S\n-2T\n-2V\n-2I\n-2L\n-2M\n-2F\n-2Y\n-2W\n-2H\n-2K\n-2R\n-2Q\n-2N\n-2D\n-2E\n-2s\n-2t\n-2y\n-1P\n-1G\n-1A\n-1C\n-1S\n-1T\n-1V\n-1I\n-1L\n-1M\n-1F\n-1Y\n-1W\n-1H\n-1K\n-1R\n-1Q\n-1N\n-1D\n-1E\n-1s\n-1t\n-1y\n1P\n1G\n1A\n1C\n1S\n1T\n1V\n1I\n1L\n1M\n1F\n1Y\n1W\n1H\n1K\n1R\n1Q\n1N\n1D\n1E\n1s\n1t\n1y\n2P\n2G\n2A\n2C\n2S\n2T\n2V\n2I\n2L\n2M\n2F\n2Y\n2W\n2H\n2K\n2R\n2Q\n2N\n2D\n2E\n2s\n2t\n2y\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n\n\n\n\n0\n0.188878\n0.634647\n0.887343\n-0.927092\n-0.392501\n-0.586569\n0.142022\n0.007973\n0.562061\n-0.993858\n-0.566768\n-1.220567\n-1.158315\n-0.642133\n1.120802\n0.364175\n0.375434\n0.055257\n1.663378\n2.376884\n-0.301946\n-0.794536\n-0.552649\n0.190727\n1.270748\n0.513715\n-0.854113\n-0.487572\n-0.638809\n0.230982\n-0.242128\n1.036821\n-0.792146\n-0.403138\n-1.319813\n-1.409867\n-0.841248\n0.476729\n0.362317\n-0.164695\n-0.232484\n1.704270\n2.104024\n0.291016\n-0.687562\n-0.548687\n0.069685\n0.753290\n1.037177\n-1.145434\n-0.621697\n-0.929131\n0.163861\n-0.488886\n0.603018\n-0.976631\n-0.657797\n-1.337881\n-1.360138\n-0.648267\n0.672734\n0.166015\n0.424121\n0.005110\n1.784140\n3.080080\n0.135212\n-0.625342\n-0.208076\n0.522695\n1.255310\n0.811666\n-1.000513\n-0.704257\n-0.894888\n0.036102\n-0.181274\n0.143785\n-1.174770\n-0.859642\n-1.324347\n-1.155678\n-0.889019\n0.587813\n-0.260471\n0.352046\n0.267965\n2.108112\n2.557907\n0.359679\n-0.419893\n-0.191064\n-0.031897\n-0.041261\n0.768281\n-1.046224\n-1.056009\n-0.841082\n1.678762\n1.474963\n2.380413\n-1.209911\n-0.328476\n-1.353052\n-1.178340\n-0.810562\n-0.073252\n-0.627969\n-0.244801\n-0.143653\n1.185254\n1.820870\n-0.503965\n0.033932\n0.055079\n-0.990394\n2.050974\n1.202434\n-0.896472\n-0.751740\n-1.074353\n0.673735\n0.215778\n0.388112\n-0.904532\n-0.696476\n-1.325945\n-1.133978\n-0.718839\n-0.004357\n-0.723982\n0.306474\n-0.201503\n1.981238\n3.301958\n0.194510\n-0.673171\n-0.147423\n-0.012991\n0.666403\n1.149449\n-0.809711\n-0.726497\n-0.936235\n0.676131\n-0.102694\n0.933665\n-0.895986\n-0.314606\n-1.249670\n-1.060242\n-0.775663\n0.120224\n-0.079433\n-0.139687\n0.144503\n1.457012\n2.152325\n0.207267\n-0.323534\n-0.220516\n0.579143\n0.581741\n0.764128\n-0.780944\n-0.667929\n-0.927524\n0.894377\n0.651753\n2.628730\n-0.783616\n-0.169506\n-1.289550\n-1.116577\n-0.653992\n0.193128\n0.715483\n-0.328777\n-0.497816\n0.547089\n0.568319\n-0.167851\n-0.542341\n-0.194183\n0.416947\n0.874074\n1.057034\n-0.942906\n-0.373124\n-0.787586\n0.601266\n-0.254105\n0.793548\n-0.834147\n-0.294836\n-1.225388\n-1.186767\n-0.653884\n0.888362\n0.690264\n-0.043264\n-0.115584\n1.033319\n1.457796\n-0.159984\n-0.520591\n-0.457668\n-0.704891\n-0.679028\n1.414340\n\n\n1\n-0.025378\n0.714929\n0.920944\n-1.022550\n-0.377764\n-0.636222\n0.134602\n-0.041053\n0.666049\n-0.975972\n-0.436032\n-1.089625\n-1.148152\n-0.615748\n1.547186\n0.616245\n0.263874\n0.219127\n1.361456\n1.681483\n-0.458307\n-0.781143\n-0.551071\n0.131412\n1.280712\n0.343339\n-0.892329\n-0.411230\n-0.595306\n0.272755\n-0.149464\n1.104624\n-0.778450\n-0.379281\n-1.217710\n-1.201595\n-0.732177\n0.788771\n0.675667\n-0.106178\n-0.085377\n1.359592\n1.520061\n0.125365\n-0.668326\n-0.569933\n0.217928\n0.803164\n1.125930\n-1.078663\n-0.694710\n-0.892364\n0.308811\n-0.217046\n0.690249\n-0.967827\n-0.508961\n-1.235178\n-1.157629\n-0.601595\n0.733407\n0.290156\n0.361249\n-0.081060\n1.511702\n2.072425\n0.152596\n-0.614647\n-0.341213\n0.232904\n0.967064\n0.870205\n-0.957279\n-0.700066\n-1.014585\n0.176937\n-0.020815\n0.229948\n-1.000263\n-0.768759\n-1.291999\n-1.003731\n-0.901384\n1.032405\n0.113560\n0.275431\n-0.084332\n1.372409\n2.307034\n0.361895\n-0.367394\n-0.101802\n-0.505137\n-0.005732\n0.529710\n-1.089594\n-1.030629\n-0.930996\n0.675152\n0.595349\n1.792188\n-1.231175\n-0.360018\n-1.313301\n-1.248776\n-0.891328\n-0.034980\n-0.276024\n-0.269184\n0.695430\n3.171903\n2.060493\n-0.313544\n-0.091605\n0.062153\n-0.884825\n0.876114\n1.224441\n-0.919931\n-0.917134\n-1.074066\n1.190683\n0.769583\n0.686133\n-0.905399\n-0.505974\n-1.319224\n-1.148758\n-0.704071\n-0.205544\n-0.778959\n0.389553\n-0.531959\n1.657287\n3.571767\n0.192003\n-0.706291\n-0.158499\n-0.136238\n0.138411\n0.950910\n-0.904203\n-0.872926\n-0.971147\n0.585231\n-0.246415\n0.663709\n-0.727415\n-0.171336\n-1.205408\n-1.029339\n-0.633804\n0.182212\n-0.301457\n-0.200499\n0.235688\n2.338714\n2.657143\n0.058047\n-0.332117\n-0.117603\n0.449370\n0.295798\n0.717976\n-0.782166\n-1.050453\n-0.913831\n1.325246\n0.764809\n3.037096\n-0.633829\n-0.091207\n-1.248452\n-1.097738\n-0.679635\n-0.100422\n0.314001\n-0.278309\n-0.327892\n0.736089\n0.606189\n-0.329023\n-0.365070\n-0.414462\n0.277456\n0.820147\n0.992880\n-0.931553\n-0.488792\n-0.853461\n0.552210\n-0.261802\n0.841647\n-0.791326\n-0.152338\n-1.163227\n-1.173420\n-0.663181\n0.814095\n0.477838\n-0.275963\n-0.028011\n1.277532\n1.637414\n-0.231553\n-0.460945\n-0.521478\n-0.666918\n-0.666190\n1.365925\n\n\n2\n-0.024647\n0.560756\n0.934807\n-0.974955\n-0.175042\n-0.629669\n0.058849\n-0.054240\n0.548685\n-0.881397\n-0.394332\n-1.076726\n-1.069301\n-0.709501\n1.228867\n0.759148\n0.222496\n0.029304\n1.321192\n1.630601\n-0.312367\n-0.637080\n-0.497616\n0.074048\n1.185613\n0.402796\n-0.747981\n-0.400933\n-0.575594\n0.273450\n-0.230542\n1.133951\n-0.717366\n-0.266730\n-1.135025\n-1.146772\n-0.733745\n0.728746\n0.739683\n-0.047235\n-0.141333\n1.264864\n1.433561\n0.203258\n-0.433761\n-0.338125\n-0.044754\n0.713836\n1.139258\n-0.899315\n-0.652277\n-0.879406\n0.059048\n-0.320130\n0.305766\n-0.920699\n-0.600200\n-1.255255\n-1.168093\n-0.597407\n0.832587\n0.963251\n0.302916\n-0.164538\n1.218751\n2.107990\n0.381744\n-0.424843\n-0.323495\n0.356763\n0.976482\n0.622836\n-0.739690\n-0.612199\n-0.895093\n0.093400\n-0.090386\n0.139569\n-0.966888\n-0.727430\n-1.153557\n-0.945674\n-0.698418\n0.708270\n0.314546\n0.157194\n0.149991\n1.325282\n1.825401\n0.602699\n-0.325473\n-0.059798\n-0.236990\n0.297713\n0.743918\n-0.943952\n-1.088841\n-0.932575\n0.906144\n0.701359\n1.553143\n-1.070274\n-0.357941\n-1.170364\n-1.054697\n-0.674670\n0.179464\n0.007014\n-0.023326\n0.243161\n1.640087\n1.131995\n-0.228535\n-0.038759\n0.317038\n-0.753399\n0.888694\n0.988067\n-0.806323\n-0.818472\n-0.953558\n0.886148\n0.677087\n0.715901\n-0.695982\n0.193626\n-1.151319\n-1.019825\n-0.642614\n-0.016035\n-0.493689\n0.357618\n-0.568868\n1.169129\n2.158598\n0.385091\n-0.366585\n0.149272\n0.035840\n0.311061\n0.678965\n-0.755270\n-0.885359\n-0.873519\n0.491406\n-0.120983\n0.781147\n-0.662009\n-0.124938\n-1.059510\n-1.038169\n-0.550205\n0.209194\n0.310325\n-0.297987\n0.256709\n1.455295\n1.829231\n0.255894\n-0.268770\n0.083823\n0.590880\n0.364527\n0.517759\n-0.591672\n-0.807841\n-0.794786\n1.258402\n0.601661\n2.574703\n-0.628313\n-0.008908\n-1.041480\n-0.960783\n-0.690295\n-0.127888\n0.610275\n-0.348584\n-0.423146\n0.385747\n0.535732\n-0.134539\n-0.336298\n-0.352171\n0.373305\n0.949861\n0.825229\n-0.804869\n-0.547974\n-0.773568\n0.533965\n-0.140524\n0.621019\n-0.819822\n-0.151661\n-1.073182\n-0.975920\n-0.773664\n0.731652\n0.564922\n-0.105418\n-0.128784\n0.877137\n1.439533\n-0.146537\n-0.233944\n-0.445056\n-0.472215\n-0.577957\n1.176335\n\n\n3\n-0.115886\n0.820746\n1.072479\n-1.107175\n-0.336168\n-0.784364\n0.094444\n-0.072963\n0.810767\n-1.064753\n-0.608579\n-1.339365\n-1.245652\n-0.831597\n1.721726\n0.712874\n0.235246\n0.276209\n1.626535\n2.092431\n-0.482970\n-0.750626\n-0.460130\n0.236611\n1.392298\n0.586144\n-0.986109\n-0.543984\n-0.869062\n0.406866\n-0.199675\n1.261367\n-0.931979\n-0.453303\n-1.378041\n-1.429664\n-0.885421\n0.790337\n0.861260\n-0.105331\n-0.107974\n1.406247\n1.556562\n0.291431\n-0.635116\n-0.547837\n0.246646\n0.842397\n1.374244\n-1.213337\n-0.836970\n-1.061880\n0.445910\n-0.240524\n0.818263\n-1.145204\n-0.652396\n-1.454522\n-1.350311\n-0.748239\n1.094022\n0.496164\n0.291302\n-0.021706\n1.384924\n2.188752\n0.427537\n-0.540029\n-0.402436\n0.263044\n1.126636\n0.818492\n-1.084867\n-0.777840\n-1.156849\n0.150072\n-0.151041\n0.160017\n-1.158610\n-0.724767\n-1.481028\n-1.148549\n-1.060825\n1.138146\n0.097964\n0.181290\n0.068909\n1.746760\n2.522271\n0.638805\n-0.363088\n-0.016735\n-0.108448\n1.061750\n0.936679\n-1.093320\n-1.129213\n-1.258457\n0.759771\n0.511325\n1.550209\n-1.309304\n-0.281704\n-1.516510\n-1.239510\n-0.933464\n0.154529\n-0.326074\n-0.101655\n0.455826\n2.016972\n1.575466\n-0.069357\n-0.185581\n0.533793\n-0.699799\n1.152556\n0.896781\n-1.046621\n-1.170381\n-1.218255\n1.496725\n0.998083\n1.133697\n-0.938286\n-0.015171\n-1.440916\n-1.188007\n-0.683514\n0.378795\n-0.640599\n0.183254\n-0.548098\n1.053966\n2.207037\n0.354827\n-0.519037\n0.394696\n0.244732\n0.381438\n1.113125\n-0.899122\n-1.096222\n-1.173454\n0.687293\n-0.046008\n0.940206\n-0.894093\n-0.104996\n-1.368054\n-1.066989\n-0.855887\n0.294873\n0.093265\n-0.139776\n0.133550\n1.779457\n1.869632\n0.243867\n-0.375760\n0.071816\n0.692799\n0.415830\n0.703685\n-0.878906\n-1.026634\n-1.112752\n1.394995\n0.792975\n2.919907\n-0.848465\n-0.122632\n-1.400679\n-1.258569\n-0.974020\n0.270461\n0.788220\n-0.574408\n-0.295961\n0.706526\n0.730792\n-0.166971\n-0.385794\n-0.312091\n0.376540\n0.884624\n0.977607\n-1.104369\n-0.602411\n-0.914841\n0.743480\n-0.106034\n1.201335\n-0.814697\n-0.223407\n-1.285807\n-1.231427\n-0.859937\n1.158588\n0.774048\n-0.271745\n-0.174051\n0.883699\n1.405990\n-0.198720\n-0.331293\n-0.493096\n-0.617485\n-0.773803\n1.381849\n\n\n4\n0.005970\n0.751114\n1.085722\n-1.039904\n-0.406701\n-0.679811\n0.072615\n-0.075559\n0.692090\n-1.072586\n-0.460515\n-1.288880\n-1.222914\n-0.716772\n1.364289\n0.482584\n0.263830\n0.171767\n1.651816\n2.032803\n-0.388215\n-0.720607\n-0.454893\n0.265395\n1.379802\n0.589531\n-0.818324\n-0.519316\n-0.746067\n0.413932\n-0.178369\n1.170074\n-0.894897\n-0.355494\n-1.330207\n-1.312370\n-0.802593\n0.591601\n0.688329\n-0.156697\n-0.163164\n1.411729\n1.699529\n0.206069\n-0.666106\n-0.523285\n0.173828\n0.883171\n1.294354\n-1.112042\n-0.686691\n-0.939822\n0.276185\n-0.307773\n0.697519\n-0.985738\n-0.642088\n-1.393248\n-1.392490\n-0.732761\n0.973595\n0.358805\n0.335087\n0.064024\n1.482641\n2.376040\n0.233742\n-0.572048\n-0.423111\n0.447690\n1.153062\n0.833891\n-1.003197\n-0.699037\n-0.993186\n0.153248\n-0.209088\n0.223381\n-1.165334\n-0.741596\n-1.444063\n-1.076746\n-0.977388\n0.960369\n-0.033733\n0.309105\n0.115317\n1.677490\n2.432875\n0.478845\n-0.499757\n-0.138839\n-0.151743\n0.650876\n0.836831\n-0.989553\n-1.087273\n-1.087959\n0.785815\n0.776908\n1.770988\n-1.228824\n-0.357408\n-1.430037\n-1.258179\n-0.797396\n0.152119\n-0.311512\n-0.174495\n0.422862\n1.711298\n1.606907\n-0.111176\n-0.190658\n0.401723\n-0.786975\n1.135739\n1.058611\n-0.969714\n-0.932000\n-1.149220\n1.275183\n0.763192\n1.097840\n-0.851838\n-0.135197\n-1.440695\n-1.176001\n-0.535466\n0.188978\n-0.533128\n0.373298\n-0.448216\n1.071386\n2.115694\n0.146461\n-0.588486\n0.263037\n0.268874\n0.469420\n1.094261\n-0.928724\n-1.012780\n-1.003566\n0.759516\n-0.058255\n0.952261\n-0.984737\n-0.179058\n-1.345385\n-1.038068\n-0.822988\n0.324975\n0.130887\n-0.013518\n0.059971\n1.701512\n2.136519\n0.050153\n-0.482915\n-0.053709\n0.684908\n0.572248\n0.710637\n-0.836325\n-0.807433\n-0.992573\n1.345920\n0.821516\n2.887753\n-0.706492\n-0.110270\n-1.351152\n-1.205737\n-0.737653\n0.244887\n0.633224\n-0.466895\n-0.268452\n0.583513\n0.529670\n-0.291038\n-0.485136\n-0.285899\n0.483719\n0.887183\n1.036619\n-1.038690\n-0.437466\n-0.841210\n0.719239\n-0.163292\n1.080628\n-0.780459\n-0.308839\n-1.277385\n-1.213813\n-0.850979\n1.037729\n0.641427\n-0.145962\n-0.076124\n0.989158\n1.263439\n-0.166760\n-0.514443\n-0.423403\n-0.676674\n-0.746608\n1.362359\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n385\n0.578521\n0.815616\n-0.008575\n0.070166\n0.041314\n-0.172278\n-0.091158\n-0.266501\n-0.299746\n-0.250539\n0.037579\n0.365901\n0.166937\n0.305540\n-0.234406\n0.311013\n-0.110569\n-0.114513\n-0.452355\n-0.358867\n-0.177268\n-0.018237\n0.172704\n0.274292\n0.847559\n0.161803\n0.157351\n-0.062481\n0.004793\n-0.146151\n-0.365771\n-0.515028\n-0.126082\n0.122814\n0.157954\n0.266116\n0.356241\n-0.009107\n0.023418\n-0.148322\n0.061621\n-0.206390\n-0.161031\n-0.145769\n-0.173076\n-0.111084\n0.722043\n1.151718\n0.075962\n0.111401\n-0.285507\n-0.096357\n-0.541320\n-0.756826\n-0.717633\n-0.359527\n-0.290220\n-0.110387\n-0.381590\n0.329526\n-0.013344\n0.645284\n0.069591\n-0.080180\n-0.271745\n-0.389325\n0.168342\n0.324664\n0.071264\n1.154482\n2.082457\n0.152455\n0.251916\n-0.405427\n-0.261448\n-0.662001\n-0.681511\n-0.454917\n-0.063818\n-0.606271\n-0.279721\n-0.684625\n0.440753\n-0.405008\n0.477990\n0.301193\n0.743176\n-0.173409\n-0.523468\n-0.174576\n-0.337592\n-0.310680\n-0.409673\n-0.728864\n-0.224772\n-0.421970\n-0.001823\n-0.022175\n0.726590\n0.268676\n0.504831\n0.188382\n0.003810\n0.641346\n-0.001090\n0.389831\n0.532993\n1.586001\n0.033036\n-0.142395\n-0.569806\n-0.779241\n-0.615640\n-0.564244\n0.172966\n-1.446164\n-1.158714\n-0.324238\n-0.100830\n0.009197\n-0.054438\n1.004409\n0.018712\n-0.682721\n0.401000\n-0.044198\n0.451011\n0.404542\n0.097068\n1.442745\n3.523521\n1.326161\n-0.442833\n-1.214377\n-0.791535\n-0.586027\n-0.601752\n-0.526851\n-1.061495\n-0.837982\n-0.073638\n1.031971\n-0.445046\n-0.147461\n1.855818\n1.188337\n0.445286\n1.252941\n-0.193166\n0.172993\n-0.162267\n0.209781\n0.546619\n0.245775\n0.375268\n-0.744369\n-1.455791\n-1.201336\n-0.631667\n-0.685654\n0.551269\n-0.736841\n1.236806\n0.449564\n-0.154367\n-0.164832\n-0.148053\n-0.329820\n-0.414346\n-0.298004\n-0.010251\n0.186727\n0.785969\n0.857228\n1.468341\n-0.210802\n1.092909\n-0.021411\n0.736797\n-1.086275\n-1.293551\n-0.710390\n-0.662196\n-0.044366\n-0.379483\n0.707046\n0.061626\n0.087535\n0.007229\n-0.019088\n-0.553130\n-0.311879\n-0.316806\n0.212299\n-0.013452\n0.280088\n0.704376\n0.256359\n0.145685\n0.728678\n-0.053264\n0.159969\n-0.264172\n-0.542244\n-0.728845\n-0.736948\n0.484063\n-0.014160\n0.981396\n-0.823922\n\n\n386\n-0.343952\n-0.155117\n0.006063\n0.285334\n-0.023862\n-0.073818\n-0.028110\n-0.030005\n-0.120587\n-0.063003\n0.280372\n0.288623\n0.244785\n0.197624\n1.120448\n1.342140\n-0.393144\n-0.255975\n-0.764882\n-0.688033\n-0.411714\n-0.402310\n-0.559895\n-0.188687\n-0.186149\n0.085229\n0.209445\n-0.110868\n-0.112135\n-0.038973\n-0.186215\n-0.290907\n-0.101395\n-0.244995\n0.194110\n0.174400\n0.261491\n1.335250\n1.739041\n-0.331995\n-0.067029\n-0.969707\n-0.835346\n-0.225157\n-0.148649\n-0.401451\n-0.357386\n-0.172101\n-0.267598\n0.055623\n-0.301132\n-0.293372\n-0.312323\n-0.360072\n-0.296617\n0.118884\n-0.607369\n-0.253655\n-0.284446\n0.472431\n2.497014\n4.099475\n-0.093472\n-0.581561\n-1.095450\n-1.027082\n-0.416788\n-0.326693\n-0.437598\n0.242633\n1.007429\n0.612549\n0.445686\n-0.113361\n-0.165806\n-0.077746\n-0.558640\n-0.442297\n-0.442617\n-0.120817\n-0.194407\n-0.131095\n0.800921\n0.920657\n3.575207\n-0.188720\n-0.316105\n-1.465925\n-1.350469\n-0.464359\n-0.489196\n-0.903108\n-0.498298\n0.109299\n-0.114649\n-0.001037\n0.134193\n0.014040\n0.015718\n-0.352781\n0.098042\n0.576062\n-0.191512\n0.245011\n-0.089833\n0.270160\n1.991614\n2.207065\n0.346616\n-0.165267\n-1.167193\n-1.213787\n-0.807511\n-0.884333\n-0.417336\n-1.620930\n-0.555660\n-0.464463\n0.605316\n0.025533\n-0.010126\n0.147222\n0.569386\n1.156091\n1.878517\n0.915935\n0.596800\n0.249085\n-0.144031\n0.167630\n1.245727\n0.605658\n-0.114234\n-1.367335\n-1.328265\n-0.889478\n-0.864110\n-1.000866\n-0.936579\n-0.003797\n0.017008\n-0.051265\n-0.051686\n-0.080829\n0.378418\n0.772260\n0.344638\n0.409918\n0.039382\n0.462811\n0.084301\n0.359274\n0.503638\n2.669749\n-0.557002\n-0.483690\n-0.531673\n-0.898888\n-0.787395\n-0.776047\n-0.809296\n-0.849585\n-0.280741\n-0.492412\n-0.034216\n-0.011144\n-0.093382\n-0.190026\n0.007295\n0.291797\n0.243285\n1.052784\n0.933768\n0.930262\n0.666788\n0.674066\n1.130771\n-0.423281\n-0.062838\n-0.576920\n-0.789637\n-0.839921\n-0.702896\n-0.638031\n-0.294989\n-0.192360\n-0.384952\n-0.066190\n-0.074334\n-0.004895\n0.262383\n0.598844\n0.536701\n0.483695\n0.370696\n0.272201\n0.482870\n0.014603\n0.760624\n0.726867\n-0.293256\n-0.392450\n-0.695027\n-0.750916\n-0.507727\n-0.535106\n-0.734783\n1.085545\n-0.034680\n-1.120232\n\n\n387\n-0.066611\n0.160646\n-0.006179\n-0.204166\n-0.168144\n-0.095100\n-0.243909\n0.001036\n0.018622\n-0.132618\n-0.108387\n-0.101219\n0.037201\n0.357807\n0.484108\n0.846920\n-0.316675\n-0.220923\n-0.182159\n-0.201830\n-0.020689\n-0.018036\n0.235278\n0.006709\n0.077673\n-0.004747\n-0.197423\n-0.078612\n-0.252352\n-0.264757\n-0.315038\n-0.140217\n-0.227206\n-0.193583\n-0.215091\n0.134330\n-0.096614\n0.246689\n0.545683\n-0.251511\n-0.228500\n-0.169469\n-0.057055\n0.460213\n0.310485\n0.341025\n-0.166372\n-0.354935\n-0.295832\n-0.178881\n-0.292668\n-0.360785\n-0.451096\n-0.513882\n-0.657880\n-0.478158\n-0.491899\n-0.434251\n-0.406700\n-0.212107\n0.124407\n3.893183\n-0.286749\n-0.499564\n-0.526325\n-0.124638\n1.252761\n1.312268\n0.342483\n0.004115\n-0.056000\n-0.110703\n0.007906\n-0.230503\n-0.064162\n-0.338650\n-0.398219\n0.155609\n-0.084716\n-0.036575\n-0.142463\n-0.120580\n-0.222994\n-0.008855\n0.615924\n0.163314\n-0.006318\n-0.705759\n-0.551729\n0.300174\n0.248571\n1.596671\n0.455188\n0.153293\n-0.110889\n-0.167419\n-0.122656\n-0.197031\n-0.184998\n-0.355753\n-0.013585\n0.091351\n0.036043\n0.073222\n-0.143890\n0.139732\n0.614046\n0.811038\n-0.067180\n0.125167\n-0.353471\n-0.382233\n-0.262606\n-0.128705\n-0.115752\n-0.930421\n-0.507747\n-0.406452\n-0.126812\n-0.148081\n-0.326349\n0.227474\n0.215811\n-0.184397\n0.205914\n1.248248\n-0.133319\n-0.132941\n-0.284734\n-0.096872\n0.267902\n0.014163\n-0.482787\n-0.561293\n-0.408395\n0.966641\n0.926225\n0.544455\n-0.586569\n-0.499789\n-0.065891\n-0.199973\n-0.439885\n-0.387354\n-0.157257\n-0.178767\n-0.327227\n-0.351513\n-0.125342\n-0.064263\n0.032916\n-0.383703\n-0.438517\n-0.171442\n-0.539449\n-0.618777\n-0.057934\n-0.143144\n-0.004363\n-0.055794\n4.528556\n-0.463506\n-0.244622\n-0.200806\n0.088204\n-0.189010\n-0.130377\n-0.079691\n-0.034115\n-0.205404\n-0.151083\n-0.100164\n0.088742\n0.401504\n-0.072054\n-0.382634\n-0.209524\n-0.169464\n-0.283133\n0.080513\n0.219396\n0.427655\n0.448607\n1.228775\n0.066399\n-0.074440\n-0.069934\n-0.223483\n-0.160704\n-0.181497\n-0.348366\n-0.218320\n-0.077495\n-0.241710\n-0.254692\n-0.243633\n-0.004971\n-0.168279\n-0.118715\n-0.021867\n-0.164025\n-0.209928\n0.084288\n0.064790\n0.679144\n0.696433\n1.445132\n0.759144\n0.359163\n-1.111332\n\n\n388\n0.122353\n0.206068\n0.121852\n0.135813\n-0.106405\n-0.109500\n-0.318797\n-0.224553\n-0.402368\n-0.253572\n-0.036752\n0.022141\n0.066784\n-0.063115\n0.251984\n0.423665\n-0.267971\n-0.062237\n-0.152510\n-0.180560\n0.266860\n0.226020\n0.638867\n0.088377\n0.154580\n0.005537\n-0.090565\n0.017880\n-0.177648\n-0.368970\n-0.474865\n-0.318903\n-0.211556\n-0.036925\n-0.068680\n0.345664\n-0.108639\n0.092657\n0.241915\n-0.125310\n-0.220962\n-0.083301\n0.101778\n0.665436\n0.661190\n0.391846\n0.032425\n-0.122417\n-0.246262\n-0.158146\n-0.240017\n-0.122328\n-0.403602\n-0.548235\n-0.350910\n-0.150657\n-0.175774\n-0.052711\n-0.224810\n-0.142411\n-0.019941\n0.819984\n-0.153961\n-0.405981\n-0.366120\n-0.108321\n1.687876\n1.622842\n0.652195\n-0.479712\n-0.341194\n-0.167773\n0.185297\n-0.248528\n-0.174750\n-0.413215\n-0.459817\n0.526658\n0.149524\n0.233992\n0.404246\n-0.384420\n-0.202454\n-0.232836\n0.875517\n-0.114594\n-0.221065\n-0.712393\n-0.532897\n0.319931\n0.323008\n2.141544\n-0.064749\n-0.010680\n0.034973\n0.001995\n-0.051811\n-0.032508\n-0.348255\n-0.522988\n0.082399\n0.101567\n-0.123955\n0.217515\n-0.207852\n-0.092817\n0.690799\n0.952746\n0.093686\n0.173415\n-0.280747\n-0.262276\n-0.089357\n-0.138289\n0.316182\n-0.668020\n-0.985175\n-0.451458\n-0.087931\n-0.302541\n-0.245176\n0.238130\n0.574219\n0.316361\n0.675789\n0.944873\n0.063380\n-0.064271\n-0.529131\n-0.110035\n0.152777\n-0.179061\n-0.656349\n-1.086887\n-0.572069\n0.924667\n0.833399\n0.543780\n-0.580854\n-0.631862\n-0.545981\n-0.427226\n-0.472761\n-0.538179\n-0.563131\n-0.538459\n-0.570086\n-0.314039\n-0.380604\n0.047765\n-0.288111\n-0.177088\n-0.163989\n0.743438\n-0.539873\n-0.361177\n-0.369740\n-0.456937\n0.372878\n0.371784\n5.449268\n-0.405970\n-0.293095\n-0.158044\n0.175940\n-0.249805\n-0.177893\n-0.147267\n-0.088540\n-0.072262\n-0.206695\n0.068685\n0.125533\n0.060028\n-0.050328\n-0.266684\n-0.032236\n-0.238533\n-0.261867\n-0.173550\n-0.290882\n0.612625\n0.566128\n1.814760\n0.186249\n-0.183579\n-0.175168\n-0.185604\n-0.089263\n-0.080009\n-0.237149\n-0.422907\n-0.339149\n-0.322928\n-0.295930\n-0.266436\n-0.128413\n-0.140600\n0.191414\n0.118732\n-0.214912\n-0.150141\n-0.197409\n-0.067330\n0.571728\n0.583210\n1.916396\n0.428484\n0.622558\n-1.158134\n\n\n389\n0.188459\n0.439853\n0.060391\n-0.086527\n-0.111686\n-0.140101\n-0.463691\n-0.544235\n-0.622486\n-0.254746\n-0.199929\n-0.062966\n0.097649\n0.434262\n0.265382\n0.478620\n-0.427277\n-0.060230\n-0.091186\n-0.309038\n0.539724\n0.559802\n0.440024\n0.128444\n0.499696\n0.072232\n0.075077\n-0.052714\n-0.098313\n-0.613954\n-0.814414\n-0.586662\n-0.110255\n0.008663\n0.077707\n0.526670\n0.362162\n0.250743\n0.447850\n-0.353245\n0.000355\n0.057385\n-0.129434\n0.129044\n0.264084\n-0.151309\n0.187910\n0.701375\n-0.176368\n0.160061\n-0.201854\n-0.140544\n-0.994704\n-1.104489\n-0.316708\n-0.046821\n-0.307645\n0.054225\n0.131244\n0.156841\n0.514177\n1.656849\n-0.312444\n0.051022\n-0.255884\n-0.577326\n0.415048\n0.403577\n0.101188\n-0.175350\n0.444570\n0.352650\n0.795194\n-0.160316\n-0.056730\n-0.546945\n-0.769426\n-0.528751\n-0.205588\n0.239008\n0.641354\n0.262148\n0.426456\n-0.454494\n0.724283\n-0.200243\n0.330112\n0.008259\n-0.999883\n0.017019\n0.072978\n0.122243\n-0.523335\n1.182480\n-0.105016\n-0.272883\n-0.000234\n-0.081880\n-1.263563\n-1.332233\n-0.173574\n0.552361\n-0.588848\n0.421488\n-0.713752\n0.874099\n1.210574\n2.066226\n0.211755\n0.655666\n-0.286226\n-0.599556\n-0.776689\n-0.756884\n0.246952\n-1.647672\n-0.860567\n-0.548863\n0.526335\n-0.349274\n-0.382024\n1.129147\n1.860528\n1.245924\n2.198426\n0.931788\n0.749532\n1.861245\n-0.052901\n-0.131282\n0.375158\n0.008166\n-0.912338\n-1.778002\n-1.599741\n-0.825851\n-0.703281\n-1.259517\n-0.908033\n-0.635809\n-0.452992\n0.022787\n-0.297470\n-0.285614\n-0.502733\n-0.523386\n-0.616326\n0.057821\n0.086172\n1.968491\n0.404133\n1.909161\n2.396706\n3.200826\n-0.365028\n0.028798\n-1.295352\n-1.507143\n-0.796399\n-0.895243\n-1.172440\n-0.527432\n-0.025165\n-0.362537\n0.052917\n0.104496\n0.161911\n-0.352495\n0.092749\n0.535177\n0.261345\n0.743398\n0.675169\n1.295758\n0.199683\n0.695838\n1.587987\n-0.377386\n-0.247616\n-1.245401\n-1.319967\n-0.703791\n-0.856706\n-0.503849\n0.439088\n0.397687\n-0.232954\n-0.087055\n0.049947\n-0.109176\n-0.509142\n-0.155921\n-0.209409\n-0.040702\n-0.241797\n0.307563\n0.482718\n0.484882\n1.912625\n1.505288\n0.072022\n0.128418\n-0.799038\n-0.709763\n-0.688117\n-0.758006\n-0.777439\n-0.206744\n1.409324\n-1.200882\n\n\n\n\n390 rows × 210 columns\n\n\n\n\nOOF Pearson score by family\n\n_,_,corr = score_each(oof_ensemble,y)\n\noverall MSE: 0.3086\nAverage Pearson: 0.8170 \n\n\n\ncorr = pd.concat([corr, info],axis=1)\n\n\ncorr_family = corr.groupby('family').agg({'Pearson':'mean','kinase':'count'})\n\n\ncorr_family.sort_values('Pearson',ascending=False)\n\n\n\n\n\n\n\n\nPearson\nkinase\n\n\nfamily\n\n\n\n\n\n\nSev\n0.981550\n1\n\n\nMet\n0.979476\n2\n\n\nInsR\n0.978676\n3\n\n\nEph\n0.976189\n12\n\n\nAkt\n0.974935\n3\n\n\n...\n...\n...\n\n\nKIS\n0.102436\n1\n\n\nBud32\n0.096503\n1\n\n\nFAM20C\n0.086976\n1\n\n\nCDC7\n-0.028638\n1\n\n\nWEE\n-0.090115\n1\n\n\n\n\n100 rows × 2 columns\n\n\n\n\ncorr_family.to_csv('raw/oof_corr_family.csv')\n\n\ncorr_subfamily = corr.groupby('subfamily').agg({'Pearson':'mean','kinase':'count'})\n\n\ncorr_subfamily.sort_values('kinase',ascending=False)\n\n\n\n\n\n\n\n\nPearson\nkinase\n\n\nsubfamily\n\n\n\n\n\n\nEph\n0.976189\n12\n\n\nSrc\n0.967152\n11\n\n\nNEK\n0.778235\n10\n\n\nSTE11\n0.749903\n7\n\n\nCK1\n0.948548\n7\n\n\n...\n...\n...\n\n\nSNRK\n0.700188\n1\n\n\nNKF2\n0.301151\n1\n\n\nCDK9\n0.943745\n1\n\n\nNKF1\n0.734262\n1\n\n\nMOS\n0.173084\n1\n\n\n\n\n160 rows × 2 columns\n\n\n\n\ncorr_subfamily.to_csv('raw/oof_corr_subfamily.csv')",
    "crumbs": [
      "Analyze DL/ML results"
    ]
  },
  {
    "objectID": "ml_analysis.html#plot",
    "href": "ml_analysis.html#plot",
    "title": "Analyze DL/ML results",
    "section": "Plot",
    "text": "Plot\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\ncorr\n\n\n\n\n\n\n\n\nPearson\nkinase\nsource\nID_coral\nuniprot\nID_HGNC\ngroup\nfamily\nsubfamily_coral\nsubfamily\nin_ST_paper\nin_Tyr_paper\nin_cddm\npseudo\npspa_category_small\npspa_category_big\ncddm_big\ncddm_small\nlength\nhuman_uniprot_sequence\nkinasecom_domain\nnucleus\ncytosol\ncytoskeleton\nplasma membrane\nmitochondrion\nGolgi apparatus\nendoplasmic reticulum\nvesicle\ncentrosome\naggresome\nmain_location\n\n\n\n\n0\n0.980211\nSRC\nKS\nSRC\nP12931\nSRC\nTK\nSrc\nNone\nSrc\n0\n1\n1\n0\nSRC\nSRC\n1.0\n2.0\n536\nMGSNKSKPKDASQRRRSLEPAENVHGAGGGAFPASQTPSKPASADGHRGPSAAFAPAAAEPKLFGGFNSSDTVTSPQRAGPLAGGVTTFVALYDYESRTETDLSFKKGERLQIVNNTEGDWWLAHSLSTGQTGYIPSNYVAPSDSIQAEEWYFGKITRRESERLLLNAENPRGTFLVRESETTKGAYCLSVSDFDNAKGLNVKHYKIRKLDSGGFYITSRTQFNSLQQLVAYYSKHADGLCHRLTTVCPTSKPQTQGLAKDAWEIPRESLRLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEYMSKGSLLDFLKGETGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMCQCWRKEPEERPTFEYLQAFLEDYFTSTEPQYQPGENL\nLRLEVKLGQGCFGEVWMGTWNGTTRVAIKTLKPGTMSPEAFLQEAQVMKKLRHEKLVQLYAVVSEEPIYIVTEYMSKGSLLDFLKGETGKYLRLPQLVDMAAQIASGMAYVERMNYVHRDLRAANILVGENLVCKVADFGLARLIEDNEYTARQGAKFPIKWTAPEAALYGRFTIKSDVWSFGILLTELTTKGRVPYPGMVNREVLDQVERGYRMPCPPECPESLHDLMCQCWRKEPEERPTFEYLQAF\nNaN\n2.0\nNaN\n6.0\nNaN\n2.0\nNaN\nNaN\nNaN\nNaN\nplasma membrane\n\n\n1\n0.986307\nEPHA3\nKS\nEphA3\nP29320\nEPHA3\nTK\nEph\nNone\nEph\n0\n1\n1\n0\nEphrin receptors\nEphrin receptors\n1.0\n2.0\n983\nMDCQLSILLLLSCSVLDSFGELIPQPSNEVNLLDSKTIQGELGWISYPSHGWEEISGVDEHYTPIRTYQVCNVMDHSQNNWLRTNWVPRNSAQKIYVELKFTLRDCNSIPLVLGTCKETFNLYYMESDDDHGVKFREHQFTKIDTIAADESFTQMDLGDRILKLNTEIREVGPVNKKGFYLAFQDVGACVALVSVRVYFKKCPFTVKNLAMFPDTVPMDSQSLVEVRGSCVNNSKEEDPPRMYCSTEGEWLVPIGKCSCNAGYEERGFMCQACRPGFYKALDGNMKCAKCPPHSSTQEDGSMNCRCENNYFRADKDPPSMACTRPPSSPRNVISNINETSVILDWSWPLDTGGRKDVTFNIICKKCGWNIKQCEPCSPNVRFLPRQFGLTNTTVTVTDLLAHTNYTFEIDAVNGVSELSSPPRQFAAVSITTNQAAPSPVLTIKKDRTSRNSISLSWQEPEHPNGIILDYEVKYYEKQEQETSYTILRARGTNVTISSLKPDTIYVFQIRARTAAGYGTNSRKFEFETSPDSFSISGESSQVVMIAISAAVAIILLTVVIYVLIGRFCGYKSKHGADEKRLHFGNGHLKLPGLRTY...\nISIDKVVGAGEFGEVCSGRLKLPSKKEISVAIKTLKVGYTEKQRRDFLGEASIMGQFDHPNIIRLEGVVTKSKPVMIVTEYMENGSLDSFLRKHDAQFTVIQLVGMLRGIASGMKYLSDMGYVHRDLAARNILINSNLVCKVSDFGLSRVLEDDPEAAYTTRGGKIPIRWTSPEAIAYRKFTSASDVWSYGIVLWEVMSYGERPYWEMSNQDVIKAVDEGYRLPPPMDCPAALYQLMLDCWQKDRNNRPKFEQIVSI\nNaN\n1.0\nNaN\n6.0\nNaN\n3.0\nNaN\nNaN\nNaN\nNaN\nplasma membrane\n\n\n2\n0.954302\nFES\nKS\nFES\nP07332\nFES\nTK\nFer\nNone\nFer\n0\n1\n1\n0\nTAM receptors\nTAM receptors\n1.0\n2.0\n822\nMGFSSELCSPQGHGVLQQMQEAELRLLEGMRKWMAQRVKSDREYAGLLHHMSLQDSGGQSRAISPDSPISQSWAEITSQTEGLSRLLRQHAEDLNSGPLSKLSLLIRERQQLRKTYSEQWQQLQQELTKTHSQDIEKLKSQYRALARDSAQAKRKYQEASKDKDRDKAKDKYVRSLWKLFAHHNRYVLGVRAAQLHHQHHHQLLLPGLLRSLQDLHEEMACILKEILQEYLEISSLVQDEVVAIHREMAAAAARIQPEAEYQGFLRQYGSAPDVPPCVTFDESLLEEGEPLEPGELQLNELTVESVQHTLTSVTDELAVATEMVFRRQEMVTQLQQELRNEEENTHPRERVQLLGKRQVLQEALQGLQVALCSQAKLQAQQELLQTKLEHLGPGEPPPVLLLQDDRHSTSSSEQEREGGRTPTLEILKSHISGIFRPKFSLPPPLQLIPEVQKPLHEQLWYHGAIPRAEVAELLVHSGDFLVRESQGKQEYVLSVLWDGLPRHFIIQSLDNLYRLEGEGFPSIPLLIDHLLSTQQPLTKKSGVVLHRAVPKDKWVLNHEDLVLGEQIGRGNFGEVFSGRLRADNTLVAVKSCRETL...\nLVLGEQIGRGNFGEVFSGRLRADNTLVAVKSCRETLPPDLKAKFLQEARILKQYSHPNIVRLIGVCTQKQPIYIVMELVQGGDFLTFLRTEGARLRVKTLLQMVGDAAAGMEYLESKCCIHRDLAARNCLVTEKNVLKISDFGMSREEADGVYAASGGLRQVPVKWTAPEALNYGRYSSESDVWSFGILLWETFSLGASPYPNLSNQQTREFVEKGGRLPCPELCPDAVFRLMEQCWAYEPGQRPSFSTIYQELQS\nNaN\n6.0\nNaN\n4.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n3\n0.973414\nNTRK3\nKS\nTRKC\nQ16288\nNTRK3\nTK\nTrk\nNone\nTrk\n0\n1\n1\n0\nInsulin and neurotrophin receptors\nInsulin and neurotrophin receptors\n1.0\n3.0\n839\nMDVSLCPAKCSFWRIFLLGSVWLDYVGSVLACPANCVCSKTEINCRRPDDGNLFPLLEGQDSGNSNGNASINITDISRNITSIHIENWRSLHTLNAVDMELYTGLQKLTIKNSGLRSIQPRAFAKNPHLRYINLSSNRLTTLSWQLFQTLSLRELQLEQNFFNCSCDIRWMQLWQEQGEAKLNSQNLYCINADGSQLPLFRMNISQCDLPEISVSHVNLTVREGDNAVITCNGSGSPLPDVDWIVTGLQSINTHQTNLNWTNVHAINLTLVNVTSEDNGFTLTCIAENVVGMSNASVALTVYYPPRVVSLEEPELRLEHCIEFVVRGNPPPTLHWLHNGQPLRESKIIHVEYYQEGEISEGCLLFNKPTHYNNGNYTLIAKNPLGTANQTINGHFLKEPFPESTDNFILFDEVSPTPPITVTHKPEEDTFGVSIAVGLAAFACVLLVVLFVMINKYGRRSKFGMKGPVAVISGEEDSASPLHHINHGITTPSSLDAGPDTVVIGMTRIPVIENPQYFRQGHNCHKPDTYVQHIKRRDIVLKRELGEGAFGKVFLAECYNLSPTKDKMLVAVKALKDPTLAARKDFQREAELLTNLQ...\nIVLKRELGEGAFGKVFLAECYNLSPTKDKMLVAVKALKDPTLAARKDFQREAELLTNLQHEHIVKFYGVCGDGDPLIMVFEYMKHGDLNKFLRAHGPDAMILVDGQPRQAKGELGLSQMLHIASQIASGMVYLASQHFVHRDLATRNCLVGANLLVKIGDFGMSRDVYSTDYYRVGGHTMLPIRWMPPESIMYRKFTTESDVWSFGVILWEIFTYGKQPWFQLSNTEVIECITQGRVLERPRVCPKEVYDVMLGCWQREPQQRLNIKEIYKI\nNaN\n4.0\nNaN\n4.0\nNaN\n2.0\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n4\n0.981001\nALK\nKS\nALK\nQ9UM73\nALK\nTK\nALK\nNone\nALK\n0\n1\n1\n0\nPDGF receptors\nPDGF receptors\n1.0\n3.0\n1620\nMGAIGLLWLLPLLLSTAAVGSGMGTGQRAGSPAAGPPLQPREPLSYSRLQRKSLAVDFVVPSLFRVYARDLLLPPSSSELKAGRPEARGSLALDCAPLLRLLGPAPGVSWTAGSPAPAEARTLSRVLKGGSVRKLRRAKQLVLELGEEAILEGCVGPPGEAAVGLLQFNLSELFSWWIRQGEGRLRIRLMPEKKASEVGREGRLSAAIRASQPRLLFQIFGTGHSSLESPTNMPSPSPDYFTWNLTWIMKDSFPFLSHRSRYGLECSFDFPCELEYSPPLHDLRNQSWSWRRIPSEEASQMDLLDGPGAERSKEMPRGSFLLLNTSADSKHTILSPWMRSSSEHCTLAVSVHRHLQPSGRYIAQLLPHNEAAREILLMPTPGKHGWTVLQGRIGRPDNPFRVALEYISSGNRSLSAVDFFALKNCSEGTSPGSKMALQSSFTCWNGTVLQLGQACDFHQDCAQGEDESQMCRKLPVGFYCNFEDGFCGWTQGTLSPHTPQWQVRTLKDARFQDHQDHALLLSTTDVPASESATVTSATFPAPIKSSPCELRMSWLIRGVLRGNVSLVLVENKTGKEQGRMVWHVAAYEGLSLWQWM...\nITLIRGLGHGAFGEVYEGQVSGMPNDPSPLQVAVKTLPEVCSEQDELDFLMEALIISKFNHQNIVRCIGVSLQSLPRFILLELMAGGDLKSFLRETRPRPSQPSSLAMLDLLHVARDIACGCQYLEENHFIHRDIAARNCLLTCPGPGRVAKIGDFGMARDIYRASYYRKGGCAMLPVKWMPPEAFMEGIFTSKTDTWSFGVLLWEIFSLGYMPYPSKSNQEVLEFVTSGGRMDPPKNCPGPVYRIMTQCWQHQPEDRPNFAIILERIEY\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n385\n0.698910\nVRK2\nPSPA\nVRK2\nQ86Y07\nVRK2\nCK1\nVRK\nNone\nVRK\n1\n0\n0\n0\nassorted\nassorted\nNaN\nNaN\n508\nMPPKRNEKYKLPIPFPEGKVLDDMEGNQWVLGKKIGSGGFGLIYLAFPTNKPEKDARHVVKVEYQENGPLFSELKFYQRVAKKDCIKKWIERKQLDYLGIPLFYGSGLTEFKGRSYRFMVMERLGIDLQKISGQNGTFKKSTVLQLGIRMLDVLEYIHENEYVHGDIKAANLLLGYKNPDQVYLADYGLSYRYCPNGNHKQYQENPRKGHNGTIEFTSLDAHKGVALSRRSDVEILGYCMLRWLCGKLPWEQNLKDPVAVQTAKTNLLDELPQSVLKWAPSGSSCCEIAQFLVCAHSLAYDEKPNYQALKKILNPHGIPLGPLDFSTKGQSINVHTPNSQKVDSQKAATKQVNKAHNRLIEKKVHSERSAESCATWKVQKEEKLIGLMNNEAAQESTRRRQKYQESQEPLNEVNSFPQKISYTQFPNSFYEPHQDFTSPDIFKKSRSPSWYKYTSTVSTGITDLESSTGLWPTISQFTLSEETNADVYYYRIIIPVLLMLVFLALFFL\nWVLGKKIGSGGFGLIYLAFPTNKPEKDARHVVKVEYQENGPLFSELKFYQRVAKKDCIKKWIERKQLDYLGIPLFYGSGLTEFKGRSYRFMVMERLGIDLQKISGQNGTFKKSTVLQLGIRMLDVLEYIHENEYVHGDIKAANLLLGYKNPDQVYLADYGLSYRYCPNGNHKQYQENPRKGHNGTIEFTSLDAHKGVALSRRSDVEILGYCMLRWLCGKLPWEQNLKDPVAVQTAKTNLLDELPQSVLKWAPSGSSCCEIAQFL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n10.0\nNaN\nNaN\nNaN\nendoplasmic reticulum\n\n\n386\n0.885726\nWNK4\nPSPA\nWnk4\nQ96J92\nWNK4\nOther\nWNK\nNone\nWNK\n1\n0\n0\n0\nRIPK/WNK\nRIPK/WNK\nNaN\nNaN\n444\nMLASPATETTVLMSQTEADLALRPPPPLGTAGQPRLGPPPRRARRFSGKAEPRPRSSRLSRRSSVDLGLLSSWSLPASPAPDPPDPPDSAGPGPARSPPPSSKEPPEGTWTEGAPVKAAEDSARPELPDSAVGPGSREPLRVPEAVALERRREQEEKEDMETQAVATSPDGRYLKFDIEIGRGSFKTVYRGLDTDTTVEVAWCELQTRKLSRAERQRFSEEVEMLKGLQHPNIVRFYDSWKSVLRGQVCIVLVTELMTSGTLKTYLRRFREMKPRVLQRWSRQILRGLHFLHSRVPPILHRDLKCDNVFITGPTGSVKIGDLGLATLKRASFAKSVIGTPEFMAPEMYEEKYDEAVDVYAFGMCMLEMATSEYPYSECQNAAQIYRKVTSGRKPNSFHKVKIPEVKEIIEGCIRTDKNERFTIQDLLAHAFFREERGVHVELAEEDDGEKPGLKLWLRMEDARRGGRPRDNQAIEFLFQLGRDAAEEVAQEMVALGLVCEADYQPVARAVRERVAAIQRKREKLRKARELEALPPEPGPPPATVPMAPGPPSVFPPEPEEPEADQHQPFLFRHASYSSTTSDCETDGYLSSSGFLD...\nLKFDIEIGRGSFKTVYRGLDTDTTVEVAWCELQTRKLSRAERQRFSEEVEMLKGLQHPNIVRFYDSWKSVLRGQVCIVLVTELMTSGTLKTYLRRFREMKPRVLQRWSRQILRGLHFLHSRVPPILHRDLKCDNVFITGPTGSVKIGDLGLATLKRASFAKSVIGTPEFMAPEMYEEKYDEAVDVYAFGMCMLEMATSEYPYSECQNAAQIYRKVTSGRKPNSFHKVKIPEVKEIIEGCIRTDKNERFTIQDLLAHAFF\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n10.0\naggresome\n\n\n387\n0.767191\nYANK2\nPSPA\nYANK2\nQ9NY57\nSTK32B\nAGC\nYANK\nNone\nYANK\n1\n0\n0\n0\nYANK\nacidophilic\nNaN\nNaN\n414\nMGGNHSHKPPVFDENEEVNFDHFQILRAIGKGSFGKVCIVQKRDTKKMYAMKYMNKQKCIERDEVRNVFRELQIMQGLEHPFLVNLWYSFQDEEDMFMVVDLLLGGDLRYHLQQNVHFTEGTVKLYICELALALEYLQRYHIIHRDIKPDNILLDEHGHVHITDFNIATVVKGAERASSMAGTKPYMAPEVFQVYMDRGPGYSYPVDWWSLGITAYELLRGWRPYEIHSVTPIDEILNMFKVERVHYSSTWCKGMVALLRKLLTKDPESRVSSLHDIQSVPYLADMNWDAVFKKALMPGFVPNKGRLNCDPTFELEEMILESKPLHKKKKRLAKNRSRDGTKDSCPLNGHLQHCLETVREEFIIFNREKLRRQQGQGSQLLDTDSRGGGQAQSKLQDGCNNNLLTHTCTRGCSS\nFQILRAIGKGSFGKVCIVQKRDTKKMYAMKYMNKQKCIERDEVRNVFRELQIMQGLEHPFLVNLWYSFQDEEDMFMVVDLLLGGDLRYHLQQNVHFTEGTVKLYICELALALEYLQRYHIIHRDIKPDNILLDEHGHVHITDFNIATVVKGAERASSMAGTKPYMAPEVFQVYMDRGPGYSYPVDWWSLGITAYELLRGWRPYEIHSVTPIDEILNMFKVERVHYSSTWCKGMVALLRKLLTKDPESRVSSLHDIQSVPYL\n1.0\n6.0\nNaN\n3.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n388\n0.866177\nYANK3\nPSPA\nYANK3\nQ86UX6\nSTK32C\nAGC\nYANK\nNone\nYANK\n1\n0\n0\n0\nYANK\nacidophilic\nNaN\nNaN\n421\nMRSGAERRGSSAAASPGSPPPGRARPAGSDAPSALPPPAAGQPRARDSGDVRSQPRPLFQWSKWKKRMGSSMSAATARRPVFDDKEDVNFDHFQILRAIGKGSFGKVCIVQKRDTEKMYAMKYMNKQQCIERDEVRNVFRELEILQEIEHVFLVNLWYSFQDEEDMFMVVDLLLGGDLRYHLQQNVQFSEDTVRLYICEMALALDYLRGQHIIHRDVKPDNILLDERGHAHLTDFNIATIIKDGERATALAGTKPYMAPEIFHSFVNGGTGYSFEVDWWSVGVMAYELLRGWRPYDIHSSNAVESLVQLFSTVSVQYVPTWSKEMVALLRKLLTVNPEHRLSSLQDVQAAPALAGVLWDHLSEKRVEPGFVPNKGRLHCDPTFELEEMILESRPLHKKKKRLAKNKSRDNSRDSSQSENDYLQDCLDAIQQDFVIFNREKLKRSQDLPREPLPAPESRDAAEPVEDEAERSALPMCGPICPSAGSG\nFQILRAIGKGSFGKVCIVQKRDTEKMYAMKYMNKQQCIERDEVRNVFRELEILQEIEHVFLVNLWYSFQDEEDMFMVVDLLLGGDLRYHLQQNVQFSEDTVRLYICEMALALDYLRGQHIIHRDVKPDNILLDERGHAHLTDFNIATIIKDGERATALAGTKPYMAPEIFHSFVNGGTGYSFEVDWWSVGVMAYELLRGWRPYDIHSSNAVESLVQLFSTVSVQYVPTWSKEMVALLRKLLTVNPEHRLSSLQDVQAAPAL\n2.0\n5.0\nNaN\n3.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n389\n0.638188\nYSK4\nPSPA\nMAP3K19\nQ56UN5\nMAP3K19\nSTE\nSTE11\nNone\nSTE11\n1\n0\n0\n0\nMAP3K\nMAP3K\nNaN\nNaN\n388\nMSSMPKPERHAESLLDICHDTNSSPTDLMTVTKNQNIILQSISRSEEFDQDGDCSHSTLVNEEEDPSGGRQDWQPRTEGVEITVTFPRDVSPPQEMSQEDLKEKNLINSSLQEWAQAHAVSHPNEIETVELRKKKLTMRPLVLQKEESSRELCNVNLGFLLPRSCLELNISKSVTREDAPHFLKEQQRKSEEFSTSHMKYSGRSIKFLLPPLSLLPTRSGVLTIPQNHKFPKEKERNIPSLTSFVPKLSVSVRQSDELSPSNEPPGALVKSLMDPTLRSSDGFIWSRNMCSFPKTNHHRQCLEKEENWKSKEIEECNKIEITHFEKGQSLVSFENLKEGNIPAVREEDIDCHGSKTRKPEEENSQYLSSRKNESSVAKNYEQDPEIVCTIPSKFQETQHSEITPSQDEEMRNNKAASKRVSLHKNEAMEPNNILEECTVLKSLSSVVFDDPIDKLPEGCSSMETNIKISIAERAKPEMSRMVPLIHITFPVDGSPKEPVIAKPSLQTRKGTIHNNHSVNIPVHQENDKHKMNSHRSKLDSKTKTSKKTPQNFVISTEGPIKPTMHKTSIKTQIFPALGLVDPRPWQLPRFQKKMPQ...\nWTKGEILGKGAYGTVYCGLTSQGQLIAVKQVALDTSNKLAAEKEYRKLQEEVDLLKALKHVNIVAYLGTCLQENTVSIFMEFVPGGSISSIINRFGPLPEMVFCKYTKQILQGVAYLHENCVVHRDIKGNNVMLMPTGIIKLIDFGCARRLAWAGLNGTHSDMLKSMHGTPYWMAPEVINESGYGRKSDIWSIGCTVFEMATGKPPLASMDRMAAMFYIGAHRGLMPPLPDHFSENAADFVRMCLTRDQHERPSALQLLKHSFL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\n\n\n\n\n390 rows × 32 columns\n\n\n\n\ngroup = corr.group.unique()\ngroup\n\narray(['TK', 'TKL', 'Other', 'AGC', 'STE', 'CAMK', 'Atypical', 'CMGC', 'CK1'], dtype=object)\n\n\n\nIndividual kinase group\n\ncorrs = [corr.query(f'group == \"{i}\"') for i in group]\n\n\nfor i in range(len(corrs)):\n    plot_box(corrs[i],'Pearson','family',group[i])\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIn general\n\ngroup_color = load_pickle(\"raw/kinase_color.pkl\")\n\n\nplot_bar(corr,'Pearson','group',palette=group_color,fontsize=20)\n# plt.title('a')",
    "crumbs": [
      "Analyze DL/ML results"
    ]
  },
  {
    "objectID": "ml_analysis.html#families-with-more-counts",
    "href": "ml_analysis.html#families-with-more-counts",
    "title": "Analyze DL/ML results",
    "section": "Families with more counts",
    "text": "Families with more counts\n\nfamily_score = corr.groupby('family').agg(family_mean=('Pearson','mean'),cnt=('Pearson','size'))\n\n\nfamily_score.sort_values('cnt',ascending=False)[:15]\n\n\n\n\n\n\n\n\nfamily_mean\ncnt\n\n\nfamily\n\n\n\n\n\n\nSTE20\n0.863932\n27\n\n\nCAMKL\n0.789590\n20\n\n\nCDK\n0.923265\n17\n\n\nMAPK\n0.881876\n12\n\n\nEph\n0.976189\n12\n\n\nSrc\n0.967152\n11\n\n\nDYRK\n0.865820\n10\n\n\nNEK\n0.778235\n10\n\n\nPKC\n0.949881\n9\n\n\nSTKR\n0.857840\n9\n\n\nRSK\n0.937107\n8\n\n\nSTE11\n0.749903\n7\n\n\nCK1\n0.948548\n7\n\n\nGRK\n0.813348\n7\n\n\nMLK\n0.733784\n7",
    "crumbs": [
      "Analyze DL/ML results"
    ]
  },
  {
    "objectID": "ml_predict.html",
    "href": "ml_predict.html",
    "title": "Predict PSSMs",
    "section": "",
    "text": "from katlas.imports import *\nfrom fastbook import *\nfrom functools import reduce\nimport seaborn as sns\nfrom tqdm import tqdm\nfrom sklearn.preprocessing import MinMaxScaler",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#setup",
    "href": "ml_predict.html#setup",
    "title": "Predict PSSMs",
    "section": "",
    "text": "from katlas.imports import *\nfrom fastbook import *\nfrom functools import reduce\nimport seaborn as sns\nfrom tqdm import tqdm\nfrom sklearn.preprocessing import MinMaxScaler",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#load-data",
    "href": "ml_predict.html#load-data",
    "title": "Predict PSSMs",
    "section": "Load data",
    "text": "Load data\n\ndf = Data.get_kinase_info().query('pseudo==\"0\"') # exclude pseudo kinase\n\n\n# Remove too long proteins as they can't fit into the model\ndf = df[df.human_uniprot_sequence.str.len()&lt;7000]\ndf = df[df.kinasecom_domain.str.len()&lt;7000]\n\n\nGet protein embeddings\nUncheck below to get protein embeddings for the kinases\n\n# Remove too long proteins as they can't fit into the model\n# valid_uniprot = df[df.human_uniprot_sequence.str.len()&lt;7000]\n# valid_kd = df[df.kinasecom_domain.str.len()&lt;7000]\n\n\n# feat_esm = get_esm(valid_uniprot,'human_uniprot_sequence')\n# feat_esm_kd = get_esm(valid_kd,'kinasecom_domain')\n\n# feat_t5 = get_t5(valid_uniprot,'human_uniprot_sequence')\n# feat_t5_kd = get_t5(valid_kd,'kinasecom_domain')\n\n\n# feat_esm.index=valid_uniprot.kinase\n\n# feat_t5.index = valid_uniprot.kinase\n\n# feat_esm_kd.index = valid_kd.kinase\n# feat_t5_kd.index= valid_kd.kinase\n\n\n# feat_esm.astype(float).to_parquet('raw/esm_unknown.parquet')\n# feat_esm_kd.astype(float).to_parquet('raw/esm_unknown_kd.parquet')\n\n# feat_t5.astype(float).to_parquet('raw/t5_unknown.parquet')\n# feat_t5_kd.astype(float).to_parquet('raw/t5_unknown_kd.parquet')\n\nOr directly load\n\nfeat_esm = pd.read_parquet('raw/esm_unknown.parquet')\nfeat_esm_kd = pd.read_parquet('raw/esm_unknown_kd.parquet')\n\nfeat_t5 = pd.read_parquet('raw/t5_unknown.parquet')\nfeat_t5_kd = pd.read_parquet('raw/t5_unknown_kd.parquet')\n\n\nfeat_esm.shape,feat_esm_kd.shape,feat_t5.shape,feat_t5_kd.shape\n\n((508, 1280), (503, 1280), (508, 1024), (503, 1024))\n\n\n\n# filter out pseudokinase\nfeat_esm = feat_esm[feat_esm.index.isin(df.kinase)]\nfeat_esm_kd = feat_esm_kd[feat_esm_kd.index.isin(df.kinase)]\n\nfeat_t5 = feat_t5[feat_t5.index.isin(df.kinase)]\nfeat_t5_kd = feat_t5_kd[feat_t5_kd.index.isin(df.kinase)]",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#prepare-models",
    "href": "ml_predict.html#prepare-models",
    "title": "Predict PSSMs",
    "section": "Prepare models",
    "text": "Prepare models\n5 Fold x 3 models = 15 models\n\ntop = ['cnn_esm_kd',\n'cnn_t5_kd',\n'cnn_t5',\n# 'mlp_t5',\n      ]\n\n\n# will not use these data, just to get t5_col and esm_col\nt5 = pd.read_parquet('train_data/combine_t5.parquet').reset_index()\nesm = pd.read_parquet('train_data/combine_esm.parquet').reset_index()\n\n# feature column\nt5_col = t5.columns[t5.columns.str.startswith('T5_')]\nesm_col = esm.columns[esm.columns.str.startswith('esm_')]\n\n# target column\ntarget_col = t5.columns[~t5.columns.isin(t5_col)][1:]\n\n\nnum_esm = len(esm_col)\nnum_t5 = len(t5_col)\nnum_target = len(target_col)\n\n\ndef cnn_esm():\n    return CNN1D_2(num_esm, num_target)\n\ndef cnn_t5():\n    return CNN1D_2(num_t5, num_target)\n\ndef mlp_t5():\n    return MLP_1(num_t5, num_target)\n\ndef mlp_esm():\n    return MLP_1(num_esm, num_target)\n\n\nmodels = {\n    'cnn_esm_kd':(feat_esm_kd, esm_col, cnn_esm()),\n    'cnn_t5_kd': (feat_t5_kd, t5_col, cnn_t5()),\n    'cnn_t5':(feat_t5, t5_col, cnn_t5()) \n }",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#predict-through-top-models",
    "href": "ml_predict.html#predict-through-top-models",
    "title": "Predict PSSMs",
    "section": "Predict through top models",
    "text": "Predict through top models\n\npredict_dl?\n\n\nSignature: predict_dl(df, feat_col, target_col, model, model_pth)\nDocstring: Predict dataframe given a deep learning model\nFile:      /usr/local/lib/python3.9/dist-packages/katlas/dl.py\nType:      function\n\n\n\n\n\nN_FOLD=5\n\n\npred_list = []\nfor model_name, (data,feat_col,model) in models.items():\n    for i in range(N_FOLD):\n        pred = predict_dl(data,feat_col,target_col,model, f'{model_name}_fold{i}')\n        pred_list.append(pred)\n\n\nlen(pred_list)\n\n15",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#aggregate-results",
    "href": "ml_predict.html#aggregate-results",
    "title": "Predict PSSMs",
    "section": "Aggregate results",
    "text": "Aggregate results\n\n# Add up everything\npreds = reduce(lambda x, y: x.add(y, fill_value=0), pred_list)\n\n\ndef get_heatmap(df, # Stacked Dataframe with kinase as index, substrates as columns\n                kinase, # A specific kinase name in index\n                figsize = (7.5,10)\n               ):\n    \n    \"Plot PSSM of a single kinase from a df\"\n    # get a single kinase matrix from the df\n    matrix = get_one_kinase(df, kinase,drop_s=False).T\n    \n    # reorder aa order\n    aa_order = [i for i in 'PGACSTVILMFYWHKRQNDEsty']\n    matrix = matrix.reindex(index=aa_order)\n    \n    plot_heatmap(matrix,title=kinase,figsize=figsize)\n\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nget_heatmap(preds.iloc[:,:-3],'CK1A2')",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#post-process",
    "href": "ml_predict.html#post-process",
    "title": "Predict PSSMs",
    "section": "Post-process",
    "text": "Post-process\n\n# remove kinase with duplicated name\npreds= preds[~preds.index.duplicated()]\n\n\npreds_minmax = MinMaxScaler().fit_transform(preds.T).T\n\n\ndata = []\nfor k in preds_minmax.index:\n    w = get_one_kinase(preds_minmax,k,drop_s=False).T\n    w = w/w.sum()\n    w2 = w.unstack().reset_index(name=k)\n    w2['substrate'] = w2.position.astype(str)+w2.aa\n    w3 = w2.set_index('substrate')[k]\n    data.append(w3)\n    # break\n\n\npreds_final = pd.concat(data,axis=1).T\n\npreds_final = preds_final[target_col]\n\n\npreds_final = preds_final[~preds_final.index.isin(t5.kinase)]\n\n\npreds_final.index\n\nIndex(['ADCK1', 'ADCK2', 'COQ8A', 'COQ8B', 'ADCK5', 'ACVRL1', 'ACVR1C',\n       'ALPK3', 'ALPK2', 'ARAF', 'CASK', 'CDK20', 'CDKL2', 'CDKL3', 'CDKL4',\n       'STK35', 'PDIK1L', 'DCLK3', 'DDR1', 'CDC42BPG', 'STK17B', 'ERBB2',\n       'MAPK6', 'MAPK4', 'STK36', 'TNNI3K', 'AATK', 'LMTK2', 'LMTK3', 'LRRK1',\n       'MAP3K13', 'MAP2K6', 'MAP3K4', 'MAST1', 'MAST2', 'MAST3', 'MAST4',\n       'AMHR2', 'PKMYT1', 'NEK10', 'NRK', 'PDHK3', 'CDK15', 'PIK3R4', 'CDK11B',\n       'PSKH1', 'RIOK1', 'RIOK2', 'RIOK3', 'RNASEL', 'ROR1', 'ROR2', 'SBK2',\n       'SBK3', 'ANKK1', 'RSKR', 'SPEG', 'TESK2', 'TIE1', 'KALRN', 'TRIO',\n       'TSSK3', 'TSSK4', 'WEE2', 'STK32A'],\n      dtype='object')\n\n\n\n# preds_final.to_parquet('raw/predicted.parquet')\n\n\n# or directly load\npreds_final = pd.read_parquet('raw/predicted.parquet')",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#select-kinase-families-with-high-oof-pearson-scores",
    "href": "ml_predict.html#select-kinase-families-with-high-oof-pearson-scores",
    "title": "Predict PSSMs",
    "section": "Select kinase families with high oof Pearson scores",
    "text": "Select kinase families with high oof Pearson scores\n\nfamily_score = pd.read_csv('raw/oof_corr_family.csv').rename(columns={'kinase':'family_count','Pearson':'Pearson_family'})\nsubfamily_score = pd.read_csv('raw/oof_corr_subfamily.csv').rename(columns={'kinase':'subfamily_count','Pearson':'Pearson_subfamily'})\n\n\nfamily_score\n\n\n\n\n\n\n\n\nfamily\nPearson_family\nfamily_count\n\n\n\n\n0\nALK\n0.968724\n2\n\n\n1\nAbl\n0.959211\n2\n\n\n2\nAck\n0.830424\n2\n\n\n3\nAkt\n0.974935\n3\n\n\n4\nAlpha\n0.198162\n4\n\n\n...\n...\n...\n...\n\n\n95\nVEGFR\n0.964378\n3\n\n\n96\nVRK\n0.651387\n2\n\n\n97\nWEE\n-0.090115\n1\n\n\n98\nWNK\n0.618240\n4\n\n\n99\nYANK\n0.816684\n2\n\n\n\n\n100 rows × 3 columns\n\n\n\n\npreds_info = pd.DataFrame(preds_final.index,columns=['kinase']).merge(df,'left')\n\n\npreds_info = preds_info.merge(family_score,'left')\npreds_info = preds_info.merge(subfamily_score,'left')\n\n\npreds_info = preds_info[['kinase','ID_coral','uniprot','ID_HGNC',\n                         'group','family','subfamily',\n                         'Pearson_family','family_count',\n                         'Pearson_subfamily','subfamily_count'\n                        ]]\n\n\nselected = pd.read_csv('raw/pred_kinase.csv')\n\n\nselected_df = preds_info[preds_info.kinase.isin(selected.kinase)]\nselected_df\n\n\n\n\n\n\n\n\nkinase\nID_coral\nuniprot\nID_HGNC\ngroup\nfamily\nsubfamily\nPearson_family\nfamily_count\nPearson_subfamily\nsubfamily_count\n\n\n\n\n5\nACVRL1\nALK1\nP37023\nACVRL1\nTKL\nSTKR\nSTKR1\n0.857840\n9.0\n0.908758\n5.0\n\n\n6\nACVR1C\nALK7\nQ8NER5\nACVR1C\nTKL\nSTKR\nSTKR1\n0.857840\n9.0\n0.908758\n5.0\n\n\n11\nCDK20\nCCRK\nQ8IZL9\nCDK20\nCMGC\nCDK\nCDK\n0.923265\n17.0\nNaN\nNaN\n\n\n12\nCDKL2\nCDKL2\nQ92772\nCDKL2\nCMGC\nCDKL\nCDKL\n0.763117\n2.0\n0.763117\n2.0\n\n\n13\nCDKL3\nCDKL3\nQ8IVW4\nCDKL3\nCMGC\nCDKL\nCDKL\n0.763117\n2.0\n0.763117\n2.0\n\n\n14\nCDKL4\nCDKL4\nQ5MAI5\nCDKL4\nCMGC\nCDKL\nCDKL\n0.763117\n2.0\n0.763117\n2.0\n\n\n17\nDCLK3\nDCAMKL3\nQ9C098\nDCLK3\nCAMK\nDCAMKL\nDCAMKL\n0.901985\n2.0\n0.901985\n2.0\n\n\n19\nCDC42BPG\nDMPK2\nQ6DT37\nCDC42BPG\nAGC\nDMPK\nGEK\n0.954669\n6.0\n0.961369\n3.0\n\n\n20\nSTK17B\nDRAK2\nO94768\nSTK17B\nCAMK\nDAPK\nDAPK\n0.792083\n4.0\n0.792083\n4.0\n\n\n22\nMAPK6\nErk3\nQ16659\nMAPK6\nCMGC\nMAPK\nERK3\n0.881876\n12.0\nNaN\nNaN\n\n\n23\nMAPK4\nErk4\nP31152\nMAPK4\nCMGC\nMAPK\nERK3\n0.881876\n12.0\nNaN\nNaN\n\n\n25\nTNNI3K\nHH498\nQ59H18\nTNNI3K\nTKL\nMLK\nHH498\n0.733784\n7.0\nNaN\nNaN\n\n\n30\nMAP3K13\nLZK\nO43283\nMAP3K13\nTKL\nMLK\nLZK\n0.733784\n7.0\n0.497632\n1.0\n\n\n32\nMAP3K4\nMAP3K4\nQ9Y6R4\nMAP3K4\nSTE\nSTE11\nSTE11\n0.749903\n7.0\n0.749903\n7.0\n\n\n37\nAMHR2\nMISR2\nQ16671\nAMHR2\nTKL\nSTKR\nSTKR2\n0.857840\n9.0\n0.794193\n4.0\n\n\n39\nNEK10\nNEK10\nQ6ZWH5\nNEK10\nOther\nNEK\nNEK\n0.778235\n10.0\n0.778235\n10.0\n\n\n40\nNRK\nNRK\nQ7Z2Y5\nNRK\nSTE\nSTE20\nMSN\n0.863932\n27.0\n0.945743\n3.0\n\n\n41\nPDHK3\nPDHK3\nQ15120\nPDK3\nAtypical\nPDHK\nPDHK\n0.676690\n3.0\n0.676690\n3.0\n\n\n42\nCDK15\nPFTAIRE2\nQ96Q40\nCDK15\nCMGC\nCDK\nPFTAIRE\n0.923265\n17.0\n0.949171\n1.0\n\n\n44\nCDK11B\nPITSLRE\nP21127\nCDK11B\nCMGC\nCDK\nCDK11\n0.923265\n17.0\nNaN\nNaN\n\n\n52\nSBK2\nSgK069\nP0C263\nSBK2\nOther\nNKF1\nNKF1\n0.734262\n1.0\n0.734262\n1.0\n\n\n53\nSBK3\nSgK110\nP0C264\nSBK3\nOther\nNKF1\nNKF1\n0.734262\n1.0\n0.734262\n1.0\n\n\n54\nANKK1\nSgK288\nQ8NFD2\nANKK1\nTKL\nRIPK\nRIPK\n0.627125\n4.0\n0.627125\n4.0\n\n\n57\nTESK2\nTESK2\nQ96S53\nTESK2\nTKL\nLISK\nTESK\n0.576401\n3.0\n0.099881\n1.0\n\n\n61\nTSSK3\nTSSK3\nQ96PN8\nTSSK3\nCAMK\nTSSK\nTSSK\n0.847705\n3.0\n0.847705\n3.0\n\n\n62\nTSSK4\nTSSK4\nQ6SA08\nTSSK4\nCAMK\nTSSK\nTSSK\n0.847705\n3.0\n0.847705\n3.0\n\n\n64\nSTK32A\nYANK1\nQ8WU08\nSTK32A\nAGC\nYANK\nYANK\n0.816684\n2.0\n0.816684\n2.0\n\n\n\n\n\n\n\n\n# selected = preds_info[preds_info['Pearson_family']&gt;=0.55]\\\n# .sort_values('Pearson_family',ascending=False)\\\n# .query('group!=\"TK\"')\n\n# # Remove MAP2K families, as it is potentially contaminated with MAPK families\n# selected = selected[~selected.kinase.str.startswith('MAP2')]\n\n\nlen(selected)\n\n29\n\n\nTo save PSSMs:\n\npreds_final.index\n\nIndex(['ADCK1', 'ADCK2', 'COQ8A', 'COQ8B', 'ADCK5', 'ACVRL1', 'ACVR1C',\n       'ALPK3', 'ALPK2', 'ARAF', 'CASK', 'CDK20', 'CDKL2', 'CDKL3', 'CDKL4',\n       'STK35', 'PDIK1L', 'DCLK3', 'DDR1', 'CDC42BPG', 'STK17B', 'ERBB2',\n       'MAPK6', 'MAPK4', 'STK36', 'TNNI3K', 'AATK', 'LMTK2', 'LMTK3', 'LRRK1',\n       'MAP3K13', 'MAP2K6', 'MAP3K4', 'MAST1', 'MAST2', 'MAST3', 'MAST4',\n       'AMHR2', 'PKMYT1', 'NEK10', 'NRK', 'CDK15', 'PIK3R4', 'CDK11B', 'PSKH1',\n       'RIOK1', 'RIOK2', 'RIOK3', 'RNASEL', 'ROR1', 'ROR2', 'SBK2', 'SBK3',\n       'ANKK1', 'RSKR', 'SPEG', 'TESK2', 'TIE1', 'KALRN', 'TRIO', 'TSSK3',\n       'TSSK4', 'WEE2', 'STK32A'],\n      dtype='object')\n\n\n\nselected_PSSM = preds_final.loc[selected.kinase]\n\n\n# selected_PSSM.to_csv('source/Supplementary_table3_predicted_PSSM.csv')\n\n\npreds_final\n\n\n\n\n\n\n\nsubstrate\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n-3S\n-3T\n-3V\n-3I\n-3L\n-3M\n-3F\n-3Y\n-3W\n-3H\n-3K\n-3R\n-3Q\n-3N\n-3D\n-3E\n-3s\n-3t\n-3y\n-2P\n-2G\n-2A\n-2C\n-2S\n-2T\n-2V\n-2I\n-2L\n-2M\n-2F\n-2Y\n-2W\n-2H\n-2K\n-2R\n-2Q\n-2N\n-2D\n-2E\n-2s\n-2t\n-2y\n-1P\n-1G\n-1A\n-1C\n-1S\n-1T\n-1V\n-1I\n-1L\n-1M\n-1F\n-1Y\n-1W\n-1H\n-1K\n-1R\n-1Q\n-1N\n-1D\n-1E\n-1s\n-1t\n-1y\n1P\n1G\n1A\n1C\n1S\n1T\n1V\n1I\n1L\n1M\n1F\n1Y\n1W\n1H\n1K\n1R\n1Q\n1N\n1D\n1E\n1s\n1t\n1y\n2P\n2G\n2A\n2C\n2S\n2T\n2V\n2I\n2L\n2M\n2F\n2Y\n2W\n2H\n2K\n2R\n2Q\n2N\n2D\n2E\n2s\n2t\n2y\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n\n\n\n\nADCK1\n0.048353\n0.044662\n0.049684\n0.047756\n0.039644\n0.038732\n0.041271\n0.037347\n0.041508\n0.038331\n0.053608\n0.049934\n0.062422\n0.053521\n0.049245\n0.060374\n0.029276\n0.031936\n0.034305\n0.029565\n0.038343\n0.035231\n0.044951\n0.044934\n0.055889\n0.053259\n0.051039\n0.040561\n0.039071\n0.029120\n0.026485\n0.032313\n0.043253\n0.043563\n0.045449\n0.055382\n0.051374\n0.051370\n0.058486\n0.042473\n0.033350\n0.037059\n0.042023\n0.037581\n0.039726\n0.046240\n0.045317\n0.043955\n0.041623\n0.038439\n0.031459\n0.036182\n0.017883\n0.025107\n0.028089\n0.039873\n0.038124\n0.047898\n0.048998\n0.048629\n0.060935\n0.169430\n0.039727\n0.039115\n0.027784\n0.027859\n0.026473\n0.025607\n0.051496\n0.052765\n0.066532\n0.069552\n0.057155\n0.035952\n0.036574\n0.029716\n0.024590\n0.024692\n0.044897\n0.037173\n0.038102\n0.036595\n0.045834\n0.042720\n0.070292\n0.053697\n0.044977\n0.034447\n0.035987\n0.033721\n0.033731\n0.050301\n0.050042\n0.068772\n0.047273\n0.037983\n0.037060\n0.039980\n0.016494\n0.016991\n0.048666\n0.050307\n0.035136\n0.047393\n0.021929\n0.049534\n0.049586\n0.067902\n0.043523\n0.063060\n0.035749\n0.029079\n0.014841\n0.017725\n0.110975\n0.037987\n0.036425\n0.031539\n0.035683\n0.029945\n0.028544\n0.049934\n0.052586\n0.064842\n0.065427\n0.068493\n0.070078\n0.055551\n0.037420\n0.034944\n0.041709\n0.127522\n0.034614\n0.011865\n0.012881\n0.019960\n0.019043\n0.033009\n0.038021\n0.037081\n0.045470\n0.044291\n0.037363\n0.037934\n0.032741\n0.023745\n0.026896\n0.036136\n0.043042\n0.064908\n0.042939\n0.073471\n0.058376\n0.082958\n0.044870\n0.047893\n0.049456\n0.037746\n0.036087\n0.036824\n0.021754\n0.048246\n0.052635\n0.044155\n0.047448\n0.037878\n0.042588\n0.030934\n0.027071\n0.034234\n0.036288\n0.040991\n0.053992\n0.051278\n0.051650\n0.056384\n0.083639\n0.037271\n0.044311\n0.040318\n0.036551\n0.032791\n0.030228\n0.039123\n0.044532\n0.046071\n0.034738\n0.039499\n0.041556\n0.039789\n0.026431\n0.034100\n0.032969\n0.039661\n0.043047\n0.048863\n0.067794\n0.052228\n0.059207\n0.054760\n0.044493\n0.039064\n0.038197\n0.039430\n0.044199\n0.045629\n0.043743\n0.592792\n0.407208\n0.000000\n\n\nADCK2\n0.045721\n0.039397\n0.046075\n0.048963\n0.039347\n0.039411\n0.037317\n0.039063\n0.038259\n0.038223\n0.050568\n0.046183\n0.060257\n0.053303\n0.053477\n0.059690\n0.032951\n0.037253\n0.037623\n0.035300\n0.040233\n0.038882\n0.042505\n0.038253\n0.046895\n0.046298\n0.050421\n0.040807\n0.040307\n0.026036\n0.026761\n0.031410\n0.040487\n0.041790\n0.049121\n0.067160\n0.053791\n0.054370\n0.057504\n0.040842\n0.038828\n0.038541\n0.046431\n0.037180\n0.038448\n0.048320\n0.029899\n0.032401\n0.036139\n0.042894\n0.034648\n0.035971\n0.016074\n0.024989\n0.037466\n0.050001\n0.041506\n0.051284\n0.054756\n0.047511\n0.055568\n0.170383\n0.034518\n0.033387\n0.029179\n0.024037\n0.028684\n0.028524\n0.060181\n0.037890\n0.045830\n0.057961\n0.060794\n0.037078\n0.037156\n0.029906\n0.035417\n0.040394\n0.069018\n0.050424\n0.050308\n0.056359\n0.049178\n0.036979\n0.050035\n0.047813\n0.034787\n0.024446\n0.031328\n0.033462\n0.036423\n0.047013\n0.044032\n0.054508\n0.044736\n0.038589\n0.038306\n0.039960\n0.019210\n0.015471\n0.043412\n0.050007\n0.032492\n0.046547\n0.028663\n0.048846\n0.062203\n0.079447\n0.049108\n0.061290\n0.034761\n0.033345\n0.013798\n0.020700\n0.100570\n0.072016\n0.052588\n0.035022\n0.042979\n0.032550\n0.032083\n0.033524\n0.041327\n0.041449\n0.056695\n0.059243\n0.057737\n0.045298\n0.040674\n0.053588\n0.058783\n0.066609\n0.050871\n0.016541\n0.022681\n0.025931\n0.025844\n0.035966\n0.043190\n0.031350\n0.040698\n0.040927\n0.039169\n0.039970\n0.029137\n0.024877\n0.024263\n0.038165\n0.042098\n0.061697\n0.048007\n0.071997\n0.060763\n0.092504\n0.040901\n0.046491\n0.033582\n0.031696\n0.036643\n0.036539\n0.045335\n0.044955\n0.046267\n0.038843\n0.048163\n0.041402\n0.042168\n0.028033\n0.027368\n0.029552\n0.039374\n0.043419\n0.057464\n0.053689\n0.051217\n0.066311\n0.101883\n0.038626\n0.047659\n0.030986\n0.022662\n0.028900\n0.029022\n0.042037\n0.049299\n0.041710\n0.031999\n0.042755\n0.043463\n0.042232\n0.027886\n0.036487\n0.037486\n0.038706\n0.039611\n0.049975\n0.063763\n0.052915\n0.062923\n0.064993\n0.048762\n0.040808\n0.032854\n0.029899\n0.040699\n0.041583\n0.039191\n0.550779\n0.449222\n0.000000\n\n\nCOQ8A\n0.047078\n0.049584\n0.046538\n0.046978\n0.038505\n0.039265\n0.038297\n0.027514\n0.025965\n0.034214\n0.046496\n0.053125\n0.061218\n0.063530\n0.050068\n0.057296\n0.030144\n0.036608\n0.041208\n0.034382\n0.040725\n0.038488\n0.052773\n0.051598\n0.054722\n0.051946\n0.053349\n0.041256\n0.040011\n0.028248\n0.022370\n0.025431\n0.038975\n0.042358\n0.047993\n0.058613\n0.053117\n0.044062\n0.050123\n0.041462\n0.035505\n0.039927\n0.042196\n0.040626\n0.042263\n0.053851\n0.047354\n0.044989\n0.042722\n0.043670\n0.036494\n0.039349\n0.019971\n0.025216\n0.025044\n0.042077\n0.042146\n0.052869\n0.057933\n0.045585\n0.046349\n0.114434\n0.041640\n0.040620\n0.037419\n0.036016\n0.028373\n0.029125\n0.060607\n0.053200\n0.076206\n0.065363\n0.053134\n0.034243\n0.035309\n0.027042\n0.027100\n0.026685\n0.040070\n0.041957\n0.044627\n0.037925\n0.047342\n0.033303\n0.061909\n0.042819\n0.042647\n0.039713\n0.036886\n0.035117\n0.037581\n0.059822\n0.046798\n0.075342\n0.045890\n0.037855\n0.035734\n0.039024\n0.015485\n0.014795\n0.051195\n0.048579\n0.034145\n0.045877\n0.022837\n0.045838\n0.046570\n0.062046\n0.037391\n0.058346\n0.035356\n0.024353\n0.018455\n0.018843\n0.139246\n0.046620\n0.029290\n0.026538\n0.029174\n0.029126\n0.030876\n0.048084\n0.055013\n0.066582\n0.067302\n0.064741\n0.074518\n0.062068\n0.035251\n0.038081\n0.038229\n0.112505\n0.026391\n0.011765\n0.018384\n0.024527\n0.025697\n0.039235\n0.034462\n0.038124\n0.039552\n0.039801\n0.034877\n0.035696\n0.030061\n0.021655\n0.026670\n0.038152\n0.040993\n0.065945\n0.040576\n0.082912\n0.063481\n0.080361\n0.041272\n0.043819\n0.047356\n0.041445\n0.042968\n0.042554\n0.027267\n0.047743\n0.054207\n0.042449\n0.043962\n0.038254\n0.039598\n0.027100\n0.024370\n0.032305\n0.036350\n0.039941\n0.054749\n0.049598\n0.049072\n0.061979\n0.091424\n0.034625\n0.039491\n0.038573\n0.036898\n0.037693\n0.037084\n0.042537\n0.040794\n0.048981\n0.034644\n0.042590\n0.041290\n0.038335\n0.021906\n0.022611\n0.024033\n0.032745\n0.038359\n0.051069\n0.071394\n0.053739\n0.060517\n0.056973\n0.045843\n0.038744\n0.041111\n0.042403\n0.050887\n0.051535\n0.049496\n0.531098\n0.468902\n0.000000\n\n\nCOQ8B\n0.046490\n0.047984\n0.047754\n0.047483\n0.039761\n0.038309\n0.038994\n0.028313\n0.026969\n0.035838\n0.042184\n0.050925\n0.056083\n0.059763\n0.058692\n0.067034\n0.035713\n0.038473\n0.037042\n0.033089\n0.039843\n0.037535\n0.045730\n0.051322\n0.054295\n0.053244\n0.051641\n0.041342\n0.041967\n0.029125\n0.021728\n0.025911\n0.040115\n0.038629\n0.046331\n0.054629\n0.053792\n0.050985\n0.055641\n0.042761\n0.040816\n0.036494\n0.041124\n0.036740\n0.040735\n0.050634\n0.049042\n0.048814\n0.042762\n0.043352\n0.036251\n0.038490\n0.021945\n0.025510\n0.028467\n0.042587\n0.040218\n0.053032\n0.054805\n0.047075\n0.046827\n0.114656\n0.045907\n0.040083\n0.032092\n0.036369\n0.024304\n0.026974\n0.060437\n0.060197\n0.071454\n0.059700\n0.054718\n0.034807\n0.035518\n0.032697\n0.033934\n0.035685\n0.047181\n0.039248\n0.044588\n0.038767\n0.050232\n0.038700\n0.068320\n0.041183\n0.041750\n0.023728\n0.025068\n0.031471\n0.034198\n0.056857\n0.051250\n0.067170\n0.048648\n0.041807\n0.037135\n0.038623\n0.021044\n0.016097\n0.047293\n0.047487\n0.034862\n0.050749\n0.028458\n0.049276\n0.042625\n0.061439\n0.040653\n0.058289\n0.032244\n0.027185\n0.016145\n0.017861\n0.123662\n0.046231\n0.054320\n0.043225\n0.038327\n0.030678\n0.031225\n0.046657\n0.043060\n0.056026\n0.058741\n0.052604\n0.066302\n0.053787\n0.042357\n0.047298\n0.056374\n0.094522\n0.036503\n0.008882\n0.015888\n0.021940\n0.022703\n0.032349\n0.029345\n0.034197\n0.032630\n0.038210\n0.034895\n0.035072\n0.030126\n0.023677\n0.031024\n0.040142\n0.041913\n0.070701\n0.045380\n0.071101\n0.067837\n0.097443\n0.043714\n0.038530\n0.037926\n0.041200\n0.035452\n0.036403\n0.043080\n0.041556\n0.047100\n0.040494\n0.044526\n0.039906\n0.041232\n0.029107\n0.027733\n0.036204\n0.038227\n0.043508\n0.057160\n0.051152\n0.049759\n0.061597\n0.099651\n0.036943\n0.038938\n0.035402\n0.032446\n0.032767\n0.032437\n0.042155\n0.041628\n0.047614\n0.034308\n0.043401\n0.041791\n0.039117\n0.026839\n0.029370\n0.025726\n0.033912\n0.039222\n0.050926\n0.066690\n0.053031\n0.066319\n0.065283\n0.047686\n0.037915\n0.035601\n0.037493\n0.046414\n0.044682\n0.045031\n0.536430\n0.463570\n0.000000\n\n\nADCK5\n0.049543\n0.047891\n0.053344\n0.047442\n0.039538\n0.039139\n0.037515\n0.030666\n0.034010\n0.034438\n0.048031\n0.047656\n0.058163\n0.057253\n0.053287\n0.060471\n0.032071\n0.034439\n0.040639\n0.036601\n0.039099\n0.036382\n0.042382\n0.046010\n0.055103\n0.051187\n0.048136\n0.040229\n0.039656\n0.026984\n0.025265\n0.029893\n0.040407\n0.040468\n0.048090\n0.060049\n0.052049\n0.046587\n0.056406\n0.040163\n0.036351\n0.042446\n0.047558\n0.037579\n0.038367\n0.051016\n0.044579\n0.041849\n0.043394\n0.040439\n0.034076\n0.037129\n0.020297\n0.029052\n0.041045\n0.045282\n0.043976\n0.054678\n0.053243\n0.049444\n0.054603\n0.134756\n0.039868\n0.034255\n0.029839\n0.030173\n0.018328\n0.019532\n0.060163\n0.056545\n0.062542\n0.064457\n0.056482\n0.034845\n0.037462\n0.032346\n0.032776\n0.029499\n0.049168\n0.035670\n0.039854\n0.036803\n0.045590\n0.041027\n0.082523\n0.049648\n0.044459\n0.029937\n0.032879\n0.031460\n0.031788\n0.042241\n0.047725\n0.070456\n0.052987\n0.044120\n0.038745\n0.038989\n0.015254\n0.011927\n0.052403\n0.050014\n0.032129\n0.047100\n0.022718\n0.048942\n0.046519\n0.058769\n0.051422\n0.066435\n0.038945\n0.036135\n0.013666\n0.014764\n0.099837\n0.045244\n0.049914\n0.037949\n0.042928\n0.029092\n0.027040\n0.041000\n0.035742\n0.057063\n0.056079\n0.054661\n0.061901\n0.043877\n0.037606\n0.036988\n0.051406\n0.169357\n0.047310\n0.009869\n0.010754\n0.014510\n0.013932\n0.025780\n0.038718\n0.032160\n0.044575\n0.038416\n0.034899\n0.037351\n0.027102\n0.018443\n0.025340\n0.031271\n0.037153\n0.059982\n0.038112\n0.062765\n0.059484\n0.095888\n0.045951\n0.041892\n0.058679\n0.054161\n0.039517\n0.042078\n0.036063\n0.048144\n0.047688\n0.042921\n0.045241\n0.038341\n0.041129\n0.033237\n0.028478\n0.038002\n0.035906\n0.040726\n0.050294\n0.049203\n0.046171\n0.055096\n0.084852\n0.038221\n0.040089\n0.041478\n0.039187\n0.038181\n0.036559\n0.040855\n0.048178\n0.046452\n0.036643\n0.039390\n0.041241\n0.039432\n0.028720\n0.033507\n0.033618\n0.036911\n0.042227\n0.047590\n0.065330\n0.048556\n0.058778\n0.057889\n0.044317\n0.036743\n0.036225\n0.038623\n0.047162\n0.046304\n0.046163\n0.589432\n0.410568\n0.000000\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nTRIO\n0.049070\n0.047619\n0.050919\n0.036940\n0.039468\n0.036601\n0.037051\n0.039088\n0.055922\n0.033747\n0.037797\n0.037885\n0.040365\n0.047620\n0.089619\n0.104386\n0.035882\n0.035138\n0.027533\n0.026947\n0.029696\n0.027546\n0.033160\n0.040242\n0.054292\n0.049277\n0.036617\n0.038336\n0.036097\n0.032922\n0.029114\n0.039965\n0.034677\n0.033214\n0.033950\n0.051522\n0.042696\n0.086770\n0.096365\n0.040047\n0.039212\n0.031899\n0.046810\n0.039532\n0.033757\n0.032687\n0.040588\n0.046487\n0.041025\n0.035235\n0.024366\n0.022327\n0.015677\n0.015624\n0.027098\n0.021550\n0.015253\n0.022121\n0.028663\n0.042066\n0.110473\n0.274714\n0.042374\n0.026190\n0.018635\n0.025052\n0.039983\n0.032963\n0.031535\n0.039414\n0.053819\n0.059979\n0.051875\n0.030931\n0.028657\n0.028994\n0.020251\n0.031121\n0.028722\n0.026451\n0.028520\n0.038303\n0.052640\n0.077293\n0.169409\n0.053991\n0.044506\n0.015306\n0.026811\n0.034840\n0.028631\n0.029538\n0.059929\n0.060988\n0.043823\n0.031445\n0.038540\n0.034964\n0.027002\n0.015795\n0.052652\n0.040019\n0.031302\n0.043654\n0.020271\n0.052015\n0.084335\n0.077021\n0.050008\n0.065065\n0.047315\n0.034443\n0.025273\n0.022954\n0.041188\n0.027463\n0.057164\n0.036142\n0.048622\n0.023223\n0.019486\n0.040813\n0.038318\n0.045951\n0.044914\n0.083225\n0.036573\n0.037518\n0.022715\n0.029867\n0.036701\n0.049416\n0.031456\n0.036215\n0.042563\n0.091499\n0.083831\n0.036325\n0.029434\n0.029243\n0.033266\n0.036495\n0.024849\n0.025063\n0.034100\n0.032383\n0.042886\n0.029725\n0.037479\n0.043795\n0.029674\n0.048883\n0.063765\n0.093569\n0.033577\n0.039036\n0.042169\n0.039494\n0.067533\n0.063865\n0.079716\n0.041778\n0.041596\n0.034564\n0.059608\n0.031858\n0.030933\n0.041257\n0.046932\n0.060865\n0.030918\n0.042661\n0.036810\n0.046814\n0.037225\n0.052091\n0.068956\n0.031620\n0.033985\n0.035322\n0.034865\n0.050751\n0.044158\n0.064431\n0.052995\n0.050392\n0.041937\n0.034362\n0.037274\n0.033597\n0.037413\n0.031098\n0.038037\n0.026956\n0.040720\n0.037006\n0.046596\n0.044965\n0.066581\n0.067287\n0.042255\n0.039186\n0.039640\n0.042475\n0.052884\n0.046734\n0.049610\n0.477542\n0.522458\n0.000000\n\n\nTSSK3\n0.058653\n0.025380\n0.066570\n0.056317\n0.037207\n0.036167\n0.080225\n0.075408\n0.115814\n0.049548\n0.037163\n0.036261\n0.024276\n0.026531\n0.046915\n0.083276\n0.037862\n0.020326\n0.007830\n0.007382\n0.021717\n0.022070\n0.027101\n0.027753\n0.058953\n0.062683\n0.042829\n0.038773\n0.036912\n0.039729\n0.030383\n0.037500\n0.049506\n0.021706\n0.032364\n0.026124\n0.056058\n0.116581\n0.107571\n0.041487\n0.037895\n0.022279\n0.037350\n0.029320\n0.030523\n0.015721\n0.057714\n0.044055\n0.054457\n0.034306\n0.030038\n0.031732\n0.027433\n0.024502\n0.018529\n0.024557\n0.014175\n0.025756\n0.019820\n0.051878\n0.128521\n0.239667\n0.041065\n0.032839\n0.008127\n0.015395\n0.027027\n0.027420\n0.020989\n0.018026\n0.039466\n0.090171\n0.075016\n0.036252\n0.037163\n0.065410\n0.035393\n0.020649\n0.030855\n0.031480\n0.036507\n0.026200\n0.050527\n0.126116\n0.125357\n0.054350\n0.047741\n0.002026\n0.007067\n0.012767\n0.014999\n0.016464\n0.090926\n0.052566\n0.058482\n0.030202\n0.041133\n0.039203\n0.029094\n0.021753\n0.033467\n0.040912\n0.024244\n0.038699\n0.025500\n0.045168\n0.103450\n0.108203\n0.062956\n0.048850\n0.023629\n0.027969\n0.013680\n0.014419\n0.025493\n0.007954\n0.025397\n0.036891\n0.053578\n0.041111\n0.040525\n0.037977\n0.026780\n0.040914\n0.059131\n0.048805\n0.051981\n0.040530\n0.049537\n0.059025\n0.078777\n0.070291\n0.056160\n0.028709\n0.035887\n0.040605\n0.042591\n0.026845\n0.022039\n0.027035\n0.042073\n0.043381\n0.040552\n0.040987\n0.054155\n0.066387\n0.063583\n0.059575\n0.052021\n0.068460\n0.054099\n0.129755\n0.020011\n0.036822\n0.042941\n0.037583\n0.009656\n0.017845\n0.027976\n0.026101\n0.016962\n0.018217\n0.029149\n0.036300\n0.065432\n0.043473\n0.042880\n0.025155\n0.023838\n0.032150\n0.039964\n0.055690\n0.043721\n0.075102\n0.076906\n0.045870\n0.051201\n0.045220\n0.091284\n0.078466\n0.034623\n0.011269\n0.010538\n0.023553\n0.032837\n0.030686\n0.030414\n0.041301\n0.033481\n0.034361\n0.063916\n0.108155\n0.139418\n0.086923\n0.071254\n0.028400\n0.035041\n0.036489\n0.034246\n0.030458\n0.034184\n0.036234\n0.026309\n0.018402\n0.015990\n0.015742\n0.015759\n0.620700\n0.379300\n0.000000\n\n\nTSSK4\n0.052728\n0.027791\n0.059114\n0.053775\n0.036460\n0.036364\n0.077692\n0.076985\n0.115165\n0.056947\n0.044673\n0.036815\n0.035141\n0.033569\n0.040793\n0.060000\n0.034332\n0.024112\n0.013683\n0.011410\n0.022643\n0.021738\n0.028070\n0.029160\n0.058073\n0.059669\n0.042281\n0.039931\n0.039793\n0.040242\n0.034511\n0.042144\n0.051907\n0.027392\n0.036469\n0.032939\n0.054183\n0.099418\n0.088901\n0.040957\n0.040556\n0.024174\n0.039583\n0.028542\n0.031062\n0.018114\n0.057667\n0.046000\n0.050294\n0.032826\n0.034368\n0.035929\n0.028808\n0.023344\n0.025414\n0.033727\n0.021281\n0.030275\n0.027176\n0.057613\n0.111045\n0.189078\n0.041813\n0.038692\n0.014025\n0.023164\n0.027983\n0.028601\n0.020876\n0.024183\n0.046774\n0.083527\n0.070331\n0.041056\n0.042470\n0.060570\n0.036528\n0.023113\n0.034264\n0.039010\n0.037698\n0.034880\n0.049172\n0.099556\n0.077305\n0.056535\n0.060101\n0.017323\n0.018576\n0.014551\n0.015900\n0.016576\n0.081065\n0.061904\n0.055609\n0.032369\n0.042901\n0.040985\n0.030295\n0.024896\n0.035281\n0.045901\n0.028236\n0.039934\n0.028533\n0.046500\n0.093109\n0.093223\n0.060791\n0.049695\n0.026890\n0.026179\n0.013563\n0.014949\n0.027192\n0.000000\n0.029969\n0.039070\n0.047886\n0.041985\n0.042070\n0.039563\n0.033557\n0.043256\n0.065946\n0.066799\n0.055416\n0.044437\n0.049172\n0.053947\n0.070393\n0.067609\n0.050689\n0.026755\n0.032607\n0.034816\n0.035600\n0.028457\n0.022125\n0.030072\n0.043746\n0.043979\n0.040514\n0.040628\n0.056415\n0.067637\n0.062479\n0.057405\n0.055342\n0.068655\n0.059069\n0.107542\n0.016290\n0.023216\n0.039592\n0.036376\n0.014476\n0.020323\n0.026238\n0.026215\n0.041665\n0.016244\n0.031620\n0.036699\n0.057738\n0.041766\n0.042658\n0.029229\n0.029311\n0.036618\n0.042735\n0.057426\n0.047430\n0.085156\n0.070591\n0.038712\n0.042855\n0.043761\n0.083382\n0.072574\n0.035593\n0.014580\n0.016641\n0.026681\n0.035851\n0.033285\n0.033330\n0.041113\n0.036743\n0.036320\n0.058757\n0.093853\n0.119285\n0.082519\n0.066321\n0.029773\n0.036372\n0.037973\n0.033146\n0.029864\n0.035657\n0.038069\n0.030552\n0.023436\n0.021363\n0.022620\n0.023797\n0.569166\n0.358863\n0.071971\n\n\nWEE2\n0.043967\n0.075610\n0.066270\n0.022744\n0.035380\n0.016544\n0.036876\n0.052500\n0.080799\n0.022085\n0.026341\n0.022279\n0.018525\n0.029408\n0.080315\n0.075319\n0.040636\n0.042321\n0.066750\n0.054230\n0.031021\n0.028095\n0.031986\n0.042869\n0.086758\n0.045162\n0.023713\n0.029243\n0.023958\n0.034570\n0.044249\n0.072020\n0.026170\n0.025481\n0.016079\n0.021329\n0.033396\n0.069211\n0.068525\n0.040078\n0.039380\n0.075558\n0.068705\n0.072290\n0.029349\n0.011905\n0.059183\n0.091238\n0.078219\n0.017050\n0.016508\n0.009258\n0.038960\n0.035152\n0.043076\n0.017049\n0.023477\n0.012678\n0.008085\n0.031861\n0.073281\n0.069517\n0.038651\n0.039370\n0.049084\n0.080480\n0.093174\n0.052211\n0.022438\n0.034737\n0.097239\n0.050473\n0.034056\n0.019104\n0.006526\n0.032920\n0.023955\n0.032882\n0.018267\n0.015706\n0.004761\n0.002667\n0.014464\n0.033755\n0.042027\n0.044284\n0.070194\n0.132836\n0.134048\n0.094661\n0.049406\n0.011032\n0.044062\n0.078456\n0.059391\n0.017279\n0.017465\n0.015591\n0.060694\n0.036641\n0.082583\n0.026307\n0.035697\n0.025075\n0.007191\n0.046183\n0.060556\n0.081128\n0.044798\n0.053526\n0.052816\n0.048690\n0.039354\n0.019848\n0.046669\n0.000000\n0.146733\n0.039054\n0.036102\n0.016717\n0.011760\n0.066982\n0.074497\n0.036724\n0.037622\n0.039006\n0.012272\n0.015387\n0.014001\n0.084789\n0.098231\n0.032632\n0.037891\n0.037673\n0.067815\n0.036568\n0.030217\n0.027327\n0.033869\n0.071613\n0.071329\n0.029926\n0.017721\n0.018773\n0.066162\n0.044255\n0.054582\n0.025666\n0.031754\n0.032632\n0.026301\n0.045391\n0.075666\n0.104309\n0.027431\n0.069056\n0.036004\n0.032605\n0.043191\n0.033639\n0.008123\n0.070788\n0.083901\n0.044681\n0.017935\n0.017282\n0.013780\n0.060448\n0.045041\n0.094324\n0.019183\n0.050876\n0.021346\n0.027009\n0.040054\n0.071068\n0.109179\n0.034782\n0.036738\n0.046085\n0.034930\n0.030356\n0.018590\n0.011623\n0.053925\n0.082393\n0.064062\n0.013706\n0.022838\n0.018505\n0.049247\n0.036580\n0.056739\n0.016486\n0.034869\n0.018795\n0.033647\n0.030841\n0.094766\n0.096597\n0.040385\n0.036239\n0.040689\n0.067024\n0.036481\n0.036286\n0.018901\n0.345801\n0.372509\n0.281690\n\n\nSTK32A\n0.042088\n0.048958\n0.043909\n0.042148\n0.039149\n0.039619\n0.035109\n0.038230\n0.032561\n0.036990\n0.039822\n0.044389\n0.042409\n0.046752\n0.047287\n0.052673\n0.036711\n0.042259\n0.042804\n0.037494\n0.053057\n0.054500\n0.061083\n0.043605\n0.046288\n0.041353\n0.039434\n0.041191\n0.038272\n0.034217\n0.032662\n0.035199\n0.036823\n0.036835\n0.036977\n0.041268\n0.038293\n0.041026\n0.045493\n0.035155\n0.038190\n0.041974\n0.047614\n0.074720\n0.074024\n0.059386\n0.035833\n0.030871\n0.032162\n0.035356\n0.031169\n0.031806\n0.030441\n0.029950\n0.027791\n0.030205\n0.030785\n0.033947\n0.029999\n0.032071\n0.025611\n0.061684\n0.030103\n0.029443\n0.036652\n0.047217\n0.130831\n0.130034\n0.066041\n0.044565\n0.034198\n0.034086\n0.043920\n0.036184\n0.036320\n0.031351\n0.032022\n0.051327\n0.039138\n0.049859\n0.041268\n0.038005\n0.034934\n0.027656\n0.030420\n0.035404\n0.036394\n0.026301\n0.031036\n0.059159\n0.060801\n0.145654\n0.056115\n0.048990\n0.038302\n0.038636\n0.041204\n0.040568\n0.039856\n0.036125\n0.040662\n0.047873\n0.043651\n0.048880\n0.036103\n0.041382\n0.052906\n0.064304\n0.043274\n0.038753\n0.027183\n0.032817\n0.044028\n0.043816\n0.054571\n0.021531\n0.028537\n0.028373\n0.038668\n0.039189\n0.038405\n0.051296\n0.062902\n0.043929\n0.062803\n0.089980\n0.043558\n0.040010\n0.032584\n0.033808\n0.046026\n0.037831\n0.022418\n0.015478\n0.028611\n0.060652\n0.061338\n0.072072\n0.017621\n0.021457\n0.030677\n0.031442\n0.026585\n0.026038\n0.034290\n0.034485\n0.026500\n0.030659\n0.036728\n0.043694\n0.044186\n0.027152\n0.015201\n0.015454\n0.021167\n0.018053\n0.028275\n0.029752\n0.037259\n0.037739\n0.365584\n0.021352\n0.031640\n0.033771\n0.040891\n0.036303\n0.037887\n0.042047\n0.044009\n0.039734\n0.039842\n0.044166\n0.043477\n0.052977\n0.039275\n0.026209\n0.031257\n0.031869\n0.031070\n0.037814\n0.042506\n0.068686\n0.068696\n0.114522\n0.041301\n0.035156\n0.037080\n0.032705\n0.037500\n0.037323\n0.034375\n0.033726\n0.033730\n0.034566\n0.032953\n0.034890\n0.040020\n0.036438\n0.036881\n0.041973\n0.034480\n0.033865\n0.035673\n0.040218\n0.061115\n0.061496\n0.152536\n0.488526\n0.511474\n0.000000\n\n\n\n\n65 rows × 210 columns",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#visualize-predicted-pssms",
    "href": "ml_predict.html#visualize-predicted-pssms",
    "title": "Predict PSSMs",
    "section": "Visualize predicted PSSMs",
    "text": "Visualize predicted PSSMs\n\nfor i,r in selected_df.iterrows():\n    print(f'{r.family}:{r.Pearson_family}')\n    \n    k = r.kinase\n    matrix = get_one_kinase(preds_final,k,drop_s=False).T\n    get_logo2(matrix, k)\n    plt.show()\n    plt.close()\n    \n    get_heatmap(preds_final.iloc[:,:-3],k)\n    plt.show()\n    plt.close()\n\nSTKR:0.8578397866239376\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTKR:0.8578397866239376\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDK:0.9232645242649458\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDKL:0.76311665060942\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDKL:0.76311665060942\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDKL:0.76311665060942\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDCAMKL:0.9019845007257056\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDMPK:0.9546690741027648\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDAPK:0.7920828111362217\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAPK:0.8818759660317733\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMAPK:0.8818759660317733\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMLK:0.7337835153843144\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMLK:0.7337835153843144\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTE11:0.7499031572306992\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTKR:0.8578397866239376\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNEK:0.7782348100131159\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSTE20:0.8639317629980943\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPDHK:0.6766899079964322\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDK:0.9232645242649458\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCDK:0.9232645242649458\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNKF1:0.7342624924789267\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNKF1:0.7342624924789267\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRIPK:0.62712483511819\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLISK:0.5764010061153408\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTSSK:0.8477050673723502\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTSSK:0.8477050673723502\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nYANK:0.8166840920260132",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#save-images",
    "href": "ml_predict.html#save-images",
    "title": "Predict PSSMs",
    "section": "Save images",
    "text": "Save images\nCreate folder: predict/logo, predict/heatmap, predict/combine\n\n# !mkdir predict\n# !mkdir predict/logo\n# !mkdir predict/heatmap\n# !mkdir predict/combine\n\n\n# clear contents in the folder\n# !rm -r predict/logo/*\n# !rm -r predict/heatmap/*\n# !rm -r predict/combine/*\n\n\n# for i,r in selected.iterrows():\n    \n#     print(f'{r.family}:{r.Pearson_family}')\n    \n#     k = r.kinase\n#     matrix = get_one_kinase(preds_final,k,drop_s=False).T\n#     get_logo2(matrix, k)\n#     plt.savefig(f'predict/logo/{k}.png',bbox_inches='tight', pad_inches=0.3) #0.3\n#     plt.close()\n    \n#     get_heatmap(preds_final.iloc[:,:-3],k,figsize=(7.5,10))\n#     plt.savefig(f'predict/heatmap/{k}.png',bbox_inches='tight', pad_inches=0)\n#     plt.close()\n    \n#     # break",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "ml_predict.html#save-and-combine-images-for-pdf",
    "href": "ml_predict.html#save-and-combine-images-for-pdf",
    "title": "Predict PSSMs",
    "section": "Save and combine images for pdf",
    "text": "Save and combine images for pdf\n\ndef combine_images_vertically(image_paths, output_path):\n    images = [Image.open(image_path).convert('RGBA') for image_path in image_paths]\n    \n    total_width = max(image.width for image in images)\n    total_height = sum(image.height for image in images)\n\n    combined_image = Image.new('RGBA', (total_width, total_height))\n\n    y_offset = 0\n    for image in images:\n        combined_image.paste(image, (0, y_offset), image)\n        y_offset += image.height\n\n    combined_image.save(output_path)\n\n\n# folders = [\"predict/logo\", \"predict/heatmap\"]\n\n# for i,r in tqdm(selected.iterrows(),total=len(selected)):\n    \n#     k = r.kinase\n#     filename = f\"{k}.png\"\n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n#     output_path = f\"predict/combine/{k}.png\"\n    \n#     combine_images_vertically(image_paths, output_path)\n#     # break\n\n\n# !zip -rq predict.zip predict/combine/*",
    "crumbs": [
      "Predict PSSMs"
    ]
  },
  {
    "objectID": "combine_datasets.html",
    "href": "combine_datasets.html",
    "title": "Prepare kinase-substrate dataset",
    "section": "",
    "text": "from matplotlib import pyplot as plt\nimport pandas as pd\nimport numpy as np\nimport seaborn as sns\nfrom scipy.stats import spearmanr, pearsonr",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#large-scale-dataset",
    "href": "combine_datasets.html#large-scale-dataset",
    "title": "Prepare kinase-substrate dataset",
    "section": "Large scale dataset",
    "text": "Large scale dataset\n\n# large_scale data\nLS= pd.read_excel('raw/large_scale_final2.xlsx')\n\nLS['gene_site'] = LS['S_position']\n\nLS = LS[['Kinase','gene_site','substrate']]\n\nLS_info = pd.read_csv('raw/LS_info.csv')\n\nLS = LS.merge(LS_info).drop(columns = ['count'])",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#phosphositeplus-dataset",
    "href": "combine_datasets.html#phosphositeplus-dataset",
    "title": "Prepare kinase-substrate dataset",
    "section": "PhosphoSitePlus dataset",
    "text": "PhosphoSitePlus dataset\n\nKS = pd.read_csv('raw/Kinase_Substrate_Dataset_final.csv')\n\n# only keep human kinase substrate pairs\nKS = KS.query('KIN_ORGANISM==\"human\"')\n\n# remove the substrate that does not have sty in the middle\nKS = KS[KS.substrate.str[7].isin(['s','t','y'])].reset_index(drop=True)\n\nKS['gene_site'] = KS.SUB_GENE.str.upper() + \"_\"+KS.SUB_MOD_RSD\n\nKS = KS[['Kinase','gene_site','substrate','kinase_uniprot','kinase_paper']]",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#combine",
    "href": "combine_datasets.html#combine",
    "title": "Prepare kinase-substrate dataset",
    "section": "Combine",
    "text": "Combine\n\nKS['source'] = 'pplus'\n\nLS['source'] = 'large_scale'\n\n\ndf = pd.concat([KS,LS]).reset_index(drop=True)\n\n\ndf\n\n\n\n\n\n\n\n\nKinase\ngene_site\nsubstrate\nkinase_uniprot\nkinase_paper\nsource\n\n\n\n\n0\nDYRK2\nGLI2_S385\nAEGLRPAsPLGLTQE\nQ92630\nDYRK2\npplus\n\n\n1\nDYRK2\nSIAH2_S68\nGGGAGPVsPQHHELT\nQ92630\nDYRK2\npplus\n\n\n2\nDYRK2\nCARHSP1_S41\nLRGNVVPsPLPtRRt\nQ92630\nDYRK2\npplus\n\n\n3\nDYRK2\nDCX_S306\nGPMRRSKsPADSANG\nQ92630\nDYRK2\npplus\n\n\n4\nDYRK2\nCDC25A_S283\nPErsQEEsPPGSTKr\nQ92630\nDYRK2\npplus\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n216464\nSPHK1\nHERC2_S2928\nAAVPFLAsDNEEEED\nQ9NYA1\nNaN\nlarge_scale\n\n\n216465\nSPHK1\nPARG_Y832\nDALHFRRyLDQFVPE\nQ9NYA1\nNaN\nlarge_scale\n\n\n216466\nSPHK1\nG6PI_T109\nALRNRsNtPILVDGK\nQ9NYA1\nNaN\nlarge_scale\n\n\n216467\nPRPK\nTITIN_S20761\nDAERKSWsTVTTECs\nQ96S44\nPRPK\nlarge_scale\n\n\n216468\nPRPK\nTITIN_S20768\nsTVTTECsKTSFRVA\nQ96S44\nPRPK\nlarge_scale\n\n\n\n\n216469 rows × 6 columns\n\n\n\n\n# kinase without mapping\ndf.loc[df.kinase_paper.isna()].Kinase.value_counts()\n\nKinase\nLYNb            1694\nABL1[T315I]     1320\nABL1[E255K]     1274\nRET[M918T]      1221\nFGFR3[K650M]    1220\n                ... \nGRP78              1\nTAO3               1\nPIK3CD             1\nPIK3CB             1\nG11                1\nName: count, Length: 80, dtype: int64\n\n\n\ndf.substrate.str[7].value_counts()\n\nsubstrate\ny    109225\ns     74830\nt     32414\nName: count, dtype: int64\n\n\n\ndf.source.value_counts()\n\nsource\nlarge_scale    198248\npplus           18221\nName: count, dtype: int64\n\n\n\nlen(df)\n\n216469\n\n\n\ndf['substrate'] = df['substrate'].\\\nstr.replace('r', 'R').\\\nstr.replace('k', 'K').\\\nstr.replace('n', 'N').\\\nstr.replace('d', 'D').\\\nstr.replace('h', 'H').\\\nstr.replace('c', 'C').\\\nstr.replace('X', '_').\\\nstr.replace('p', 'P').\\\nstr.replace('a', 'A').\\\nstr.replace('v', 'V').\\\nstr.replace('g', 'G').\\\nstr.replace('m', 'M').\\\nstr.replace('l', 'L').\\\nstr.replace('q', 'Q').\\\nstr.replace('f', 'F')\n\nSplit phosphosite sequence to single amino acid\n\ndf\n\n\n\n\n\n\n\n\nKinase\ngene_site\nsubstrate\nkinase_uniprot\nkinase_paper\nsource\n\n\n\n\n0\nDYRK2\nGLI2_S385\nAEGLRPAsPLGLTQE\nQ92630\nDYRK2\npplus\n\n\n1\nDYRK2\nSIAH2_S68\nGGGAGPVsPQHHELT\nQ92630\nDYRK2\npplus\n\n\n2\nDYRK2\nCARHSP1_S41\nLRGNVVPsPLPtRRt\nQ92630\nDYRK2\npplus\n\n\n3\nDYRK2\nDCX_S306\nGPMRRSKsPADSANG\nQ92630\nDYRK2\npplus\n\n\n4\nDYRK2\nCDC25A_S283\nPERsQEEsPPGSTKR\nQ92630\nDYRK2\npplus\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n216464\nSPHK1\nHERC2_S2928\nAAVPFLAsDNEEEED\nQ9NYA1\nNaN\nlarge_scale\n\n\n216465\nSPHK1\nPARG_Y832\nDALHFRRyLDQFVPE\nQ9NYA1\nNaN\nlarge_scale\n\n\n216466\nSPHK1\nG6PI_T109\nALRNRsNtPILVDGK\nQ9NYA1\nNaN\nlarge_scale\n\n\n216467\nPRPK\nTITIN_S20761\nDAERKSWsTVTTECs\nQ96S44\nPRPK\nlarge_scale\n\n\n216468\nPRPK\nTITIN_S20768\nsTVTTECsKTSFRVA\nQ96S44\nPRPK\nlarge_scale\n\n\n\n\n216469 rows × 6 columns",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#split-site-sequence-to-individual-columns",
    "href": "combine_datasets.html#split-site-sequence-to-individual-columns",
    "title": "Prepare kinase-substrate dataset",
    "section": "Split site sequence to individual columns",
    "text": "Split site sequence to individual columns\n\n# Split the 'SITE_+/-7_AA' column into individual letters\nsplit_cols = df['substrate'].apply(list).apply(pd.Series).fillna('_')\n\n# Rename the new columns from -7 to 7\nsplit_cols.columns = range(-7, 8)\n\n# Concatenate the original dataframe with the split columns\ndf = pd.concat([df, split_cols], axis=1)\n\n\ndf\n\n\n\n\n\n\n\n\nKinase\ngene_site\nsubstrate\nkinase_uniprot\nkinase_paper\nsource\n-7\n-6\n-5\n-4\n...\n-2\n-1\n0\n1\n2\n3\n4\n5\n6\n7\n\n\n\n\n0\nDYRK2\nGLI2_S385\nAEGLRPAsPLGLTQE\nQ92630\nDYRK2\npplus\nA\nE\nG\nL\n...\nP\nA\ns\nP\nL\nG\nL\nT\nQ\nE\n\n\n1\nDYRK2\nSIAH2_S68\nGGGAGPVsPQHHELT\nQ92630\nDYRK2\npplus\nG\nG\nG\nA\n...\nP\nV\ns\nP\nQ\nH\nH\nE\nL\nT\n\n\n2\nDYRK2\nCARHSP1_S41\nLRGNVVPsPLPtRRt\nQ92630\nDYRK2\npplus\nL\nR\nG\nN\n...\nV\nP\ns\nP\nL\nP\nt\nR\nR\nt\n\n\n3\nDYRK2\nDCX_S306\nGPMRRSKsPADSANG\nQ92630\nDYRK2\npplus\nG\nP\nM\nR\n...\nS\nK\ns\nP\nA\nD\nS\nA\nN\nG\n\n\n4\nDYRK2\nCDC25A_S283\nPERsQEEsPPGSTKR\nQ92630\nDYRK2\npplus\nP\nE\nR\ns\n...\nE\nE\ns\nP\nP\nG\nS\nT\nK\nR\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n216464\nSPHK1\nHERC2_S2928\nAAVPFLAsDNEEEED\nQ9NYA1\nNaN\nlarge_scale\nA\nA\nV\nP\n...\nL\nA\ns\nD\nN\nE\nE\nE\nE\nD\n\n\n216465\nSPHK1\nPARG_Y832\nDALHFRRyLDQFVPE\nQ9NYA1\nNaN\nlarge_scale\nD\nA\nL\nH\n...\nR\nR\ny\nL\nD\nQ\nF\nV\nP\nE\n\n\n216466\nSPHK1\nG6PI_T109\nALRNRsNtPILVDGK\nQ9NYA1\nNaN\nlarge_scale\nA\nL\nR\nN\n...\ns\nN\nt\nP\nI\nL\nV\nD\nG\nK\n\n\n216467\nPRPK\nTITIN_S20761\nDAERKSWsTVTTECs\nQ96S44\nPRPK\nlarge_scale\nD\nA\nE\nR\n...\nS\nW\ns\nT\nV\nT\nT\nE\nC\ns\n\n\n216468\nPRPK\nTITIN_S20768\nsTVTTECsKTSFRVA\nQ96S44\nPRPK\nlarge_scale\ns\nT\nV\nT\n...\nE\nC\ns\nK\nT\nS\nF\nR\nV\nA\n\n\n\n\n216469 rows × 21 columns",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#add-extra-columns",
    "href": "combine_datasets.html#add-extra-columns",
    "title": "Prepare kinase-substrate dataset",
    "section": "Add extra columns",
    "text": "Add extra columns\n\ndf['kinase'] = df['kinase_paper'].fillna(df['Kinase'])\n\ndf['on_tree']=df['kinase_paper'].notna().astype(int)",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#save",
    "href": "combine_datasets.html#save",
    "title": "Prepare kinase-substrate dataset",
    "section": "Save",
    "text": "Save\n\nUncheck below\n\n\ndf.columns = df.columns.astype(str) # Parquet can only save df with string column name\ndf.to_parquet('raw/df.parquet')",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#load-data",
    "href": "combine_datasets.html#load-data",
    "title": "Prepare kinase-substrate dataset",
    "section": "Load data",
    "text": "Load data\n\nNeed to convert the number in the columns to integer type\n\n\ndf = pd.read_parquet('raw/df.parquet')\n#Convert the number in the column name into integer\ndf.columns = [int(col) if col.lstrip('-').isdigit() else col for col in df.columns]",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "combine_datasets.html#visualize-counts",
    "href": "combine_datasets.html#visualize-counts",
    "title": "Prepare kinase-substrate dataset",
    "section": "Visualize counts",
    "text": "Visualize counts\n\ndf.kinase.value_counts().hist(bins=100)\nplt.axvline(x=100, color='r', linestyle='--', linewidth=1)\nplt.xlabel('count per kinase')\nplt.ylabel('# kinase');\n\n\n\n\n\n\n\n\n\ncnt = df.kinase.value_counts().reset_index()\n\n\ncnt.columns = ['kinase','count']\n\n\ncnt\n\n\n\n\n\n\n\n\nkinase\ncount\n\n\n\n\n0\nSRC\n2605\n\n\n1\nEPHA3\n2120\n\n\n2\nFES\n2013\n\n\n3\nNTRK3\n1927\n\n\n4\nALK\n1889\n\n\n...\n...\n...\n\n\n488\nCAMK1G\n1\n\n\n489\nCAMK2D iso8\n1\n\n\n490\nPHKA1\n1\n\n\n491\nVPRBP\n1\n\n\n492\nNEK10\n1\n\n\n\n\n493 rows × 2 columns",
    "crumbs": [
      "Prepare kinase-substrate dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html",
    "href": "preprocess_ls.html",
    "title": "Preprocess Large-scale dataset",
    "section": "",
    "text": "import pandas as pd\ndf = pd.read_csv('raw/Large_scale_S2.csv')\n# Add substrate and phos position info\ndf['Substrate'] = df.Substrate_uniprot.str.split('_').str[0]\ndf['substrate_position'] = df['Substrate'] + \"_\"+ df['Position']",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#eda---pivot-table",
    "href": "preprocess_ls.html#eda---pivot-table",
    "title": "Preprocess Large-scale dataset",
    "section": "EDA - Pivot table",
    "text": "EDA - Pivot table\nindex is unique phosphosites and column is kinase\n\np = df.pivot_table(index='substrate_position',\n                   columns='Kinase',\n                   values='Substrate', # any column\n                   aggfunc='count',\n                   fill_value=0)\n\n\np\n\n\n\n\n\n\n\nKinase\nABL1\nABL1[E255K]\nABL1[T315I]\nABL2\nACK\nACTR2\nACTR2B\nAKT1\nAKT2\nAKT3\n...\nZAK\nZAP70\np38a\np38b\np38d\np38g\np70S6K\np70S6Kb\nskMLCK\nsmMLCK\n\n\nsubstrate_position\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1433B_S132\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n1433B_S145\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n1433B_S147\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n1433B_S158\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n1433B_S212\n1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nZW10_S611\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nZYX_S259\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n1\n0\n0\n0\n0\n0\n\n\nZYX_S267\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n\n\nZYX_S505\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nZYX_T270\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n1\n1\n0\n0\n0\n0\n\n\n\n\n21449 rows × 385 columns\n\n\n\n\n# Check mutation\nfor kinase_with_mutation in ['ABL','ALK','BRAF','EGFR','FGFR3',\n                             'KIT','LRRK2','MET','PDGFRa','RET']:\n    print(p[p.columns[p.columns.str.contains(kinase_with_mutation)]].sum().reset_index(name='#substrates'))\n    print('---------------')\n\n        Kinase  #substrates\n0         ABL1         1577\n1  ABL1[E255K]         1274\n2  ABL1[T315I]         1322\n3         ABL2         1004\n---------------\n        Kinase  #substrates\n0          ALK         1876\n1         ALK1           29\n2         ALK2          331\n3         ALK4          463\n4  ALK[F1174L]         1111\n5  ALK[R1275Q]         1044\n---------------\n        Kinase  #substrates\n0         BRAF           22\n1  BRAF[V600E]          195\n---------------\n              Kinase  #substrates\n0               EGFR          796\n1        EGFR[L858R]          648\n2        EGFR[L861Q]          981\n3  EGFR[T790M/L858R]         1112\n4        EGFR[T790M]         1086\n---------------\n         Kinase  #substrates\n0         FGFR3          775\n1  FGFR3[K650E]          827\n2  FGFR3[K650M]         1220\n---------------\n       Kinase  #substrates\n0         KIT          786\n1  KIT[T670I]          674\n2  KIT[V560G]          172\n---------------\n          Kinase  #substrates\n0          LRRK2           59\n1  LRRK2[G2019S]           11\n---------------\n        Kinase  #substrates\n0          MET         1457\n1  MET[Y1235D]          511\n---------------\n          Kinase  #substrates\n0         PDGFRa         1194\n1  PDGFRa[T674I]          249\n2  PDGFRa[V561D]         1175\n---------------\n       Kinase  #substrates\n0         RET         1735\n1  RET[G691S]         1165\n2  RET[M918T]         1221\n3  RET[S891A]          876\n4  RET[Y791F]          860\n---------------\n\n\n\n# Number of substrates of kinase\np.sum().sort_values(ascending=False)\n\nKinase\nEPHA3             2102\nFES               2008\nTRKC              1928\nSRC               1899\nEPHA8             1878\n                  ... \nPKN3                 6\nSPHK1                4\nPIK3CD/PIK3R1        3\nPFTAIRE1/cycD3       2\nPRPK                 2\nLength: 385, dtype: int64\n\n\n\n# Most phosphorylated substrates\np.sum(1).sort_values(ascending=False)\n\nsubstrate_position\nHSPB1_S82     307\nALDOA_S39     191\nHS90B_S462    189\nRS29_Y7       185\nRS16_S9       180\n             ... \nZN768_Y359      1\nZN687_S316      1\nZN706_Y39       1\n1433F_T210      1\n1433F_T231      1\nLength: 21449, dtype: int64\n\n\nindex is unique substrates and column is kinase\n\np2 = df.pivot_table(index='Substrate',\n                   columns='Kinase',\n                   values='Type', # any column\n                   aggfunc='count',\n                   fill_value=0)\n\n\np2\n\n\n\n\n\n\n\nKinase\nABL1\nABL1[E255K]\nABL1[T315I]\nABL2\nACK\nACTR2\nACTR2B\nAKT1\nAKT2\nAKT3\n...\nZAK\nZAP70\np38a\np38b\np38d\np38g\np70S6K\np70S6Kb\nskMLCK\nsmMLCK\n\n\nSubstrate\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1433B\n4\n4\n3\n4\n2\n0\n0\n1\n0\n0\n...\n0\n3\n1\n1\n1\n1\n0\n0\n0\n0\n\n\n1433E\n3\n4\n3\n4\n2\n1\n0\n1\n0\n0\n...\n1\n4\n1\n1\n2\n2\n1\n0\n0\n0\n\n\n1433F\n4\n3\n4\n4\n1\n0\n0\n1\n0\n0\n...\n0\n3\n1\n1\n1\n2\n1\n0\n0\n0\n\n\n1433G\n4\n4\n4\n3\n1\n0\n0\n1\n0\n0\n...\n1\n2\n2\n2\n2\n2\n1\n0\n0\n0\n\n\n1433S\n5\n4\n3\n3\n2\n0\n0\n1\n0\n0\n...\n0\n3\n2\n1\n2\n2\n0\n0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nZO1\n2\n1\n0\n1\n0\n0\n0\n0\n0\n0\n...\n0\n0\n1\n0\n0\n1\n1\n0\n0\n0\n\n\nZO2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nZRAB2\n0\n0\n2\n0\n0\n0\n0\n0\n0\n0\n...\n2\n4\n0\n0\n0\n0\n1\n0\n0\n0\n\n\nZW10\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n\n\nZYX\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n3\n2\n0\n0\n0\n0\n\n\n\n\n4128 rows × 385 columns\n\n\n\nFind substrates that share same kinase pattern\n\np2[p2.duplicated(keep=False)].sort_values(list(p2.columns))\n\n\n\n\n\n\n\nKinase\nABL1\nABL1[E255K]\nABL1[T315I]\nABL2\nACK\nACTR2\nACTR2B\nAKT1\nAKT2\nAKT3\n...\nZAK\nZAP70\np38a\np38b\np38d\np38g\np70S6K\np70S6Kb\nskMLCK\nsmMLCK\n\n\nSubstrate\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nATS1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\nCARM1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\nCLN3\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\nDPOE1\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\nEHMT2\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n...\n0\n0\n0\n0\n0\n0\n1\n0\n0\n0\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nPP2AB\n4\n2\n4\n1\n0\n0\n0\n0\n0\n0\n...\n0\n0\n1\n0\n0\n1\n0\n0\n0\n0\n\n\nACTB\n6\n7\n5\n3\n4\n2\n0\n2\n2\n2\n...\n11\n4\n6\n4\n7\n5\n3\n2\n4\n0\n\n\nACTG\n6\n7\n5\n3\n4\n2\n0\n2\n2\n2\n...\n11\n4\n6\n4\n7\n5\n3\n2\n4\n0\n\n\nTBA1A\n7\n4\n4\n6\n1\n1\n0\n0\n0\n0\n...\n2\n3\n5\n4\n3\n4\n0\n1\n0\n0\n\n\nTBA1B\n7\n4\n4\n6\n1\n1\n0\n0\n0\n0\n...\n2\n3\n5\n4\n3\n4\n0\n1\n0\n0\n\n\n\n\n869 rows × 385 columns",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#id-mapping",
    "href": "preprocess_ls.html#id-mapping",
    "title": "Preprocess Large-scale dataset",
    "section": "ID mapping",
    "text": "ID mapping\nQuery the uniprot id of substrates in the uniprot web\n\nseq=pd.read_excel('raw/id_mapping.xlsx')\n\nseq = seq.rename(columns={'From':'uniprot','Sequence':'sequence'})\n\n\ndf = pd.read_csv('raw/Large_scale_S2.csv').rename(columns={'Substrate_uniprot':'uniprot'})\n\n\ndf\n\n\n\n\n\n\n\n\nType\nKinase\nuniprot\nPosition\nSIDIC\nPTMscore\\n(P &gt; 075)\n\n\n\n\n0\nTK\nABL1\n1433B_HUMAN\nS212\n1\n1\n\n\n1\nTK\nABL1\n1433B_HUMAN\nY151\n1\n1\n\n\n2\nTK\nABL1\n1433B_HUMAN\nY21\n1\n1\n\n\n3\nTK\nABL1\n1433B_HUMAN\nY50\n1\n1\n\n\n4\nTK\nABL1\n1433E_HUMAN\nY152\n1\n1\n\n\n...\n...\n...\n...\n...\n...\n...\n\n\n198531\nLK\nSPHK2\nTICN3_HUMAN\nT118\n1\n1\n\n\n198532\nLK\nSPHK2\nTPM4_HUMAN\nT241\n1\n1\n\n\n198533\nLK\nSPHK2\nULK3_HUMAN\nS305\n1\n1\n\n\n198534\nLK\nSPHK2\nZRAB2_HUMAN\nS165\n1\n1\n\n\n198535\nLK\nSPHK2\nZRAB2_HUMAN\nS181\n1\n1\n\n\n\n\n198536 rows × 6 columns\n\n\n\n\ndf = df.merge(seq)\n\n\n# Extract amino acid and position from \"Position\"\ndf['phospho_receptor'] = df['Position'].str[0]\n\ndf['phospho_position'] = df['Position'].str[1:].astype(int)\n\n\ndf.phospho_receptor.value_counts()\n\nphospho_receptor\nY    106611\nS     63242\nT     28683\nName: count, dtype: int64\n\n\n\ndef validate_position(row):\n    # Extract amino acid and position from the new columns\n    amino_acid = row['phospho_receptor']\n    position = int(row['phospho_position'])\n    \n    try:\n        # Check if the amino acid at the given position matches the specified amino acid\n        if row['sequence'][position-1] == amino_acid:\n            return 1\n        else:\n            return 0\n    except IndexError:  # Handle the case when position-1 exceeds the length of sequence\n        return 0\n\n\ndf['Validated'] = df.apply(validate_position, axis=1)\n\n\ndf.Validated.value_counts()\n\nValidated\n1    196126\n0      2410\nName: count, dtype: int64\n\n\n\ndf.query('Validated==0').uniprot.value_counts()\n\nuniprot\nEFTU_HUMAN     339\nDDX17_HUMAN    217\nARI1B_HUMAN    114\nANM1_HUMAN      95\nMIER1_HUMAN     87\n              ... \nPAR14_HUMAN      1\nZNF30_HUMAN      1\nRGS10_HUMAN      1\nRAB4A_HUMAN      1\nWDR81_HUMAN      1\nName: count, Length: 97, dtype: int64\n\n\nFind substrate that does not have ideal amino acid at the position\n\ninvalid = df.query('Validated==0').uniprot.value_counts().reset_index(name='count')\\\n.rename(columns={'index':'uniprot'})\\\n.merge(seq)\n\ninvalid\n\n\n\n\n\n\n\n\nuniprot\ncount\nsequence\n\n\n\n\n0\nEFTU_HUMAN\n339\nMTTMAAATLLRATPHFSGLAAGRTFLLQGLLRLLKAPALPLLCRGL...\n\n\n1\nDDX17_HUMAN\n217\nMPTGFVAPILCVLLPSPTREAATVASATGDSASERESAAPAAAPTA...\n\n\n2\nARI1B_HUMAN\n114\nMAARAAAAAAAAAARARARAGSGERRAPPGPRPAPGARDLEAGARG...\n\n\n3\nANM1_HUMAN\n95\nMAAAEAANCIMENFVATLANGMSLQPPLEEVSCGQAESSEKPNAED...\n\n\n4\nMIER1_HUMAN\n87\nMAEPSVESSSPGGSATSDDHEFDPSADMLVHDFDDERTLEEEEMME...\n\n\n...\n...\n...\n...\n\n\n92\nPAR14_HUMAN\n1\nMAVPGSFPLLVEGSWGPDPPKNLNTKLQMYFQSPKRSGGGECEVRQ...\n\n\n93\nZNF30_HUMAN\n1\nMAHKYVGLQYHGSVTFEDVAIAFSQQEWESLDSSQRGLYRDVMLEN...\n\n\n94\nRGS10_HUMAN\n1\nMFNRAVSRLSRKRPPSDIHDSDGSSSSSHQSLKSTAKWAASLENLL...\n\n\n95\nRAB4A_HUMAN\n1\nMSQTAMSETYDFLFKFLVIGNAGTGKSCLLHQFIEKKFKDDSNHTI...\n\n\n96\nWDR81_HUMAN\n1\nMAQGSGGREGALRTPAGGWHSPPSPDMQELLRSVERDLSIDPRQLA...\n\n\n\n\n97 rows × 3 columns",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#replace-the-invalidated-sequence-with-updated-sequence",
    "href": "preprocess_ls.html#replace-the-invalidated-sequence-with-updated-sequence",
    "title": "Preprocess Large-scale dataset",
    "section": "Replace the invalidated sequence with updated sequence",
    "text": "Replace the invalidated sequence with updated sequence\n\n# updated with valid sequences from old uniprot database\nupdate1 = pd.read_excel('raw/seq.xlsx')\n\n\n# full sequence\nseq = pd.read_csv('raw/large_scale_sequence.csv').drop(columns=['uniprot_updated'])\n\n\n# get a new column \"sequence_new\" that shows the updated sequence\nresult = seq.merge(update1,on='uniprot',how='left',suffixes=('', '_new'))\n\n# Where a new sequence is available, replace the old sequence\nresult['sequence'] = result['sequence_new'].combine_first(result['sequence'])\n\n# Drop the auxiliary columns\nresult = result.drop(columns=['sequence_new'])\n\nseq = result.copy()\n\n\nseq\n\n\n\n\n\n\n\n\nuniprot\nsequence\n\n\n\n\n0\n1433B_HUMAN\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n1\n1433E_HUMAN\nMDDREDLVYQAKLAEQAERYDEMVESMKKVAGMDVELTVEERNLLS...\n\n\n2\n1433F_HUMAN\nMGDREQLLQRARLAEQAERYDDMASAMKAVTELNEPLSNEDRNLLS...\n\n\n3\n1433G_HUMAN\nMVDREQLVQKARLAEQAERYDDMAAAMKNVTELNEPLSNEERNLLS...\n\n\n4\n1433S_HUMAN\nMERASLIQKAKLAEQAERYEDMAAFMKGAVEKGEELSCEERNLLSV...\n\n\n...\n...\n...\n\n\n4123\n1B42_HUMAN\nMLVMAPRTVLLLLSAALALTETWAGSHSMRYFYTSVSRPGRGEPRF...\n\n\n4124\nFA21D_HUMAN\nMRGKRRPQTRAARRLAAQESSEAEDMSVPRGPIAQWADGAISPNGH...\n\n\n4125\n1C06_HUMAN\nMRVMAPRTLILLLSGALALTETWACSHSMRYFDTAVSRPGRGEPRF...\n\n\n4126\nMPP6_HUMAN\nMQQVLENLTELPSSTGAEEIDLIFLKGIMENPIVKSLAKAHERLED...\n\n\n4127\n1C16_HUMAN\nMRVMAPRALLLLLSGGLALTETWACSHSMRYFDTAVSRPGRGEPRF...\n\n\n\n\n4128 rows × 2 columns",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#validate-again",
    "href": "preprocess_ls.html#validate-again",
    "title": "Preprocess Large-scale dataset",
    "section": "Validate again",
    "text": "Validate again\n\nimport pandas as pd\n\n\ndf = pd.read_csv('raw/Large_scale_S2.csv').rename(columns={'Substrate_uniprot':'uniprot'})\n\n\ndf = df.merge(result)\n\n\n# Extract amino acid and position from \"Position\"\ndf['phospho_receptor'] = df['Position'].str[0]\ndf['phospho_position'] = df['Position'].str[1:].astype(int)\n\n\ndef validate_position(row):\n    # Extract amino acid and position from the new columns\n    amino_acid = row['phospho_receptor']\n    position = int(row['phospho_position'])\n    \n    try:\n        # Check if the amino acid at the given position matches the specified amino acid\n        if row['sequence'][position-1] == amino_acid:\n            return 1\n        else:\n            return 0\n    except IndexError:  # Handle the case when position-1 exceeds the length of sequence\n        return 0\n\n\ndf['Validated'] = df.apply(validate_position, axis=1)\n\n\n# invalidated\ndf.query('Validated==0').shape\n\n(215, 10)\n\n\nMuch less than before (2410) !\n\ninvalid = df.query('Validated==0')\n\n\n# remove uniprot that has invalid phosphoreceptor, and drop sequence column\ndf = df[~df.uniprot.isin(invalid.uniprot)].drop(columns=['sequence'])\n\n\n# as we modify the sequence, we need to replace with new sequence\ndf = df.merge(result)\n\n\ndf\n\n\n\n\n\n\n\n\nType\nKinase\nuniprot\nPosition\nSIDIC\nPTMscore\\n(P &gt; 075)\nphospho_receptor\nphospho_position\nValidated\nsequence\n\n\n\n\n0\nTK\nABL1\n1433B_HUMAN\nS212\n1\n1\nS\n212\n1\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n1\nTK\nABL1\n1433B_HUMAN\nY151\n1\n1\nY\n151\n1\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n2\nTK\nABL1\n1433B_HUMAN\nY21\n1\n1\nY\n21\n1\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n3\nTK\nABL1\n1433B_HUMAN\nY50\n1\n1\nY\n50\n1\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n4\nTK\nABL2\n1433B_HUMAN\nY106\n1\n1\nY\n106\n1\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n198243\nLK\nSPHK2\nSPHK2_HUMAN\nT389\n1\n1\nT\n389\n1\nMNGHLEAEEQQDQRPDQELTGSWGHGPRSTLVRAKAMAPPPPPLAA...\n\n\n198244\nLK\nSPHK2\nSPHK2_HUMAN\nT402\n1\n1\nT\n402\n1\nMNGHLEAEEQQDQRPDQELTGSWGHGPRSTLVRAKAMAPPPPPLAA...\n\n\n198245\nLK\nSPHK2\nSPHK2_HUMAN\nT404\n1\n1\nT\n404\n1\nMNGHLEAEEQQDQRPDQELTGSWGHGPRSTLVRAKAMAPPPPPLAA...\n\n\n198246\nLK\nSPHK2\nSPHK2_HUMAN\nT503\n1\n1\nT\n503\n1\nMNGHLEAEEQQDQRPDQELTGSWGHGPRSTLVRAKAMAPPPPPLAA...\n\n\n198247\nLK\nSPHK2\nSPHK2_HUMAN\nT614\n1\n1\nT\n614\n1\nMNGHLEAEEQQDQRPDQELTGSWGHGPRSTLVRAKAMAPPPPPLAA...\n\n\n\n\n198248 rows × 10 columns",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#convert-substrate-sequence-to-lower-case",
    "href": "preprocess_ls.html#convert-substrate-sequence-to-lower-case",
    "title": "Preprocess Large-scale dataset",
    "section": "Convert substrate sequence to lower case",
    "text": "Convert substrate sequence to lower case\n\n# for each substrate, find their phosphorylation point\nmodify = df.groupby('uniprot').agg({'Position':lambda r: r.unique()}).reset_index()\n\n\nmodify = modify.merge(result)\n\n\nmodify\n\n\n\n\n\n\n\n\nuniprot\nPosition\nsequence\n\n\n\n\n0\n1433B_HUMAN\n[S212, Y151, Y21, Y50, Y106, Y213, S47, S39, T...\nMTMDKSELVQKAKLAEQAERYDDMAAAMKAVTEQGHELSNEERNLL...\n\n\n1\n1433E_HUMAN\n[Y152, Y20, Y49, Y214, S148, S46, Y131, Y121, ...\nMDDREDLVYQAKLAEQAERYDEMVESMKKVAGMDVELTVEERNLLS...\n\n\n2\n1433F_HUMAN\n[S215, Y154, Y20, Y49, S46, S150, Y216, S145, ...\nMGDREQLLQRARLAEQAERYDDMASAMKAVTELNEPLSNEDRNLLS...\n\n\n3\n1433G_HUMAN\n[S215, Y20, Y216, Y49, S46, S38, T31, S64, Y12...\nMVDREQLVQKARLAEQAERYDDMAAAMKNVTELNEPLSNEERNLLS...\n\n\n4\n1433S_HUMAN\n[S149, Y151, Y19, Y213, Y48, S45, S209, S37, T...\nMERASLIQKAKLAEQAERYEDMAAFMKGAVEKGEELSCEERNLLSV...\n\n\n...\n...\n...\n...\n\n\n4094\nZO1_HUMAN\n[Y1165, Y669, S1064, Y1354, Y1355, Y1066, S106...\nMSARAAAAKSTAMEETAIWEQHTVTLHRAPGFGFGIAISGGRDNPH...\n\n\n4095\nZO2_HUMAN\n[Y506, S430, Y426, Y1166]\nMPVRGDRGFPPRRELSGWLRAPGMEELIWEQYTVTLQKDSKRGFGI...\n\n\n4096\nZRAB2_HUMAN\n[S188, T100, Y167, S120, Y114, Y124, S181, S15...\nMSTKNFRVSDGDWICPDKKCGNVNFARRTSCNRCGREKTTEAKMMK...\n\n\n4097\nZW10_HUMAN\n[S605, S611]\nMASFVTEVLAHSGRLEKEDLGTRISRLTRRVEEIKGEVCNMISKKY...\n\n\n4098\nZYX_HUMAN\n[S505, S259, S267, T270]\nMAAPRPSPAISVSVSAPAFYAPQKKFGPVVAPKPKVNPFRPGDSEP...\n\n\n\n\n4099 rows × 3 columns\n\n\n\n\n# Modify sequence based on position\ndef modify_sequence(row):\n    seq = list(row['sequence'])\n    for pos in row['Position']:\n        # Extract character and position\n        char = pos[0]\n        position = int(pos[1:]) - 1  # Subtracting 1 because Python uses 0-based indexing\n        \n        # Check if the character at the position matches\n        # if seq[position] == char:\n        seq[position] = char.lower()\n    return ''.join(seq)\n\n\nmodify['sequence2'] = modify.apply(modify_sequence, axis=1)\n\n\nseq2 = modify[['uniprot','sequence2']]\n\n\n# merge with transformed sequence\ndf = df.drop(columns=['sequence']).merge(seq2)\n\n\ndf.Kinase.value_counts()\n\nKinase\nEPHA3             2101\nFES               2007\nTRKC              1926\nSRC               1896\nEPHA8             1877\n                  ... \nPKN3                 6\nSPHK1                4\nPIK3CD/PIK3R1        3\nPFTAIRE1/cycD3       2\nPRPK                 2\nName: count, Length: 385, dtype: int64",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#extract-phosphosite-sequence",
    "href": "preprocess_ls.html#extract-phosphosite-sequence",
    "title": "Preprocess Large-scale dataset",
    "section": "Extract phosphosite sequence",
    "text": "Extract phosphosite sequence\n\ndata = []\nfor i, r in df.iterrows():\n    position = r.phospho_position - 1\n    start = position - 7\n    end = position + 8\n\n    # Extract the subsequence\n    subseq = r.sequence2[max(0, start):min(len(r.sequence2), end)]\n\n    # Pad the subsequence if needed\n    if start &lt; 0:\n        subseq = \"_\" * abs(start) + subseq\n    if end &gt; len(r.sequence2):\n        subseq = subseq + \"_\" * (end - len(r.sequence2))\n    \n    data.append(subseq)\n    # break\n\n\ndf['substrate'] = data\n\n\n# check if the middle position belongs to s,t,y\ndf.substrate.str[7].value_counts()\n\nsubstrate\ny    106558\ns     63030\nt     28660\nName: count, dtype: int64\n\n\n\n# check if the middle position belongs to s,t,y\ndf.substrate.apply(len).value_counts()\n\nsubstrate\n15    198248\nName: count, dtype: int64\n\n\n\ndf.substrate.value_counts()[:10]\n\nsubstrate\nIEQEGPEyWDRNTQI    1085\nRKEsysVyVyKVLKQ     765\nSSSLEKsyELPDGQV     765\nVGMGQKDsyVGDEAQ     750\nEsysVyVyKVLKQVH     729\nTLNNKFAsFIDKVRF     708\nMWISKQEyDEsGPsI     693\nLPDGQVItIGNERFR     610\nEyDEsGPsIVHRKCF     594\nQGNRttPsyVAFtDt     556\nName: count, dtype: int64\n\n\n\ndf['KS_pairs'] = df.Kinase+\"_\"+df.uniprot.str.split('_').str[0]+\"_\"+df.Position\n\ndf['S_position'] = df.uniprot.str.split('_').str[0]+\"_\"+df.Position\n\ndf['Uniprot'] = df.uniprot.str.split('_').str[0]\n\nCheck the most frequence substrate sequence\n\ndf.query('substrate == \"RKEsysVyVyKVLKQ\"').S_position.value_counts()\n\nS_position\nH2B1C_Y41    85\nH2B1D_Y41    85\nH2B1H_Y41    85\nH2B1K_Y41    85\nH2B1L_Y41    85\nH2B1M_Y41    85\nH2B1N_Y41    85\nH2B2F_Y41    85\nH2BFS_Y41    85\nName: count, dtype: int64\n\n\nCheck if the sequences of these substrates are identical\n\nname = df.query('substrate == \"RKEsysVyVyKVLKQ\"').S_position.value_counts().index\n\ndf[df.S_position.isin(name)].sequence2.unique()\n\narray(['MPEPAKSAPAPKKGSKKAVTKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPEPTKSAPAPKKGSKKAVTKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPDPAKSAPAPKKGSKKAVTKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPEPAKSAPAPKKGSKKAVTKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSAK',\n       'MPELAKSAPAPKKGSKKAVTKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIASEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPEPVKSAPVPKKGSKKAINKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPEPSKSAPAPKKGSKKAVTKAQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPDPAKSAPAPKKGSKKAVTKVQKKDGKKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLAHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSSK',\n       'MPEPAKSAPAPKKGSKKAVTKAQKKDGRKRKRSRKEsysVyVyKVLKQVHPDTGISSKAMGIMNSFVNDIFERIAGEASRLPHYNKRSTITSREIQTAVRLLLPGELAKHAVSEGTKAVTKYTSAK'],\n      dtype=object)",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "preprocess_ls.html#save",
    "href": "preprocess_ls.html#save",
    "title": "Preprocess Large-scale dataset",
    "section": "Save",
    "text": "Save\n\ndf.shape\n\n(198248, 14)\n\n\n\n# df.to_excel('raw/large_scale_final2.xlsx',index=False)",
    "crumbs": [
      "Preprocess Large-scale dataset"
    ]
  },
  {
    "objectID": "aucdf.html",
    "href": "aucdf.html",
    "title": "Plot AUCDF",
    "section": "",
    "text": "In this notebook, we will evaluate PSSMs derived from two methods:PSPA and CDDM, using kinase-substrate datasets from PhosphoSitePlus (PSP). We will use AUCDF (Area Under Cumulative Distribution Function) to evaluate. AUCDF was previously introduced to evaluate PSSMs in the paper An atlas of substrate specificities for the human serine/threonine kinome.",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#setup",
    "href": "aucdf.html#setup",
    "title": "Plot AUCDF",
    "section": "Setup",
    "text": "Setup\n\nfrom katlas.imports import *\nimport pickle,pandas as pd, seaborn as sns\nfrom matplotlib import pyplot as plt",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#get-kinase-idx-map",
    "href": "aucdf.html#get-kinase-idx-map",
    "title": "Plot AUCDF",
    "section": "Get kinase idx map",
    "text": "Get kinase idx map\n\ninfo = Data.get_kinase_info().query('pseudo==\"0\"')\n\ninfo = info[['kinase','ID_coral','ID_HGNC']].map(lambda x: x.upper())\n\nkinase_map = {}\nfor idx, row in info.iterrows():\n    # Add each of the different kinase name formats to the map\n    kinase_map[row['ID_coral']] = row['kinase']\n    kinase_map[row['ID_HGNC']] = row['kinase']\n    # Ensure the kinase name itself is also in the map\n    kinase_map[row['kinase']] = row['kinase']\n\nkinase_map['ABL'] = 'ABL1'\nkinase_map['HER2'] = 'ERBB2'\nkinase_map['ETK'] = 'BMX'\nkinase_map['MKK6'] = 'MAP2K6'\nkinase_map['MKK4'] = 'MAP2K4'\nkinase_map['MKK3'] = 'MAP2K3'\nkinase_map['MKK7'] = 'MAP2K7'\n\nkinase_map['ARG'] = 'ABL2'\n\nUncheck below to save and load kinase_map.pkl\n\n# import pickle\n# with open('raw/kinase_map.pkl', 'wb') as file:\n#     pickle.dump(kinase_map, file)\n    \n# with open('raw/kinase_map.pkl', 'rb') as file:\n#     loaded_dict = pickle.load(file)",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#load-kinase-substrate-data-from-psp",
    "href": "aucdf.html#load-kinase-substrate-data-from-psp",
    "title": "Plot AUCDF",
    "section": "Load kinase-substrate data from PSP",
    "text": "Load kinase-substrate data from PSP\n\n# load kinase-substrate pairs from PSP\npsp = pd.read_csv('raw/PSP_Kinase_Substrate_Dataset.csv')\n\n\npsp.head()\n\n\n\n\n\n\n\n\nGENE\nKINASE\nKIN_ACC_ID\nKIN_ORGANISM\nSUBSTRATE\nSUB_GENE_ID\nSUB_ACC_ID\nSUB_GENE\nSUB_ORGANISM\nSUB_MOD_RSD\nSITE_GRP_ID\nsite_seq\nDOMAIN\nIN_VIVO_RXN\nIN_VITRO_RXN\nCST_CAT#\n\n\n\n\n0\nDyrk2\nDYRK2\nQ5U4C9\nmouse\nNDEL1\n83431.0\nQ9ERR1\nNdel1\nmouse\nS336\n1869686801\nLGSsRPSsAPGMLPL\nNaN\n\nX\nNaN\n\n\n1\nPak2\nPAK2\nQ64303\nrat\nMEK1\n170851.0\nQ01986\nMap2k1\nrat\nS298\n448284\nRtPGRPLsSYGMDSR\nPkinase\n\nX\n9128; 98195\n\n\n2\nPak2\nPAK2\nQ64303\nrat\nPRKD1\n85421.0\nQ9WTQ1\nPrkd1\nrat\nS203\n449896\nGVRRRRLsNVsLTGL\nNaN\nX\n\nNaN\n\n\n3\nPak2\nPAK2\nQ64303\nrat\nprolactin\n24683.0\nP01237\nPrl\nrat\nS206\n451732\nIRCLRRDsHKVDNYL\nHormone_1\n\nX\nNaN\n\n\n4\nPak2\nPAK2\nQ64303\nrat\nprolactin\n5617.0\nP01236\nPRL\nhuman\nS207\n451732\nLHCLRRDsHKIDNYL\nHormone_1\n\nX\nNaN\n\n\n\n\n\n\n\nAs there are some sequences in ‘site_seq’ column that do not have s/t/y at the center position, we need to remove them.\n\n# For site sequence\npsp = psp.loc[psp.site_seq.str[7].isin(list('stySTY'))]\n\nWe also notice that the kinase name in ‘KINASE’ column is not always consistent (e.g., gene name and protein name are mixed in some cases), so we need to convert the kinase name to a consistent name.\n\n# for isoform, suppose they have similar recognition pattern; drop the isoform # and take the kinase name\npsp.KINASE = psp.KINASE.str.split(' ').str[0].str.upper()\n\n# for fusion form of kinase,get the second item\npsp.KINASE = psp.KINASE.apply(lambda x: x.split('-')[1] if '-' in x else x) \n\n# map various kinase name (coral ID, gene name) to a common name\npsp['kinase'] = psp.KINASE.map(kinase_map)\n\nCheck kinase that is not mapped:\n\n# kinase not mapped\npsp[psp.kinase.isna()].KINASE.value_counts()[:10]\n\nKINASE\nCK2B      20\nVEGFR2    15\nAMPKB1    15\nUL97      14\nILK       13\nPKM       12\nPIK3CA    11\nAMPKG2    10\nCSFR      10\nVEGFR1     7\nName: count, dtype: int64\n\n\n\n# drop kinase not mapped\npsp = psp.dropna(subset='kinase')\n\n\n# drop duplicates\npsp = psp[['site_seq','kinase']].drop_duplicates()\n\n\npsp.site_seq.str[7].value_counts()\n\nsite_seq\ns    13543\nt     4349\ny     3049\nName: count, dtype: int64",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#filter-sites-and-kinase-for-pspa-scoring",
    "href": "aucdf.html#filter-sites-and-kinase-for-pspa-scoring",
    "title": "Plot AUCDF",
    "section": "Filter sites and kinase for PSPA scoring",
    "text": "Filter sites and kinase for PSPA scoring\n\nimport pandas as pd, numpy as np\nfrom tqdm import tqdm\n\n\nref_y = Data.get_pspa_tyr_norm()\n\nref_st = Data.get_pspa_st_norm()\n\n\nTK = ref_y.index.str.split('_').str[0].tolist()\nST = ref_st.index.str.split('_').str[0].tolist()\n\nWe will use two kinds of inputs for PSPA evaluation:\n\nAll capital (the official method from the Nature paper.)\nWith lowercase indicating phosphorylation status\n\n\n# filter samples, include only available kinase from the reference for scoring\ndf_st = psp[psp.kinase.isin(ref_st.index)].copy()\ndf_y = psp[psp.kinase.isin(ref_y.index)].copy()\n\n# keep ST sites\ndf_st = df_st[df_st.site_seq.str[7].isin(list('stST'))]\n\n# keep Y sites\ndf_y = df_y[df_y.site_seq.str[7].isin(list('yY'))]\n\n\ndf_st.site_seq.str[7].value_counts()\n\nsite_seq\ns    13398\nt     4287\nName: count, dtype: int64\n\n\n\ndf_y.site_seq.str[7].value_counts()\n\nsite_seq\ny    2904\nName: count, dtype: int64\n\n\n\n# convert site sequence to capital, for percentile calculation\ndf_st['site_seq_upper'] = df_st['site_seq'].str.upper()\ndf_y['site_seq_upper'] = df_y['site_seq'].str.upper()\n\n\ndf_st.head()\n\n\n\n\n\n\n\n\nsite_seq\nkinase\nsite_seq_upper\n\n\n\n\n0\nLGSsRPSsAPGMLPL\nDYRK2\nLGSSRPSSAPGMLPL\n\n\n1\nRtPGRPLsSYGMDSR\nPAK2\nRTPGRPLSSYGMDSR\n\n\n2\nGVRRRRLsNVsLTGL\nPAK2\nGVRRRRLSNVSLTGL\n\n\n3\nIRCLRRDsHKVDNYL\nPAK2\nIRCLRRDSHKVDNYL\n\n\n4\nLHCLRRDsHKIDNYL\nPAK2\nLHCLRRDSHKIDNYL",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#multiply-score",
    "href": "aucdf.html#multiply-score",
    "title": "Plot AUCDF",
    "section": "Multiply score",
    "text": "Multiply score\n\ny_param_multiply = param_PSPA_y\nst_param_multiply = param_PSPA_st\n\n\n# multiply score on all capital\nst_mul_up = predict_kinase_df(df_st,'site_seq_upper',**st_param_multiply)\n\n# multiply score on phosphorylated substrates\nst_mul_lo = predict_kinase_df(df_st,'site_seq',**st_param_multiply)\n\ninput dataframe has a length 17685\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 303/303 [00:02&lt;00:00, 135.63it/s]\n\n\ninput dataframe has a length 17685\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 303/303 [00:02&lt;00:00, 131.82it/s]\n\n\n\n# multiply score on all capital\nst_mul_up = predict_kinase_df(df_st,'site_seq_upper',**st_param_multiply)\n\n# multiply score on phosphorylated substrates\nst_mul_lo = predict_kinase_df(df_st,'site_seq',**st_param_multiply)\n\ninput dataframe has a length 17685\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 303/303 [00:02&lt;00:00, 137.92it/s]\n\n\ninput dataframe has a length 17685\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 303/303 [00:02&lt;00:00, 132.47it/s]\n\n\n\n# multiply score on all capital\ny_mul_up = predict_kinase_df(df_y,'site_seq_upper',**y_param_multiply)\n\n# multiply score on phosphorylated substrates\ny_mul_lo = predict_kinase_df(df_y,'site_seq',**y_param_multiply)\n\ninput dataframe has a length 2904\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 93/93 [00:00&lt;00:00, 319.46it/s]\n\n\ninput dataframe has a length 2904\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 93/93 [00:00&lt;00:00, 349.33it/s]\n\n\n\ndf_st\n\n\n\n\n\n\n\n\nsite_seq\nkinase\nsite_seq_upper\n\n\n\n\n0\nLGSsRPSsAPGMLPL\nDYRK2\nLGSSRPSSAPGMLPL\n\n\n1\nRtPGRPLsSYGMDSR\nPAK2\nRTPGRPLSSYGMDSR\n\n\n2\nGVRRRRLsNVsLTGL\nPAK2\nGVRRRRLSNVSLTGL\n\n\n3\nIRCLRRDsHKVDNYL\nPAK2\nIRCLRRDSHKVDNYL\n\n\n4\nLHCLRRDsHKIDNYL\nPAK2\nLHCLRRDSHKIDNYL\n\n\n...\n...\n...\n...\n\n\n23276\nQRVLDtssLtQsAPA\nULK2\nQRVLDTSSLTQSAPA\n\n\n23277\nDtssLtQsAPAsPtN\nULK2\nDTSSLTQSAPASPTN\n\n\n23278\nLAQPINFsVSLSNSH\nULK2\nLAQPINFSVSLSNSH\n\n\n23279\nESsPILTsFELVKVP\nULK2\nESSPILTSFELVKVP\n\n\n23280\nTHRRMVVsMPNLQDI\nULK2\nTHRRMVVSMPNLQDI\n\n\n\n\n17685 rows × 3 columns",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#sum-score",
    "href": "aucdf.html#sum-score",
    "title": "Plot AUCDF",
    "section": "Sum score",
    "text": "Sum score\n\ny_param_sum = {'ref':Data.get_pspa_tyr_norm(), 'func': sumup}\nst_param_sum = {'ref':Data.get_pspa_st_norm(), 'func': sumup}\n\n\n# sum score on all capital\nst_sum_up = predict_kinase_df(df_st,'site_seq_upper',**st_param_sum)\n\n# sum score on phosphorylated substrates\nst_sum_lo = predict_kinase_df(df_st,'site_seq',**st_param_sum)\n\ninput dataframe has a length 17685\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\ninput dataframe has a length 17685\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n\n# sum score on all capital\ny_sum_up = predict_kinase_df(df_y,'site_seq_upper',**y_param_sum)\n\n# sum score on phosphorylated substrates\ny_sum_lo = predict_kinase_df(df_y,'site_seq',**y_param_sum)\n\ninput dataframe has a length 2904\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\ninput dataframe has a length 2904\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#plot-differences-of-all-capital-and-phosphorylated",
    "href": "aucdf.html#plot-differences-of-all-capital-and-phosphorylated",
    "title": "Plot AUCDF",
    "section": "Plot differences of all-capital and phosphorylated",
    "text": "Plot differences of all-capital and phosphorylated\n\ndf_y['acceptor'] = df_y.site_seq_upper.str[7]\n\n\npalette = get_color_dict(['S','T','Y'],'tab20')\n\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nk = 'SYK'\nxmin,xmax = y_mul_lo[k].min()-0.1, y_mul_lo[k].max()+0.1\n\nplot_hist(y_mul_up,k,hue = df_y.acceptor,palette=palette)\nplt.title(f'{k}, without considering phospho-priming')\nplt.xlim(xmin,xmax);\n\nplot_hist(y_mul_lo,k,hue = df_y.acceptor,palette=palette)\nplt.title(f'{k}, with considering phospho-priming')\nplt.xlim(xmin,xmax);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGet score rank\n\n# get rank of multiply score for all capital\ny_rnk_mul_up = y_mul_up.rank(axis=1,ascending=False)\nst_rnk_mul_up = st_mul_up.rank(axis=1,ascending=False)\n\n# get rank of multiply score for phosphorylated\ny_rnk_mul_lo = y_mul_lo.rank(axis=1,ascending=False)\nst_rnk_mul_lo = st_mul_lo.rank(axis=1,ascending=False)\n\n\n# get rank of sum score for all capital\ny_rnk_sum_up = y_sum_up.rank(axis=1,ascending=False)\nst_rnk_sum_up = st_sum_up.rank(axis=1,ascending=False)\n\n# get rank of sum score for all capital\ny_rnk_sum_lo = y_sum_lo.rank(axis=1,ascending=False)\nst_rnk_sum_lo = st_sum_lo.rank(axis=1,ascending=False)\n\nAs the reference for percentile calculation is calculated based on all-capital sequences, we will calculate percentile score and its rank only for the uppercase one.\nFor the lowercase, it should be also noted that the phosphorylation status from PSP might not be accurate, as it includes all high-throughput phosphorylation and low-throughput phosphorylation sites.\n\n\nPercentile\nPercentile calculation, for all capital only:\n\n# get percentile based on percentile_reference\ny_pct_ref = Data.get_pspa_tyr_pct()\nst_pct_ref = Data.get_pspa_st_pct()\n\ny_pct = get_pct_df(y_mul_up,y_pct_ref)\nst_pct = get_pct_df(st_mul_up,st_pct_ref)\n\n# get percentile rank across kinases\ny_pct_rnk = y_pct.rank(axis=1,ascending=False)\nst_pct_rnk = st_pct.rank(axis=1,ascending=False)\n\n100%|██████████| 93/93 [00:00&lt;00:00, 2401.17it/s]\n100%|██████████| 303/303 [00:00&lt;00:00, 310.19it/s]\n\n\n\n\nMatch values\n\ndef match_values(df,rnk):\n    return pd.Series([rnk.at[k,v] for k,v in df.kinase.items()],index=df.index)\n\n\n# merge rank values to df\ndf_y['y_rnk_mul_up'] = match_values(df_y,y_rnk_mul_up)\ndf_y['y_rnk_mul_lo'] = match_values(df_y,y_rnk_mul_lo)\n\ndf_y['y_rnk_sum_up'] = match_values(df_y,y_rnk_sum_up)\ndf_y['y_rnk_sum_lo'] = match_values(df_y,y_rnk_sum_lo)\n\n\n# merge rank values to df\ndf_st['st_rnk_mul_up'] = match_values(df_st,st_rnk_mul_up)\ndf_st['st_rnk_mul_lo'] = match_values(df_st,st_rnk_mul_lo)\n\ndf_st['st_rnk_sum_up'] = match_values(df_st,st_rnk_sum_up)\ndf_st['st_rnk_sum_lo'] = match_values(df_st,st_rnk_sum_lo)\n\n\n# for uppercase only\ndf_y['pct'] = match_values(df_y,y_pct)\ndf_y['pct_rnk'] = match_values(df_y,y_pct_rnk)\n\ndf_st['pct'] = match_values(df_st,st_pct)\ndf_st['pct_rnk'] = match_values(df_st,st_pct_rnk)\n\n\ndf_y.head()\n\n\n\n\n\n\n\n\nsite_seq\nkinase\nsite_seq_upper\nacceptor\ny_rnk_mul_up\ny_rnk_mul_lo\ny_rnk_sum_up\ny_rnk_sum_lo\npct\npct_rnk\n\n\n\n\n1516\nKETEGQFyNYFPN__\nITK\nKETEGQFYNYFPN__\nY\n8.0\n8.0\n11.0\n11.0\n83.472\n17.5\n\n\n1517\nETLVIALyDYQTNDP\nITK\nETLVIALYDYQTNDP\nY\n25.0\n25.0\n31.0\n31.0\n39.262\n26.0\n\n\n1518\nPNEGDNDyIIPLPDP\nPDGFRB\nPNEGDNDYIIPLPDP\nY\n26.0\n26.0\n43.5\n43.5\n98.237\n15.0\n\n\n1519\nERKEVsKysDIQRsL\nPDGFRB\nERKEVSKYSDIQRSL\nY\n44.0\n63.0\n60.0\n70.0\n58.742\n36.0\n\n\n1520\nLDTSSVLyTAVQPNE\nPDGFRB\nLDTSSVLYTAVQPNE\nY\n58.0\n58.0\n71.0\n71.0\n58.524\n59.0",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#percentile-1",
    "href": "aucdf.html#percentile-1",
    "title": "Plot AUCDF",
    "section": "Percentile",
    "text": "Percentile\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\nget_AUCDF(df_y,'pct',reverse=True,xlabel='Percentile of reported kinase')\n\n\n\n\n\n\n\n\n0.613949614139531\n\n\n\nget_AUCDF(df_st,'pct',reverse=True,xlabel='Percentile of reported kinase')\n\n\n\n\n\n\n\n\n0.7996590541217666",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#percentile-rank",
    "href": "aucdf.html#percentile-rank",
    "title": "Plot AUCDF",
    "section": "Percentile rank",
    "text": "Percentile rank\n\nget_AUCDF(df_y,'pct_rnk')\n\n\n\n\n\n\n\n\n0.6021502629886102\n\n\n\nget_AUCDF(df_st,'pct_rnk')\n\n\n\n\n\n\n\n\n0.7903312239631667",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#multiply-score-on-all-capital",
    "href": "aucdf.html#multiply-score-on-all-capital",
    "title": "Plot AUCDF",
    "section": "Multiply score on all capital",
    "text": "Multiply score on all capital\n\nget_AUCDF(df_y,'y_rnk_mul_up')\n\n\n\n\n\n\n\n\n0.6240460933796205\n\n\n\nget_AUCDF(df_st,'st_rnk_mul_up')\n\n\n\n\n\n\n\n\n0.8225713446901245",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#multiply-score-on-phosphorylated",
    "href": "aucdf.html#multiply-score-on-phosphorylated",
    "title": "Plot AUCDF",
    "section": "Multiply score on phosphorylated",
    "text": "Multiply score on phosphorylated\n\nget_AUCDF(df_y,'y_rnk_mul_lo')\n\n\n\n\n\n\n\n\n0.6373005243034091\n\n\n\nget_AUCDF(df_st,'st_rnk_mul_lo')\n\n\n\n\n\n\n\n\n0.8232876176843243",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#sum-score-on-all-capital",
    "href": "aucdf.html#sum-score-on-all-capital",
    "title": "Plot AUCDF",
    "section": "Sum score on all capital",
    "text": "Sum score on all capital\n\nget_AUCDF(df_y,'y_rnk_sum_up')\n\n\n\n\n\n\n\n\n0.6115071915765649\n\n\n\nget_AUCDF(df_st,'st_rnk_sum_up')\n\n\n\n\n\n\n\n\n0.8151544558555669",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#sum-score-on-phosphorylated",
    "href": "aucdf.html#sum-score-on-phosphorylated",
    "title": "Plot AUCDF",
    "section": "Sum score on phosphorylated",
    "text": "Sum score on phosphorylated\n\nget_AUCDF(df_y,'y_rnk_sum_lo')\n\n\n\n\n\n\n\n\n0.6251077799990844\n\n\n\nget_AUCDF(df_st,'st_rnk_sum_lo')\n\n\n\n\n\n\n\n\n0.8235627655503237",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#plot-average-rank-for-each-kinase",
    "href": "aucdf.html#plot-average-rank-for-each-kinase",
    "title": "Plot AUCDF",
    "section": "Plot average rank for each kinase",
    "text": "Plot average rank for each kinase\nThe bar plot will reflect how accurate the prediction is for each kinase. The lower the y axis value is, the better.\n\ncnt_y = df_y.kinase.value_counts()\ncnt_st = df_st.kinase.value_counts()\n\n\ndf_y['count'] = df_y.kinase.map(cnt_y)\ndf_st['count'] = df_st.kinase.map(cnt_st)\n\n\ndd_y = df_y.query('count&gt;=20')\ndd_st = df_st.query('count&gt;=20')\n\n\nbar_param = {'dots':False, 'fontsize':10, 'figsize':(17,3),'ascending':True}\n\n\nplot_bar(dd_y,'y_rnk_mul_up','kinase',**bar_param)\nplt.ylabel('Rank with all capital');\n\nplot_bar(dd_y,'y_rnk_mul_lo','kinase',**bar_param)\nplt.ylabel('Rank with phosphorylation status');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nplot_bar(dd_st,'st_rnk_mul_up','kinase',**bar_param)\nplt.ylabel('Rank with all capital');\n\nplot_bar(dd_st,'st_rnk_mul_lo','kinase',**bar_param)\nplt.ylabel('Rank with phosphorylation status');\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistical analysis\n\ndd_y = dd_y.rename(columns={'y_rnk_mul_lo':'phosphorylated','y_rnk_mul_up':'all-capital'})\ndd_st = dd_st.rename(columns={'st_rnk_mul_lo':'phosphorylated','st_rnk_mul_up':'all-capital'})\n\n\nimport scipy.stats as stats\n\n\ndelta_y = dd_y.groupby('kinase')[['all-capital', 'phosphorylated']].mean()\ndelta_st = dd_st.groupby('kinase')[['all-capital', 'phosphorylated']].mean()\n\n\ndelta_y['diff'] = (delta_y['all-capital'] - delta_y['phosphorylated'])/delta_y['all-capital']\ndelta_st['diff'] = (delta_st['all-capital'] - delta_st['phosphorylated'])/delta_st['all-capital']\n\n\ndelta_y.sort_values('diff',ascending=False).head()\n\n\n\n\n\n\n\n\nall-capital\nphosphorylated\ndiff\n\n\nkinase\n\n\n\n\n\n\n\nPTK2\n30.382979\n15.170213\n0.500700\n\n\nSYK\n20.233333\n12.011111\n0.406370\n\n\nZAP70\n25.238095\n16.119048\n0.361321\n\n\nEGFR\n32.346457\n24.929134\n0.229309\n\n\nBMX\n41.250000\n31.800000\n0.229091\n\n\n\n\n\n\n\n\ndef t_test(group):\n    t_stat, p_val = stats.ttest_rel(group['all-capital'], group['phosphorylated'])\n    return pd.Series({'t-statistic': t_stat, 'p-value': p_val})\n\n\n# Apply the t-test function to each group\nttest_y = dd_y.groupby('kinase').apply(t_test)\n\nttest_st = dd_st.groupby('kinase').apply(t_test)\n\n\ny_rnk_statistics = pd.concat([delta_y,ttest_y],axis=1)\nst_rnk_statistics = pd.concat([delta_st,ttest_st],axis=1)\n\n\ny_rnk_statistics.head()\n\n\n\n\n\n\n\n\nall-capital\nphosphorylated\ndiff\nt-statistic\np-value\n\n\nkinase\n\n\n\n\n\n\n\n\n\nABL1\n27.249110\n30.587189\n-0.122502\n-4.800813\n2.575967e-06\n\n\nABL2\n26.205882\n28.352941\n-0.081930\n-1.498866\n1.434148e-01\n\n\nBMX\n41.250000\n31.800000\n0.229091\n2.516893\n2.097901e-02\n\n\nBTK\n50.185185\n50.629630\n-0.008856\n-0.676868\n5.044680e-01\n\n\nEGFR\n32.346457\n24.929134\n0.229309\n6.082135\n1.314753e-08",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#plot-all-capital-vs.-phosphorylated",
    "href": "aucdf.html#plot-all-capital-vs.-phosphorylated",
    "title": "Plot AUCDF",
    "section": "Plot all-capital vs. phosphorylated",
    "text": "Plot all-capital vs. phosphorylated\n\ndef plot_rnk(df,value_cols,group,figsize,order=None,fontsize=18,rotation=90,title=None,**kwargs):\n    # Prepare the dataframe for plotting\n    # Melt the dataframe to go from wide to long format\n    df_melted = df.melt(id_vars=group, value_vars=value_cols, var_name='Ranking', value_name='Value')\n\n    plt.figure(figsize=figsize)\n    \n    # Create the bar plot\n    sns.barplot(data=df_melted, x=group, y='Value', hue='Ranking',order=order, \n                capsize=0.1,errwidth=1.5,errcolor='gray', # adjust the error bar settings\n                **kwargs)\n    \n    # Increase font size for the x-axis and y-axis tick labels\n    plt.tick_params(axis='x', labelsize=fontsize)  # Increase x-axis label size\n    plt.tick_params(axis='y', labelsize=fontsize)  # Increase y-axis label size\n    \n    # Modify x and y label and increase font size\n    plt.xlabel('', fontsize=fontsize)\n    plt.ylabel('Rank of kinases (count≥20)', fontsize=fontsize)\n    \n    # Rotate X labels\n    plt.xticks(rotation=rotation)\n    \n    # Plot titles\n    if title is not None:\n        plt.title(title, fontsize=fontsize)\n    \n    plt.gca().spines[['right', 'top']].set_visible(False)\n    # plt.legend(title='Substrate', fontsize=fontsize-1, title_fontsize=fontsize-1)\n    plt.legend(fontsize=fontsize)\n\n\ny_order = y_rnk_statistics.sort_values('diff',ascending=False).index\nst_order = st_rnk_statistics.sort_values('diff',ascending=False).index\n\n\nplot_rnk(dd_y,['all-capital','phosphorylated'],'kinase',figsize=(24,5),order=y_order)\n\n\n\n\n\n\n\n\nFrom the graph, it seems PTK2,SYK,ZAP70,EGFR,BMX rank increased a lot when considering phosphorylation status in the calculation. These kinases are known to prefer phosphopriming.\n\nplot_rnk(dd_st,['all-capital','phosphorylated'],'kinase',figsize=(24,5),order=st_order,fontsize=14)\n\n\n\n\n\n\n\n\nFrom the graph, it seems GRK, CK2, CK1s, GSK3s rank increased a lot when considering phosphorylation status in the calculation. These kinases are known to prefer phosphopriming.",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#cddm-scoring",
    "href": "aucdf.html#cddm-scoring",
    "title": "Plot AUCDF",
    "section": "CDDM scoring",
    "text": "CDDM scoring\nAs PSSMs from CDDM contains both tyrosine kinases and Ser/Thr kinases, we need to calculate AUCDF separately for each type.\n\nset_sns()\n\n\nparam_CDDM['ref']['0Y'].hist(bins=50)\nplt.title('Distribution of 0Y ratio');\n\n\n\n\n\n\n\n\n\n# Get TK and ST kinase list\nTK = param_CDDM['ref']['0Y']&gt;0.3\nST = param_CDDM['ref']['0Y']&lt;0.7\n\nTK = TK[TK].index.tolist()\nST = ST[ST].index.tolist()\n\n\nCDDM Scoring (contains lowercase STY indicating phosphorylation status)\n\n# include only available kinase from the reference for scoring\nTK_df = psp[psp.kinase.isin(TK)].copy()\nST_df = psp[psp.kinase.isin(ST)].copy()\n\n\n# get log2(score)\nST_out = predict_kinase_df(ST_df,'site_seq',**param_CDDM)\nTK_out = predict_kinase_df(TK_df,'site_seq',**param_CDDM)\n\n# to rank, need to split TK and ST kinase columns\nST_out = ST_out[ST]\nTK_out = TK_out[TK]\n\n# get rank of score\nTK_rnk = TK_out.rank(axis=1,ascending=False)\nST_rnk = ST_out.rank(axis=1,ascending=False)\n\nTK_df['rnk']=match_values(TK_df,TK_rnk)\nST_df['rnk']=match_values(ST_df,ST_rnk)\n\ninput dataframe has a length 16799\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [00:51&lt;00:00,  5.62it/s]\n\n\ninput dataframe has a length 3009\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [00:10&lt;00:00, 27.98it/s]\n\n\n\nget_AUCDF(ST_df,'rnk')\nget_AUCDF(TK_df,'rnk')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.7136624421990068\n\n\n\n\nCDDM scoring (all capital)\n\n# convert to capital\nTK_df['site_seq_upper']=TK_df['site_seq'].str.upper()\nST_df['site_seq_upper']=ST_df['site_seq'].str.upper()\n\n# get log2(score)\nST_out_upper = predict_kinase_df(ST_df,'site_seq_upper',**param_CDDM_upper)\nTK_out_upper = predict_kinase_df(TK_df,'site_seq_upper',**param_CDDM_upper)\n\n# to rank, need to split TK and ST kinase columns\nST_out_upper = ST_out_upper[ST]\nTK_out_upper = TK_out_upper[TK]\n\n# get rank of score\nST_rnk_upper = ST_out_upper.rank(axis=1,ascending=False)\nTK_rnk_upper = TK_out_upper.rank(axis=1,ascending=False)\n\nST_df['rnk_upper']=match_values(ST_df,ST_rnk_upper)\nTK_df['rnk_upper']=match_values(TK_df,TK_rnk_upper)\n\ninput dataframe has a length 16799\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [01:06&lt;00:00,  4.36it/s]\n\n\ninput dataframe has a length 3009\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [00:06&lt;00:00, 42.56it/s]\n\n\n\nget_AUCDF(ST_df,'rnk_upper')\nget_AUCDF(TK_df,'rnk_upper')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n0.7216848757497858",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "aucdf.html#plot-rank",
    "href": "aucdf.html#plot-rank",
    "title": "Plot AUCDF",
    "section": "Plot rank",
    "text": "Plot rank\nFind the corresponding rank and map them in the kinase-substrate dataset\n\nST_cnt = ST_df.kinase.value_counts()\nTK_cnt = TK_df.kinase.value_counts()\n\nST_df['count'] = ST_df.kinase.map(ST_cnt)\nTK_df['count'] = TK_df.kinase.map(TK_cnt)\n\n\n# remove kinases that have substrate pairs less than 20\nst_v = ST_df.query('count&gt;=20')\ntk_v = TK_df.query('count&gt;=20')\n\nFor the rank value, the lower the better.\n\nplot_bar(st_v,'rnk','kinase',**bar_param)\nplt.ylabel('Rank of kinases')\n\nText(0, 0.5, 'Rank of kinases')\n\n\n\n\n\n\n\n\n\n\nplot_bar(tk_v,'rnk','kinase',**bar_param)\nplt.ylabel('Rank of kinases')\n\nText(0, 0.5, 'Rank of kinases')",
    "crumbs": [
      "Plot AUCDF"
    ]
  },
  {
    "objectID": "specificity.html",
    "href": "specificity.html",
    "title": "Overall Specificity",
    "section": "",
    "text": "import pandas as pd,seaborn as sns\nfrom katlas.core import *\nfrom katlas.plot import *\nfrom matplotlib import pyplot as plt",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#load-raw-data",
    "href": "specificity.html#load-raw-data",
    "title": "Overall Specificity",
    "section": "Load raw data",
    "text": "Load raw data\n\npspa_ST = pd.read_csv('raw/pspa_raw.csv').set_index('kinase')\n\npspa_tyr = pd.read_csv('raw/pspa_tyr_raw.csv').set_index('kinase')",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#map-pspa-tyr-kinase",
    "href": "specificity.html#map-pspa-tyr-kinase",
    "title": "Overall Specificity",
    "section": "Map pspa tyr kinase",
    "text": "Map pspa tyr kinase\nTransform protein name to gene name\n\npspa_info = pd.read_csv('raw/lew_tyr_info.csv')\n\n\npspa_info\n\n\n\n\n\n\n\n\nlew_kinase\nlew_kinase2\nkinase\ntyr\nkinase_tyr\n\n\n\n\n0\nABL\nABL\nABL1\nNaN\nABL1\n\n\n1\nACK\nACK\nTNK2\nNaN\nTNK2\n\n\n2\nALK\nALK\nALK\nNaN\nALK\n\n\n3\nARG\nARG\nABL2\nNaN\nABL2\n\n\n4\nAXL\nAXL\nAXL\nNaN\nAXL\n\n\n...\n...\n...\n...\n...\n...\n\n\n88\nVEGFR2\nVEGFR2\nKDR\nNaN\nKDR\n\n\n89\nVEGFR3\nVEGFR3\nFLT4\nNaN\nFLT4\n\n\n90\nWEE1_TYR\nWEE1\nWEE1\nTYR\nWEE1_TYR\n\n\n91\nYES\nYES\nYES1\nNaN\nYES1\n\n\n92\nZAP70\nZAP70\nZAP70\nNaN\nZAP70\n\n\n\n\n93 rows × 5 columns\n\n\n\n\nkinase_map = pspa_info.set_index('lew_kinase').kinase_tyr\n\n\n# map kinase name\npspa_tyr.index = pspa_tyr.index.map(kinase_map)\n\n\npspa_tyr.index\n\nIndex(['ABL1', 'TNK2', 'ALK', 'ABL2', 'AXL', 'BLK', 'BMPR2_TYR', 'PTK6', 'BTK',\n       'CSF1R', 'CSK', 'MATK', 'DDR1', 'DDR2', 'EGFR', 'EPHA1', 'EPHA2',\n       'EPHA3', 'EPHA4', 'EPHA5', 'EPHA6', 'EPHA7', 'EPHA8', 'EPHB1', 'EPHB2',\n       'EPHB3', 'EPHB4', 'BMX', 'PTK2', 'FER', 'FES', 'FGFR1', 'FGFR2',\n       'FGFR3', 'FGFR4', 'FGR', 'FLT3', 'FRK', 'FYN', 'HCK', 'ERBB2', 'ERBB4',\n       'IGF1R', 'INSR', 'INSRR', 'ITK', 'JAK1', 'JAK2', 'JAK3', 'KIT', 'LCK',\n       'LIMK1_TYR', 'LIMK2_TYR', 'LTK', 'LYN', 'MERTK', 'MET', 'MAP2K4_TYR',\n       'MAP2K6_TYR', 'MAP2K7_TYR', 'MST1R', 'MUSK', 'PKMYT1_TYR', 'NEK10_TYR',\n       'PDGFRA', 'PDGFRB', 'PDHK1_TYR', 'PDHK3_TYR', 'PDHK4_TYR', 'PINK1_TYR',\n       'PTK2B', 'RET', 'ROS1', 'SRC', 'SRMS', 'SYK', 'TEC', 'TESK1_TYR', 'TEK',\n       'TNK1', 'TNNI3K_TYR', 'NTRK1', 'NTRK2', 'NTRK3', 'TXK', 'TYK2', 'TYRO3',\n       'FLT1', 'KDR', 'FLT4', 'WEE1_TYR', 'YES1', 'ZAP70'],\n      dtype='object', name='kinase')",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#combine",
    "href": "specificity.html#combine",
    "title": "Overall Specificity",
    "section": "Combine",
    "text": "Combine\n\npspa_combine = pd.concat([pspa_ST,pspa_tyr]).iloc[:,:-23] # cut the 5 position of tyr as st do not have\n\n\npspa_combine\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n-3S\n-3T\n-3V\n-3I\n-3L\n-3M\n-3F\n-3Y\n-3W\n-3H\n-3K\n-3R\n-3Q\n-3N\n-3D\n-3E\n-3s\n-3t\n-3y\n-2P\n-2G\n-2A\n-2C\n-2S\n-2T\n-2V\n-2I\n-2L\n-2M\n-2F\n-2Y\n-2W\n-2H\n-2K\n-2R\n-2Q\n-2N\n-2D\n-2E\n-2s\n-2t\n-2y\n-1P\n-1G\n-1A\n-1C\n-1S\n-1T\n-1V\n-1I\n-1L\n-1M\n-1F\n-1Y\n-1W\n-1H\n-1K\n-1R\n-1Q\n-1N\n-1D\n-1E\n-1s\n-1t\n-1y\n1P\n1G\n1A\n1C\n1S\n1T\n1V\n1I\n1L\n1M\n1F\n1Y\n1W\n1H\n1K\n1R\n1Q\n1N\n1D\n1E\n1s\n1t\n1y\n2P\n2G\n2A\n2C\n2S\n2T\n2V\n2I\n2L\n2M\n2F\n2Y\n2W\n2H\n2K\n2R\n2Q\n2N\n2D\n2E\n2s\n2t\n2y\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAAK1\n7.614134e+06\n2.590563e+06\n3.001315e+06\n4.696631e+06\n4.944312e+06\n8.315838e+06\n1.005654e+07\n1.643306e+07\n1.049974e+07\n9.133578e+06\n4.493054e+06\n1.006273e+07\n3.327455e+06\n3.504743e+06\n2.767294e+06\n1.010574e+07\n5.923673e+06\n2.909153e+06\n1.695156e+06\n1.617849e+06\n2.128670e+06\n2.128670e+06\n6.460995e+06\n5.260313e+06\n6.325834e+06\n6.957994e+06\n5.369435e+06\n5.713921e+06\n6.612202e+06\n6.093662e+06\n6.120309e+06\n7.306988e+06\n6.829678e+06\n5.119222e+06\n5.263236e+06\n3.974771e+06\n5.065008e+06\n7.968511e+06\n7.041049e+06\n6.174444e+06\n4.228327e+06\n3.271231e+06\n5.511934e+06\n3.267818e+06\n3.267818e+06\n3.338570e+06\n8.921287e+06\n4.210323e+06\n9.202468e+06\n5.247518e+06\n6.741480e+06\n6.810878e+06\n5271476.43\n4928031.78\n4.337562e+06\n6.432257e+06\n4.006022e+06\n3.383022e+06\n3.493591e+06\n3.269350e+06\n4.253144e+06\n4.777087e+06\n5.719014e+06\n4.787112e+06\n2.233865e+06\n3.045337e+06\n2.489664e+06\n2.489664e+06\n2.253600e+06\n2.216029e+06\n2.766177e+06\n5.269960e+06\n5.606488e+06\n5.715777e+06\n8.442377e+06\n3330815.96\n3699660.08\n5.573758e+06\n1.141874e+07\n3289921.82\n3.904724e+06\n2.831768e+06\n5.548345e+06\n5.749699e+06\n5.431821e+06\n1.485362e+07\n7.911792e+06\n7.877661e+06\n6.228872e+06\n2.050311e+06\n2.050311e+06\n4.757609e+06\n1.274357e+07\n7922825.91\n4.320089e+06\n3.424102e+06\n2951131.47\n3.531424e+06\n4.395649e+06\n4.876362e+06\n7.337788e+06\n6213208.09\n6.110447e+06\n8.716737e+06\n4935259.96\n7.723412e+06\n1.379149e+07\n1.035962e+07\n4.456719e+06\n4.865705e+06\n1.811253e+06\n1.639403e+06\n1.357999e+06\n1.357999e+06\n2.002371e+06\n6415286.88\n99964895.25\n4.316875e+06\n3.007075e+06\n2745785.51\n8.910120e+06\n1.483692e+06\n1.412341e+06\n1.811600e+06\n1.711245e+06\n1.783236e+06\n1.979521e+06\n2.246919e+06\n2.217612e+06\n2.688448e+06\n3.450818e+06\n1.911930e+06\n2358432.64\n1421652.45\n1.359588e+06\n1.706013e+06\n1.706013e+06\n1.389642e+06\n5119157.71\n7278540.04\n7.284322e+06\n6.474715e+06\n8.229141e+06\n3.132517e+07\n5.271194e+06\n3.595811e+06\n4.019474e+06\n4.672000e+06\n4.719446e+06\n4.458959e+06\n5.560394e+06\n6.019748e+06\n5.603859e+06\n7.520621e+06\n7.492737e+06\n8.100332e+06\n5364638.21\n5087031.12\n3.976345e+06\n3.976345e+06\n3.984759e+06\n7.873215e+06\n10666925.10\n6726092.35\n8.347111e+06\n8474126.59\n36243425.13\n7.049439e+06\n4.480458e+06\n5.646461e+06\n5.049205e+06\n4.966940e+06\n6.154423e+06\n5.554385e+06\n7784625.71\n8536454.84\n10411516.21\n7199439.88\n8496115.61\n4678462.79\n4293019.55\n3871242.35\n3871242.35\n4144314.24\n6.754641e+06\n7.548893e+06\n6.945442e+06\n6.316584e+06\n5.852228e+06\n1.198637e+07\n4.544765e+06\n4.468426e+06\n4.958371e+06\n4.992757e+06\n5.630292e+06\n5.605199e+06\n8.889243e+06\n6.020663e+06\n8.938081e+06\n9.983402e+06\n6.833482e+06\n6.364453e+06\n4.189046e+06\n4921595.57\n2705053.53\n2705053.53\n2909279.71\n\n\nACVR2A\n4.991039e+06\n5.783856e+06\n7.015771e+06\n8.367603e+06\n7.072052e+06\n7.601400e+06\n7.188292e+06\n7.513916e+06\n7.159895e+06\n6.266123e+06\n7.217726e+06\n6.944710e+06\n9.655464e+06\n6.855045e+06\n6.135260e+06\n5.714942e+06\n5.174360e+06\n6.446238e+06\n1.067680e+07\n9.490371e+06\n9.417512e+06\n9.417512e+06\n9.143263e+06\n5.189501e+06\n6.115977e+06\n6.183207e+06\n8.746775e+06\n8.620216e+06\n8.958569e+06\n6.057960e+06\n5.865980e+06\n5.795429e+06\n6.425254e+06\n6.896824e+06\n6.528270e+06\n8.404648e+06\n6.144456e+06\n4.524121e+06\n5.095303e+06\n5.374812e+06\n5.585577e+06\n1.159205e+07\n9.685649e+06\n9.011965e+06\n9.011965e+06\n7.594632e+06\n5.362571e+06\n6.972104e+06\n5.730145e+06\n8.939563e+06\n8.882397e+06\n9.190427e+06\n5827104.19\n5369092.23\n5.113058e+06\n5.497993e+06\n5.506587e+06\n5.872247e+06\n6.306875e+06\n5.653091e+06\n3.785783e+06\n4.917763e+06\n5.423081e+06\n5.362812e+06\n1.121296e+07\n1.286189e+07\n1.286491e+07\n1.286491e+07\n1.040912e+07\n2.387566e+06\n3.719260e+06\n3.944903e+06\n1.306509e+07\n9.492139e+06\n8.190708e+06\n3735685.73\n3374694.08\n3.204388e+06\n2.964892e+06\n3752110.50\n3.701144e+06\n4.014811e+06\n3.625178e+06\n2.636457e+06\n3.752367e+06\n5.717786e+06\n5.027611e+06\n3.199105e+07\n3.890473e+07\n7.519771e+06\n7.519771e+06\n5.361107e+06\n3.979857e+06\n3356955.48\n4.841646e+06\n1.484390e+07\n7884721.89\n8.307355e+06\n6.504731e+06\n4.736171e+06\n7.504066e+06\n8479523.23\n6.886560e+06\n7.839785e+06\n8170003.32\n6.301557e+06\n3.133306e+06\n3.399144e+06\n5.297926e+06\n4.806449e+06\n7.245964e+06\n7.619248e+06\n8.081957e+06\n8.081957e+06\n1.066555e+07\n1962410.84\n3317170.91\n3.730968e+06\n1.044143e+07\n6905481.50\n7.758918e+06\n7.639850e+06\n6.777724e+06\n5.034766e+06\n5.741319e+06\n5.371632e+06\n5.597504e+06\n5.543419e+06\n4.036400e+06\n1.885554e+06\n2.399467e+06\n7.087499e+06\n3680225.89\n9707458.36\n1.850553e+07\n2.680623e+07\n2.680623e+07\n1.618774e+07\n5866522.32\n8056284.20\n6.653384e+06\n8.609148e+06\n6.900910e+06\n6.081477e+06\n5.928764e+06\n5.427121e+06\n4.000029e+06\n5.214510e+06\n5.833633e+06\n6.561916e+06\n5.830996e+06\n6.657870e+06\n4.773873e+06\n5.549060e+06\n5.962668e+06\n5.118947e+06\n7342349.21\n6089086.81\n6.553063e+06\n6.553063e+06\n5.205000e+06\n6.765402e+06\n5981896.69\n5346578.80\n6.919984e+06\n7959489.88\n7230276.28\n5.724909e+06\n5.600558e+06\n6.186548e+06\n5.952585e+06\n6.508513e+06\n6.613615e+06\n6.419485e+06\n5958101.56\n4666926.40\n3909037.15\n5041118.65\n5297856.53\n6281516.23\n8795439.82\n5241575.71\n5241575.71\n8237893.33\n7.993594e+06\n5.729649e+06\n5.252570e+06\n7.759900e+06\n5.847330e+06\n6.832130e+06\n5.439640e+06\n5.935277e+06\n5.396841e+06\n6.976825e+06\n5.517910e+06\n6.107147e+06\n8.435954e+06\n6.039473e+06\n5.556301e+06\n5.178735e+06\n6.490098e+06\n5.862481e+06\n6.742906e+06\n6750653.36\n7414220.16\n7414220.16\n6209576.97\n\n\nACVR2B\n2.648033e+07\n2.568969e+07\n2.813730e+07\n4.517591e+07\n3.287672e+07\n3.351696e+07\n2.701119e+07\n2.199626e+07\n2.341299e+07\n2.567058e+07\n3.002968e+07\n3.017269e+07\n3.586173e+07\n2.574340e+07\n2.146662e+07\n2.345728e+07\n2.476593e+07\n2.960038e+07\n5.294219e+07\n4.475642e+07\n3.786952e+07\n3.786952e+07\n3.692942e+07\n2.631562e+07\n3.072667e+07\n2.822669e+07\n3.812676e+07\n4.301345e+07\n4.277259e+07\n2.546188e+07\n2.249653e+07\n2.536736e+07\n2.457962e+07\n3.063236e+07\n2.981163e+07\n3.456903e+07\n2.990129e+07\n1.856668e+07\n1.805841e+07\n2.416071e+07\n2.800391e+07\n5.038351e+07\n4.287344e+07\n3.860183e+07\n3.860183e+07\n4.178142e+07\n2.158990e+07\n2.589693e+07\n2.536640e+07\n3.239116e+07\n3.926870e+07\n3.495329e+07\n24544954.48\n21195505.14\n1.995029e+07\n2.206874e+07\n2.472332e+07\n2.649370e+07\n3.046722e+07\n2.554031e+07\n1.985960e+07\n1.709886e+07\n2.606574e+07\n2.715736e+07\n5.479210e+07\n5.501460e+07\n4.908985e+07\n4.908985e+07\n6.436937e+07\n1.038309e+07\n1.462589e+07\n2.080868e+07\n4.763634e+07\n3.530416e+07\n3.796242e+07\n16548611.68\n12258162.50\n1.649462e+07\n1.420021e+07\n15925579.76\n1.632044e+07\n1.587850e+07\n2.056051e+07\n1.249803e+07\n1.395433e+07\n2.043374e+07\n2.712993e+07\n1.209644e+08\n1.577022e+08\n3.655727e+07\n3.655727e+07\n2.745861e+07\n1.581925e+07\n15139149.87\n2.134236e+07\n2.952187e+07\n25664232.00\n2.839195e+07\n2.770178e+07\n1.981812e+07\n3.667232e+07\n36335662.38\n2.687820e+07\n3.477983e+07\n41496713.73\n2.682559e+07\n1.472776e+07\n1.410475e+07\n2.151356e+07\n2.518703e+07\n3.866288e+07\n3.471438e+07\n4.933006e+07\n4.933006e+07\n4.925704e+07\n8904399.29\n14948055.42\n1.676565e+07\n4.025226e+07\n24215134.31\n3.063690e+07\n2.996006e+07\n2.465090e+07\n2.120177e+07\n2.584864e+07\n2.215540e+07\n2.495283e+07\n2.731012e+07\n2.319200e+07\n1.048079e+07\n1.053792e+07\n2.869759e+07\n20916022.30\n58048288.98\n1.103872e+08\n1.218935e+08\n1.218935e+08\n6.994578e+07\n36115383.96\n32738418.07\n2.844781e+07\n2.846730e+07\n3.062024e+07\n2.789244e+07\n2.911362e+07\n2.531559e+07\n1.774232e+07\n2.229611e+07\n2.180289e+07\n2.737951e+07\n2.451023e+07\n2.252698e+07\n1.927138e+07\n2.121534e+07\n2.208222e+07\n2.398039e+07\n34155403.55\n28198813.13\n3.838533e+07\n3.838533e+07\n2.851153e+07\n3.257098e+07\n30150790.48\n26899530.88\n3.005933e+07\n38558739.93\n36859921.47\n2.703936e+07\n2.759019e+07\n3.215902e+07\n2.853096e+07\n2.644059e+07\n3.290203e+07\n3.110638e+07\n23931820.75\n17025117.96\n21234075.57\n24959228.30\n24492089.19\n27379743.65\n34799587.30\n29745626.40\n29745626.40\n32930899.01\n3.587234e+07\n2.894266e+07\n3.263029e+07\n3.230768e+07\n2.935148e+07\n3.215859e+07\n2.758575e+07\n2.708777e+07\n2.642711e+07\n2.600846e+07\n2.400660e+07\n2.926031e+07\n3.910546e+07\n2.798420e+07\n2.249692e+07\n2.423690e+07\n2.913286e+07\n2.652739e+07\n3.638873e+07\n34729319.54\n37906081.09\n37906081.09\n31761418.56\n\n\nAKT1\n1.839951e+07\n1.810468e+07\n1.683184e+07\n1.724774e+07\n2.264728e+07\n1.780129e+07\n1.303757e+07\n1.327190e+07\n1.415649e+07\n1.540976e+07\n1.667196e+07\n1.574220e+07\n1.602750e+07\n1.990716e+07\n2.896621e+07\n4.630867e+07\n1.498802e+07\n1.425860e+07\n1.146417e+07\n1.146659e+07\n1.298722e+07\n1.298722e+07\n1.306109e+07\n1.939893e+07\n2.204418e+07\n1.906361e+07\n1.679807e+07\n2.456108e+07\n2.105365e+07\n1.613429e+07\n1.406539e+07\n1.598032e+07\n1.917523e+07\n1.565065e+07\n1.672654e+07\n2.071500e+07\n2.172773e+07\n3.938727e+07\n5.864980e+07\n1.939885e+07\n1.714231e+07\n1.209032e+07\n1.498625e+07\n1.635376e+07\n1.635376e+07\n1.475836e+07\n1.350972e+07\n1.207279e+07\n1.448511e+07\n1.314060e+07\n2.006536e+07\n1.566591e+07\n6344537.74\n6534731.06\n7.876058e+06\n7.508916e+06\n7.223255e+06\n9.468824e+06\n9.373015e+06\n2.230909e+07\n6.216923e+07\n2.418045e+08\n1.493157e+07\n8.856712e+06\n4.399326e+06\n4.368742e+06\n8.590356e+06\n8.590356e+06\n7.963766e+06\n6.789908e+06\n1.326800e+07\n2.111062e+07\n2.197163e+07\n4.133298e+07\n4.051411e+07\n9863410.69\n9269011.71\n2.289257e+07\n1.116827e+07\n11301067.87\n8.789775e+06\n7.431841e+06\n1.878957e+07\n4.890019e+07\n1.630226e+08\n1.222802e+07\n9.955364e+06\n3.198070e+06\n2.965348e+06\n7.792557e+06\n7.792557e+06\n6.120956e+06\n2.229303e+07\n28410424.95\n1.584233e+07\n1.487992e+07\n24373755.69\n1.811641e+07\n9.634837e+06\n7.220573e+06\n2.097791e+07\n24295340.44\n1.785176e+07\n2.661260e+07\n14220032.24\n2.526613e+07\n3.818571e+07\n3.752555e+07\n2.168447e+07\n3.081111e+07\n1.557435e+07\n8.290899e+06\n6.467371e+06\n6.467371e+06\n1.930039e+07\n7187402.87\n13136588.59\n9.834130e+06\n1.866756e+07\n25572492.56\n2.454095e+07\n2.793931e+07\n3.395299e+07\n2.444179e+07\n3.378535e+07\n4.623650e+07\n1.704266e+07\n2.246250e+07\n1.581214e+07\n1.705496e+07\n1.902314e+07\n2.157018e+07\n18462014.12\n5882718.69\n5.841048e+06\n9.088321e+06\n9.088321e+06\n1.147951e+07\n14699453.43\n21525508.02\n1.821118e+07\n2.359812e+07\n6.103037e+07\n4.038845e+07\n2.217929e+07\n2.044153e+07\n2.271884e+07\n1.580155e+07\n1.524072e+07\n1.832569e+07\n1.667933e+07\n3.135762e+07\n2.609526e+07\n3.910237e+07\n1.812946e+07\n2.170967e+07\n10984748.38\n7899072.12\n9.884168e+06\n9.884168e+06\n1.295170e+07\n1.977395e+07\n28710820.58\n19788527.29\n2.465938e+07\n38048939.96\n28284495.88\n1.855286e+07\n1.989256e+07\n1.959928e+07\n1.991439e+07\n2.452511e+07\n2.324808e+07\n2.285437e+07\n30978724.22\n37068344.22\n45991399.36\n22887074.13\n25185236.76\n11842652.96\n12741276.18\n13591360.01\n13591360.01\n13703183.16\n4.100723e+07\n2.647743e+07\n2.171967e+07\n2.020362e+07\n3.896130e+07\n3.227091e+07\n1.836489e+07\n1.691842e+07\n2.057025e+07\n2.022813e+07\n1.732320e+07\n1.551240e+07\n2.315157e+07\n2.951154e+07\n5.094266e+07\n4.815292e+07\n3.269388e+07\n2.889660e+07\n1.970135e+07\n13887460.52\n17483074.60\n17483074.60\n11696833.54\n\n\nAKT2\n5.439238e+06\n5.569477e+06\n5.805463e+06\n6.301076e+06\n5.004932e+06\n4.812023e+06\n3.906822e+06\n3.776845e+06\n4.450345e+06\n4.629320e+06\n4.945258e+06\n4.922328e+06\n4.818865e+06\n5.502850e+06\n8.846468e+06\n1.333189e+07\n4.466206e+06\n4.288906e+06\n2.757477e+06\n2.846855e+06\n4.120974e+06\n4.120974e+06\n4.296410e+06\n5.553405e+06\n6.777167e+06\n6.560099e+06\n6.582762e+06\n5.632446e+06\n5.626769e+06\n4.006943e+06\n3.777457e+06\n4.557922e+06\n5.073876e+06\n3.998927e+06\n4.589151e+06\n3.853566e+06\n5.877348e+06\n1.132398e+07\n1.341026e+07\n5.637101e+06\n5.224016e+06\n3.264182e+06\n3.696234e+06\n4.296297e+06\n4.296297e+06\n3.662821e+06\n2.964034e+06\n3.057508e+06\n4.553668e+06\n5.296786e+06\n4.880460e+06\n4.469909e+06\n2397056.82\n2383607.99\n2.527122e+06\n2.537479e+06\n2.505547e+06\n2.706595e+06\n2.558155e+06\n4.758159e+06\n1.664300e+07\n8.780359e+07\n4.181480e+06\n2.649826e+06\n1.856813e+06\n2.009072e+06\n3.014999e+06\n3.014999e+06\n2.786490e+06\n2.330602e+06\n3.722199e+06\n5.979231e+06\n8.974567e+06\n1.363241e+07\n1.010563e+07\n2942671.35\n2646410.48\n4.742427e+06\n2.952549e+06\n2697527.22\n2.668971e+06\n2.644657e+06\n4.975136e+06\n1.710828e+07\n3.647206e+07\n3.975190e+06\n3.308858e+06\n1.834547e+06\n1.841426e+06\n2.918462e+06\n2.918462e+06\n2.568866e+06\n6.512287e+06\n6714446.62\n5.519547e+06\n5.502392e+06\n6214686.11\n5.051604e+06\n3.036099e+06\n2.495300e+06\n4.484786e+06\n5714877.99\n4.615614e+06\n7.993743e+06\n4279316.71\n7.406520e+06\n7.869915e+06\n9.347586e+06\n6.492965e+06\n9.718326e+06\n3.850429e+06\n2.650874e+06\n2.558032e+06\n2.558032e+06\n4.818770e+06\n3390428.52\n4010009.36\n3.705137e+06\n7.307115e+06\n5708742.09\n5.610131e+06\n4.741528e+06\n5.361541e+06\n5.198120e+06\n6.335042e+06\n8.358214e+06\n4.558845e+06\n4.563970e+06\n4.449433e+06\n4.786098e+06\n5.282519e+06\n5.576834e+06\n5150662.99\n2286465.27\n2.105027e+06\n3.628510e+06\n3.628510e+06\n4.152546e+06\n4557267.80\n6705472.43\n6.335118e+06\n8.824775e+06\n1.846957e+07\n8.797708e+06\n4.532827e+06\n3.618750e+06\n4.297882e+06\n3.940765e+06\n3.314978e+06\n4.326879e+06\n3.564338e+06\n8.661598e+06\n6.560407e+06\n6.956136e+06\n4.339532e+06\n6.049277e+06\n3175814.63\n2833442.97\n5.420414e+06\n5.420414e+06\n5.570731e+06\n5.492324e+06\n6803045.82\n5712262.24\n8.338449e+06\n6916137.16\n5765528.76\n3.987390e+06\n3.310626e+06\n4.606345e+06\n3.944711e+06\n4.615744e+06\n4.760317e+06\n4.766437e+06\n7463546.47\n9581858.17\n9777288.15\n5173060.60\n4932877.74\n3157981.08\n3133584.99\n4337162.19\n4337162.19\n5399811.38\n9.707178e+06\n7.244547e+06\n5.450861e+06\n7.077129e+06\n7.739123e+06\n7.823933e+06\n3.778465e+06\n4.053743e+06\n4.346510e+06\n4.803778e+06\n4.018213e+06\n4.513237e+06\n4.161649e+06\n6.812202e+06\n1.159068e+07\n9.932526e+06\n6.544477e+06\n6.252361e+06\n3.629092e+06\n3510048.19\n5499662.30\n5499662.30\n4188620.88\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nKDR\n1.845994e+08\n1.957994e+08\n1.620357e+08\n1.425970e+08\n1.574334e+08\n1.531566e+08\n1.242434e+08\n1.222766e+08\n1.247404e+08\n1.387319e+08\n1.320501e+08\n3.212094e+08\n1.232232e+08\n1.662514e+08\n2.406540e+08\n2.325982e+08\n1.629513e+08\n1.748919e+08\n1.597018e+08\n1.573808e+08\n2.024139e+08\n2.024139e+08\n2.343784e+08\n2.093327e+08\n2.182291e+08\n1.694768e+08\n1.589847e+08\n1.400628e+08\n1.215501e+08\n1.236381e+08\n1.212599e+08\n1.288776e+08\n1.350534e+08\n1.337981e+08\n3.489371e+08\n1.621376e+08\n1.594608e+08\n1.957685e+08\n2.218688e+08\n1.832141e+08\n1.450143e+08\n1.696696e+08\n2.059610e+08\n1.797783e+08\n1.797783e+08\n3.465001e+08\n1.764191e+08\n1.798238e+08\n1.403922e+08\n1.522956e+08\n1.614405e+08\n1.624723e+08\n97116549.48\n87894050.45\n1.144018e+08\n1.073124e+08\n1.256586e+08\n2.601954e+08\n1.354943e+08\n1.562289e+08\n1.808831e+08\n1.983757e+08\n1.671430e+08\n1.890440e+08\n1.849732e+08\n1.974620e+08\n2.159131e+08\n2.159131e+08\n3.480707e+08\n1.680516e+08\n2.121389e+08\n1.482204e+08\n1.518226e+08\n1.778658e+08\n1.457419e+08\n98964002.64\n84868417.51\n1.124117e+08\n1.002724e+08\n95951357.65\n3.285036e+08\n1.022371e+08\n1.742936e+08\n1.887219e+08\n2.416173e+08\n1.851435e+08\n2.045934e+08\n1.708671e+08\n1.860065e+08\n1.767469e+08\n1.767469e+08\n3.090243e+08\n1.188183e+08\n89051272.85\n1.151995e+08\n1.159393e+08\n94696774.99\n1.213877e+08\n1.357540e+08\n1.487129e+08\n1.250131e+08\n92272369.57\n1.193200e+08\n4.440216e+08\n97288308.48\n1.935258e+08\n1.024152e+08\n1.186661e+08\n1.512899e+08\n1.921856e+08\n3.177159e+08\n2.066806e+08\n2.317617e+08\n2.317617e+08\n4.083211e+08\n87256206.00\n82746706.73\n1.152023e+08\n1.249391e+08\n96370778.31\n1.270050e+08\n2.422357e+08\n1.655861e+08\n1.438567e+08\n1.585119e+08\n2.166335e+08\n4.173761e+08\n1.769612e+08\n1.855242e+08\n1.277513e+08\n1.547331e+08\n1.722054e+08\n85832568.02\n40667663.17\n5.628033e+07\n8.607198e+07\n8.607198e+07\n2.867590e+08\n93375633.02\n61857084.06\n1.016017e+08\n1.216673e+08\n1.366118e+08\n1.369927e+08\n1.519612e+08\n1.362806e+08\n2.058174e+08\n1.577987e+08\n1.991776e+08\n2.673724e+08\n2.056605e+08\n1.274456e+08\n1.955392e+08\n2.624548e+08\n1.502404e+08\n1.654458e+08\n88813224.00\n92015520.24\n1.609418e+08\n1.609418e+08\n2.713942e+08\n1.064620e+08\n62825929.96\n73448605.22\n1.851681e+08\n80953459.85\n91255988.64\n2.235464e+08\n2.774836e+08\n3.458329e+08\n2.841824e+08\n2.982122e+08\n1.345363e+08\n1.472108e+08\n70781952.14\n63438948.91\n94692994.53\n75925157.54\n62880211.30\n42400986.98\n33264285.34\n41583473.61\n41583473.61\n54785067.47\n2.122488e+08\n1.652770e+08\n1.358981e+08\n1.498572e+08\n1.609743e+08\n1.621507e+08\n1.379373e+08\n1.202268e+08\n1.486198e+08\n1.633846e+08\n1.803211e+08\n1.225866e+08\n1.792355e+08\n1.557999e+08\n2.499706e+08\n2.622000e+08\n1.675666e+08\n1.413788e+08\n1.091009e+08\n99767688.13\n88619532.24\n88619532.24\n86228832.63\n\n\nFLT4\n9.527287e+07\n1.108087e+08\n1.018308e+08\n1.047181e+08\n1.068304e+08\n9.834637e+07\n9.014825e+07\n1.040920e+08\n9.891781e+07\n1.105403e+08\n1.302039e+08\n2.535754e+08\n1.431045e+08\n1.469079e+08\n1.256505e+08\n1.432047e+08\n1.242661e+08\n1.257643e+08\n1.202844e+08\n1.108484e+08\n1.137919e+08\n1.137919e+08\n1.233803e+08\n1.006505e+08\n1.063429e+08\n1.073346e+08\n1.102806e+08\n9.273107e+07\n8.137801e+07\n9.285344e+07\n8.773211e+07\n1.020419e+08\n9.208616e+07\n1.250498e+08\n2.314315e+08\n1.770868e+08\n1.185848e+08\n1.091383e+08\n1.257240e+08\n1.192239e+08\n9.857048e+07\n1.158219e+08\n1.273432e+08\n1.135650e+08\n1.135650e+08\n1.419767e+08\n8.383172e+07\n9.303058e+07\n8.376291e+07\n1.088769e+08\n1.142799e+08\n1.054061e+08\n74624848.46\n77892681.57\n8.858186e+07\n8.942262e+07\n1.088996e+08\n1.685240e+08\n1.075460e+08\n1.210646e+08\n1.010023e+08\n1.139494e+08\n1.166737e+08\n1.294503e+08\n1.362060e+08\n1.405987e+08\n1.184014e+08\n1.184014e+08\n1.448507e+08\n9.920510e+07\n9.956644e+07\n9.223786e+07\n1.008186e+08\n1.135684e+08\n9.434233e+07\n80387170.27\n86557385.12\n9.314699e+07\n1.009508e+08\n78519178.46\n2.038745e+08\n9.396798e+07\n1.220643e+08\n9.664937e+07\n1.225922e+08\n1.216018e+08\n1.264343e+08\n1.309542e+08\n1.367723e+08\n1.017378e+08\n1.017378e+08\n1.303649e+08\n5.552047e+07\n46822983.26\n6.073501e+07\n7.467692e+07\n62586752.98\n7.544506e+07\n8.490972e+07\n9.952870e+07\n7.105435e+07\n62340565.83\n1.038976e+08\n3.415294e+08\n67190188.21\n1.180385e+08\n4.183557e+07\n4.828306e+07\n1.092799e+08\n1.522379e+08\n2.699608e+08\n1.840926e+08\n1.395679e+08\n1.395679e+08\n3.009675e+08\n48307484.74\n29729503.87\n5.531971e+07\n7.234901e+07\n50659803.65\n7.615618e+07\n1.794495e+08\n1.433742e+08\n8.980624e+07\n8.620633e+07\n1.853386e+08\n3.033752e+08\n1.509153e+08\n9.156575e+07\n5.443460e+07\n6.212801e+07\n1.054484e+08\n45167113.31\n31089503.64\n3.793244e+07\n6.239648e+07\n6.239648e+07\n2.123985e+08\n45499258.91\n32062870.69\n5.067143e+07\n7.470231e+07\n6.613714e+07\n8.649376e+07\n9.429418e+07\n9.823639e+07\n1.313531e+08\n1.030058e+08\n1.522009e+08\n2.170597e+08\n2.515437e+08\n1.011415e+08\n8.351873e+07\n1.260408e+08\n8.660960e+07\n8.692776e+07\n62531758.10\n81757111.18\n1.324287e+08\n1.324287e+08\n2.862477e+08\n5.387717e+07\n65263004.12\n43998774.09\n8.973695e+07\n46378007.47\n65948151.74\n1.282258e+08\n1.664552e+08\n1.924253e+08\n1.811333e+08\n2.825176e+08\n9.225860e+07\n1.189017e+08\n54475523.79\n36221303.85\n50714552.25\n54072557.92\n35599201.38\n38790459.40\n33489880.18\n47725114.43\n47725114.43\n59598202.96\n1.211344e+08\n1.045894e+08\n7.782042e+07\n9.473629e+07\n9.558070e+07\n8.808094e+07\n7.800558e+07\n7.513335e+07\n8.895855e+07\n1.017871e+08\n1.115061e+08\n9.370596e+07\n1.353061e+08\n1.383617e+08\n1.209482e+08\n1.419939e+08\n1.131221e+08\n9.016833e+07\n9.482552e+07\n92947714.00\n83142327.88\n83142327.88\n93502673.43\n\n\nWEE1_TYR\n4.876443e+06\n5.871573e+06\n5.126751e+06\n4.908054e+06\n3.972485e+06\n3.994803e+06\n5.210680e+06\n5.241236e+06\n5.842673e+06\n5.156345e+06\n5.821810e+06\n8.696807e+06\n7.004115e+06\n3.886012e+06\n5.605546e+06\n5.857112e+06\n4.488515e+06\n4.444629e+06\n4.879367e+06\n4.494150e+06\n5.391370e+06\n5.391370e+06\n6.383847e+06\n5.814988e+06\n7.229796e+06\n5.408739e+06\n6.297107e+06\n3.957267e+06\n4.032790e+06\n5.299856e+06\n7.055887e+06\n6.131435e+06\n5.706786e+06\n6.592508e+06\n1.075552e+07\n6.892924e+06\n4.726814e+06\n5.759139e+06\n8.598406e+06\n5.518253e+06\n4.362253e+06\n4.957419e+06\n7.124850e+06\n5.238178e+06\n5.238178e+06\n7.799524e+06\n4.311982e+06\n4.544266e+06\n3.512244e+06\n3.772531e+06\n3.971352e+06\n3.798543e+06\n4828316.91\n5347044.88\n4.762746e+06\n4.560338e+06\n5.405338e+06\n7.004498e+06\n5.238221e+06\n3.217830e+06\n4.738488e+06\n5.190623e+06\n2.973037e+06\n3.512958e+06\n3.636841e+06\n3.875281e+06\n5.588615e+06\n5.588615e+06\n7.562031e+06\n4.466259e+06\n8.208144e+06\n4.720987e+06\n5.154941e+06\n9.448901e+06\n6.486036e+06\n4910417.32\n5012522.04\n4.603682e+06\n3.938797e+06\n4609456.85\n8.109969e+06\n4.767304e+06\n4.520230e+06\n5.516719e+06\n8.177096e+06\n3.896482e+06\n5.313795e+06\n3.152875e+06\n3.945017e+06\n5.966684e+06\n5.966684e+06\n7.340191e+06\n2.549929e+06\n2346751.23\n2.437080e+06\n3.414921e+06\n2274245.53\n2.153022e+06\n3.751801e+06\n3.882228e+06\n5.446256e+06\n4074361.02\n7.610095e+06\n1.013603e+07\n3964860.83\n3.526344e+06\n3.148331e+06\n3.302942e+06\n1.908456e+06\n4.904408e+06\n2.097801e+06\n1.581509e+06\n2.931072e+06\n2.931072e+06\n2.440787e+07\n2645011.91\n4566742.82\n2.807901e+06\n3.480600e+06\n2791747.97\n2.905426e+06\n3.622323e+06\n4.436105e+06\n3.603958e+06\n3.944843e+06\n4.409288e+06\n1.175407e+07\n3.995985e+06\n3.266891e+06\n6.350836e+06\n1.847695e+07\n4.035590e+06\n4209748.11\n1563572.88\n1.967721e+06\n4.312955e+06\n4.312955e+06\n4.701977e+06\n2286548.56\n2842024.50\n2.801326e+06\n3.496991e+06\n3.865210e+06\n3.116179e+06\n3.750411e+06\n4.155538e+06\n3.767856e+06\n4.125346e+06\n5.289154e+06\n6.063396e+06\n5.469000e+06\n2.733519e+06\n7.570371e+06\n9.469932e+06\n3.413686e+06\n3.487883e+06\n1743381.33\n1889036.23\n3.091826e+06\n3.091826e+06\n4.187263e+06\n3.285147e+06\n4005935.68\n2878185.59\n4.897422e+06\n3808906.86\n3382221.05\n4.799403e+06\n6.171617e+06\n4.162197e+06\n4.760300e+06\n5.001929e+06\n6.524175e+06\n4.625505e+06\n4799746.41\n11089123.17\n17762952.56\n3987265.34\n3817935.02\n2192702.44\n2397048.38\n3014291.42\n3014291.42\n3627261.67\n3.218481e+06\n3.911377e+06\n3.442698e+06\n4.108626e+06\n4.145691e+06\n3.674678e+06\n3.186256e+06\n3.315947e+06\n3.193508e+06\n4.717188e+06\n3.464837e+06\n4.113069e+06\n5.223508e+06\n3.936281e+06\n8.499614e+06\n9.559533e+06\n4.159084e+06\n3.232722e+06\n2.564364e+06\n2958838.67\n2848258.50\n2848258.50\n3540779.21\n\n\nYES1\n4.388800e+07\n3.701994e+07\n3.481183e+07\n3.092071e+07\n3.417660e+07\n3.269791e+07\n2.818378e+07\n2.430711e+07\n2.589843e+07\n3.001820e+07\n3.098741e+07\n7.225892e+07\n2.717705e+07\n3.656928e+07\n4.411553e+07\n4.190382e+07\n3.952476e+07\n4.870355e+07\n4.847165e+07\n3.954898e+07\n4.223318e+07\n4.223318e+07\n4.330762e+07\n3.871600e+07\n4.307422e+07\n3.249909e+07\n2.954765e+07\n2.915008e+07\n2.504897e+07\n2.950539e+07\n2.581442e+07\n3.276242e+07\n3.278300e+07\n2.518636e+07\n6.846428e+07\n2.626186e+07\n3.509659e+07\n3.405138e+07\n3.474894e+07\n3.761577e+07\n3.466141e+07\n4.874814e+07\n5.422012e+07\n3.696111e+07\n3.696111e+07\n4.370227e+07\n3.430529e+07\n3.527904e+07\n2.773809e+07\n3.129215e+07\n3.653163e+07\n2.911044e+07\n18863566.65\n18870762.51\n2.231184e+07\n2.498938e+07\n2.680747e+07\n9.774771e+07\n3.305079e+07\n3.487628e+07\n2.354907e+07\n2.568350e+07\n3.872871e+07\n4.690893e+07\n5.742351e+07\n7.298088e+07\n3.822835e+07\n3.822835e+07\n4.001387e+07\n4.153055e+07\n3.516956e+07\n3.125919e+07\n3.022024e+07\n4.150052e+07\n3.066189e+07\n20993603.39\n17744895.01\n2.151818e+07\n2.303727e+07\n18054015.23\n4.098795e+07\n2.184199e+07\n4.026645e+07\n2.763980e+07\n3.009290e+07\n3.726356e+07\n4.439083e+07\n4.266481e+07\n4.454552e+07\n3.470207e+07\n3.470207e+07\n3.822795e+07\n2.962915e+07\n12982072.83\n1.331777e+07\n1.301074e+07\n11826901.63\n3.448698e+07\n5.152390e+07\n7.122018e+07\n3.906559e+07\n22242818.10\n1.488054e+07\n3.592302e+07\n17496588.38\n1.673862e+07\n1.068810e+07\n9.109077e+06\n1.190166e+07\n1.057250e+07\n1.462966e+07\n1.871160e+07\n2.442721e+07\n2.442721e+07\n1.840133e+07\n12307440.08\n75474764.65\n4.227679e+07\n2.417023e+07\n30147674.19\n2.885262e+07\n2.375704e+07\n1.568923e+07\n1.585931e+07\n2.961819e+07\n1.925453e+07\n3.061024e+07\n4.110035e+07\n2.131285e+07\n1.114286e+07\n1.432213e+07\n2.389115e+07\n17139000.66\n21876801.89\n3.521984e+07\n3.219329e+07\n3.219329e+07\n5.872647e+07\n20129956.79\n20863777.95\n2.984062e+07\n2.479669e+07\n3.613492e+07\n4.003520e+07\n3.617003e+07\n3.200356e+07\n2.996492e+07\n3.308997e+07\n3.008884e+07\n4.279914e+07\n2.266066e+07\n1.973580e+07\n2.003712e+07\n2.643394e+07\n2.790915e+07\n2.198168e+07\n17668186.60\n35472597.75\n3.687711e+07\n3.687711e+07\n3.447247e+07\n1.489388e+07\n19208725.20\n17869773.24\n2.081944e+07\n19330414.01\n26115657.86\n3.933501e+07\n4.381334e+07\n4.191676e+07\n2.900706e+07\n8.135996e+07\n7.895329e+07\n4.802747e+07\n28834890.52\n15886947.68\n26265507.49\n17225935.88\n18902690.14\n14169689.03\n15724328.22\n14310277.23\n14310277.23\n18314094.58\n2.295632e+07\n2.948489e+07\n2.440241e+07\n3.538887e+07\n2.743227e+07\n2.953307e+07\n2.461687e+07\n2.378259e+07\n2.531245e+07\n3.765723e+07\n3.625260e+07\n3.659640e+07\n3.258638e+07\n3.278408e+07\n3.088992e+07\n3.984858e+07\n3.431597e+07\n2.627859e+07\n2.217816e+07\n25878925.56\n19507805.80\n19507805.80\n24576787.03\n\n\nZAP70\n3.479007e+07\n5.089375e+07\n3.604176e+07\n3.698927e+07\n2.720694e+07\n2.970104e+07\n2.687712e+07\n2.196685e+07\n1.775315e+07\n3.041197e+07\n2.771184e+07\n5.883724e+07\n2.006319e+07\n3.704433e+07\n2.720444e+07\n2.613975e+07\n2.844293e+07\n4.062089e+07\n5.030325e+07\n4.489984e+07\n9.376309e+07\n9.376309e+07\n6.983973e+07\n5.147896e+07\n4.173963e+07\n4.557217e+07\n3.782565e+07\n2.568037e+07\n1.934137e+07\n1.978773e+07\n1.643291e+07\n1.671232e+07\n1.810531e+07\n1.446109e+07\n4.825036e+07\n1.829595e+07\n2.499168e+07\n1.782960e+07\n2.003822e+07\n3.011578e+07\n2.407158e+07\n4.895978e+07\n7.337738e+07\n7.543967e+07\n7.543967e+07\n8.880339e+07\n2.702740e+07\n2.804445e+07\n2.469433e+07\n3.448179e+07\n3.465973e+07\n2.465622e+07\n17009918.51\n15005688.07\n1.426882e+07\n1.379747e+07\n1.575808e+07\n5.686548e+07\n1.819765e+07\n2.163889e+07\n1.628310e+07\n1.819147e+07\n2.574102e+07\n3.899722e+07\n5.211884e+07\n5.347352e+07\n1.147688e+08\n1.147688e+08\n1.099977e+08\n1.965619e+07\n3.622705e+07\n2.090029e+07\n3.062898e+07\n3.239786e+07\n2.937801e+07\n16135929.72\n9616165.56\n1.081683e+07\n1.473991e+07\n11458833.09\n4.740347e+07\n1.080063e+07\n2.330673e+07\n1.464370e+07\n1.340711e+07\n3.392046e+07\n3.543117e+07\n3.510205e+07\n5.104344e+07\n9.830557e+07\n9.830557e+07\n8.429801e+07\n1.020147e+07\n12805905.03\n1.714053e+07\n2.463400e+07\n15444852.89\n1.793451e+07\n1.374336e+07\n1.642528e+07\n1.368027e+07\n11523548.37\n9.936240e+06\n5.806872e+07\n9847734.79\n1.624087e+07\n8.526765e+06\n6.874230e+06\n1.644832e+07\n2.055236e+07\n5.827398e+07\n3.356433e+07\n1.131096e+08\n1.131096e+08\n2.805097e+08\n5150115.57\n7904296.55\n1.747502e+07\n2.553542e+07\n16107605.30\n2.143970e+07\n2.570193e+07\n1.262578e+07\n1.250667e+07\n1.593116e+07\n2.456814e+07\n5.006683e+07\n3.373409e+07\n2.179051e+07\n9.079338e+06\n7.361703e+06\n2.302828e+07\n10432974.78\n9634651.04\n2.115807e+07\n2.880897e+07\n2.880897e+07\n2.435354e+08\n19240725.01\n10605012.03\n1.599354e+07\n1.659459e+07\n1.679256e+07\n2.107296e+07\n1.927703e+07\n1.410325e+07\n1.849459e+07\n1.611687e+07\n2.337036e+07\n3.643179e+07\n5.260776e+07\n1.506519e+07\n1.580775e+07\n1.500818e+07\n2.219572e+07\n1.973623e+07\n14062208.30\n21100501.01\n4.264821e+07\n4.264821e+07\n5.097307e+07\n5.028049e+07\n16194823.09\n18523719.84\n2.481554e+07\n20950947.73\n15050336.77\n2.979601e+07\n2.144306e+07\n1.839510e+07\n3.816655e+07\n1.778492e+07\n3.066108e+07\n3.039690e+07\n18213790.50\n7484113.68\n8317140.76\n12044214.04\n9595410.26\n8345465.51\n5280276.61\n6996614.41\n6996614.41\n9647949.46\n2.827068e+07\n1.811919e+07\n1.410497e+07\n1.926840e+07\n1.675929e+07\n1.523420e+07\n1.446941e+07\n8.742151e+06\n1.219322e+07\n1.591530e+07\n1.128030e+07\n1.073606e+07\n1.547527e+07\n1.927306e+07\n1.613359e+07\n1.601645e+07\n2.046052e+07\n1.166506e+07\n1.714012e+07\n16040747.79\n12641195.81\n12641195.81\n9148528.89\n\n\n\n\n396 rows × 207 columns",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#scale-each-position-to-1",
    "href": "specificity.html#scale-each-position-to-1",
    "title": "Overall Specificity",
    "section": "Scale each position to 1",
    "text": "Scale each position to 1\n\ndata= []\nfor kinase in pspa_combine.index:\n    m = get_one_kinase(pspa_combine,kinase).T # It will drop s as it is a duplicate of t\n    norm = m/m.sum()\n    data.append(norm.unstack().values)\n    \n# Get column name\ncol = norm.unstack().reset_index()\ncol['Position'] = col['position'].astype(str) + col['aa']\n\n# Get the stacked normalize data\nnorm = pd.DataFrame(data,columns=col['Position'].tolist(),index=pspa_combine.index)",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#check",
    "href": "specificity.html#check",
    "title": "Overall Specificity",
    "section": "Check",
    "text": "Check\nMake sure it is one for each kinase\n\nm = get_one_kinase(norm,kinase,drop_s=False).T\n\n\nm.sum()\n\nposition\n-5    1.0\n-4    1.0\n-3    1.0\n-2    1.0\n-1    1.0\n 1    1.0\n 2    1.0\n 3    1.0\n 4    1.0\ndtype: float64",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#get-specificity-score",
    "href": "specificity.html#get-specificity-score",
    "title": "Overall Specificity",
    "section": "Get specificity score",
    "text": "Get specificity score\n\nspeci = pd.DataFrame(norm.max(1),columns=['speci']).reset_index()\n\n\ninfo=Data.get_kinase_info().query('pseudo==\"0\"')\n\n\ninfo = info[['kinase','group']]\n\n\nspeci = speci.merge(info,how='left')\n\n\nspeci\n\n\n\n\n\n\n\n\nkinase\nspeci\ngroup\n\n\n\n\n0\nAAK1\n0.639600\nOther\n\n\n1\nACVR2A\n0.228739\nTKL\n\n\n2\nACVR2B\n0.221615\nTKL\n\n\n3\nAKT1\n0.466208\nAGC\n\n\n4\nAKT2\n0.520962\nAGC\n\n\n...\n...\n...\n...\n\n\n391\nKDR\n0.124571\nTK\n\n\n392\nFLT4\n0.145792\nTK\n\n\n393\nWEE1_TYR\n0.239644\nNaN\n\n\n394\nYES1\n0.141651\nTK\n\n\n395\nZAP70\n0.378409\nTK\n\n\n\n\n396 rows × 3 columns\n\n\n\n\n# unmapped are dual specific kinase with tyr tested \nspeci[speci.group.isna()]\n\n\n\n\n\n\n\n\nkinase\nspeci\ngroup\n\n\n\n\n309\nBMPR2_TYR\n0.134159\nNaN\n\n\n354\nLIMK1_TYR\n0.111245\nNaN\n\n\n355\nLIMK2_TYR\n0.094722\nNaN\n\n\n360\nMAP2K4_TYR\n0.090374\nNaN\n\n\n361\nMAP2K6_TYR\n0.078441\nNaN\n\n\n362\nMAP2K7_TYR\n0.096297\nNaN\n\n\n365\nPKMYT1_TYR\n0.091303\nNaN\n\n\n366\nNEK10_TYR\n0.154401\nNaN\n\n\n369\nPDHK1_TYR\n0.082651\nNaN\n\n\n370\nPDHK3_TYR\n0.079051\nNaN\n\n\n371\nPDHK4_TYR\n0.077827\nNaN\n\n\n372\nPINK1_TYR\n0.139151\nNaN\n\n\n380\nTESK1_TYR\n0.079315\nNaN\n\n\n383\nTNNI3K_TYR\n0.139203\nNaN\n\n\n393\nWEE1_TYR\n0.239644\nNaN\n\n\n\n\n\n\n\n\nspeci.group = speci.group.fillna('Dual')",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#plot",
    "href": "specificity.html#plot",
    "title": "Overall Specificity",
    "section": "Plot",
    "text": "Plot\n\nsort_pspa = speci.sort_values('speci',ascending=False)\nsort_pspa\n\n\n\n\n\n\n\n\nkinase\nspeci\ngroup\n\n\n\n\n69\nCK1G3\n0.819808\nCK1\n\n\n63\nCK1A\n0.791040\nCK1\n\n\n299\nYANK3\n0.756693\nAGC\n\n\n110\nGSK3B\n0.744287\nCMGC\n\n\n298\nYANK2\n0.739325\nAGC\n\n\n...\n...\n...\n...\n\n\n369\nPDHK1_TYR\n0.082651\nDual\n\n\n380\nTESK1_TYR\n0.079315\nDual\n\n\n370\nPDHK3_TYR\n0.079051\nDual\n\n\n361\nMAP2K6_TYR\n0.078441\nDual\n\n\n371\nPDHK4_TYR\n0.077827\nDual\n\n\n\n\n396 rows × 3 columns\n\n\n\n\nfrom fastcore.xtras import load_pickle\n\n\nkinase_color = load_pickle('raw/kinase_color.pkl')\n\n\nkinase_color\n\n{'TK': (0.12156862745098039, 0.4666666666666667, 0.7058823529411765),\n 'AGC': (0.6823529411764706, 0.7803921568627451, 0.9098039215686274),\n 'CMGC': (1.0, 0.4980392156862745, 0.054901960784313725),\n 'Other': (1.0, 0.7333333333333333, 0.47058823529411764),\n 'TKL': (0.17254901960784313, 0.6274509803921569, 0.17254901960784313),\n 'STE': (0.596078431372549, 0.8745098039215686, 0.5411764705882353),\n 'CK1': (0.8392156862745098, 0.15294117647058825, 0.1568627450980392),\n 'CAMK': (1.0, 0.596078431372549, 0.5882352941176471),\n 'Atypical': (0.5803921568627451, 0.403921568627451, 0.7411764705882353),\n 'RGC': (0.7725490196078432, 0.6901960784313725, 0.8352941176470589)}\n\n\n\nkinase_color['Dual'] =(0.5, 0.5, 0.5) # add gray\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nplot_rank(sort_pspa,x='kinase',y='speci',hue='group',palette=kinase_color)\nplt.ylabel('Specificity based on PSPA')\nplt.xlabel('Kinase');\n\n\n\n\n\n\n\n\n\nplot_bar(sort_pspa,'speci','group',palette=kinase_color,figsize=(10,5))\nplt.ylabel('Specificity');\n\n/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/katlas/plot.py:406: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(data=df, x=group, y=value, order=idx, **kwargs)",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "specificity.html#plot-for-cddm",
    "href": "specificity.html#plot-for-cddm",
    "title": "Overall Specificity",
    "section": "plot for CDDM",
    "text": "plot for CDDM\n\nks = Data.get_cddm().iloc[:,:-6]\n\n\n# ks = pd.read_excel('raw/freq_main.xlsx',index_col = 0)\n\nks = ks.max(1).reset_index(name='speci')\n\nks = ks.rename(columns={'index':'kinase'})\n\nsort_ks = ks.sort_values('speci',ascending=False).reset_index(drop=True)\n\n# sort_ks.to_csv('raw/specificity_ks.csv',index=False)\n\nsort_ks =sort_ks.merge(info)\n\n\nplot_rank(sort_ks,x='kinase',y='speci',hue='group',palette=kinase_color)\nplt.ylabel('Specificity based on kinase-substrate dataset')\nplt.xlabel('Kinase');\n\n\n\n\n\n\n\n\n\nplot_bar(sort_ks,'speci','group',palette=kinase_color,figsize=(10,5))\nplt.ylabel('Specificity');\n\n/home/zeus/miniconda3/envs/cloudspace/lib/python3.10/site-packages/katlas/plot.py:406: FutureWarning: \n\nPassing `palette` without assigning `hue` is deprecated and will be removed in v0.14.0. Assign the `x` variable to `hue` and set `legend=False` for the same effect.\n\n  sns.barplot(data=df, x=group, y=value, order=idx, **kwargs)\n\n\n\n\n\n\n\n\n\n\noverlap = sort_ks[sort_ks.kinase.isin(sort_pspa.kinase)]\n\noverlap = overlap.rename(columns = {'speci':'ks_speci'})\n\noverlap = overlap.merge(sort_pspa.iloc[:,:2],'left')\n\noverlap = overlap.rename(columns = {'speci':'PSPA_speci'})\n\n\nupper_left = overlap.query('ks_speci&lt;0.5 & PSPA_speci&gt;0.6')\n\nlower_right = overlap.query('ks_speci&gt;0.8 & PSPA_speci&lt;0.5')\n\n\noverlap=overlap.merge(info)\n\n\nfrom adjustText import adjust_text\n\n\nplt.figure(figsize=(7,5))\nplot_corr(x=overlap.ks_speci, y = overlap.PSPA_speci)\nplt.ylabel('Specificity based on PSPA')\nplt.xlabel('Specificity based on kinase-substrate dataset')\n# n = 20\ntexts = []\nfor i, row in upper_left.iterrows():\n    texts.append(plt.text(row['ks_speci'], row['PSPA_speci'], row['kinase'], ha='center', va='bottom'))\n    \nfor i, row in lower_right.iterrows():\n    texts.append(plt.text(row['ks_speci'], row['PSPA_speci'], row['kinase'], ha='center', va='bottom'))\n    \n# Use adjustText to adjust text positions\nadjust_text(texts, arrowprops=dict(arrowstyle='-', color='black'))\n\nplt.tight_layout()",
    "crumbs": [
      "Overall Specificity"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html",
    "href": "hierarchical_clustering.html",
    "title": "Hierarchical clustering",
    "section": "",
    "text": "import pandas as pd, numpy as np, seaborn as sns, matplotlib.pyplot as plt\n\nfrom katlas.core import *\nfrom katlas.feature import *\nfrom katlas.plot import *\n\nfrom scipy.cluster.hierarchy import linkage, dendrogram, to_tree,fcluster\n\nfrom Bio import Phylo\nfrom io import StringIO",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#setup",
    "href": "hierarchical_clustering.html#setup",
    "title": "Hierarchical clustering",
    "section": "",
    "text": "import pandas as pd, numpy as np, seaborn as sns, matplotlib.pyplot as plt\n\nfrom katlas.core import *\nfrom katlas.feature import *\nfrom katlas.plot import *\n\nfrom scipy.cluster.hierarchy import linkage, dendrogram, to_tree,fcluster\n\nfrom Bio import Phylo\nfrom io import StringIO",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#data",
    "href": "hierarchical_clustering.html#data",
    "title": "Hierarchical clustering",
    "section": "Data",
    "text": "Data\n\ndf = Data.get_cddm().iloc[:,:-3]\n\n\ntyr = (df['0y']&gt;0.7).index\n\n\n# Ward method to calculate linkage matrix\nZ = linkage(df, method='ward')\n\n\nZ\n\narray([[1.20000000e+01, 1.70000000e+01, 8.16324973e-02, 2.00000000e+00],\n       [1.50000000e+01, 2.89000000e+02, 8.70342690e-02, 3.00000000e+00],\n       [2.00000000e+00, 1.60000000e+01, 8.89836215e-02, 2.00000000e+00],\n       ...,\n       [5.69000000e+02, 5.73000000e+02, 4.49856709e+00, 1.67000000e+02],\n       [5.65000000e+02, 5.74000000e+02, 4.58327062e+00, 2.09000000e+02],\n       [5.66000000e+02, 5.75000000e+02, 1.20398599e+01, 2.89000000e+02]])",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#plot-dendrogram",
    "href": "hierarchical_clustering.html#plot-dendrogram",
    "title": "Hierarchical clustering",
    "section": "Plot dendrogram",
    "text": "Plot dendrogram\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nplt.figure(figsize=(4,50))\ndendrogram(Z,orientation='left',leaf_font_size=10,labels=df.index,color_threshold=0.6)\nplt.title('Hierarchical Clustering Dendrogram')\n# plt.xlabel('Sample index')\nplt.ylabel('Distance')\nplt.show()",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#save-tree",
    "href": "hierarchical_clustering.html#save-tree",
    "title": "Hierarchical clustering",
    "section": "Save Tree",
    "text": "Save Tree\n\ndef get_newick(node, parent_dist, leaf_names, newick='') -&gt; str:\n    \"\"\"\n    Convert sciply.cluster.hierarchy.to_tree()-output to Newick format.\n    Referenced from: https://stackoverflow.com/questions/28222179/save-dendrogram-to-newick-format\n    \n    :param node: output of sciply.cluster.hierarchy.to_tree()\n    :param parent_dist: output of sciply.cluster.hierarchy.to_tree().dist\n    :param leaf_names: list of leaf names\n    :param newick: leave empty, this variable is used in recursion.\n    :returns: tree in Newick format\n    \n    \"\"\"\n    if node.is_leaf():\n        return \"%s:%.2f%s\" % (leaf_names[node.id], parent_dist - node.dist, newick)\n    else:\n        if len(newick) &gt; 0:\n            newick = \"):%.2f%s\" % (parent_dist - node.dist, newick)\n        else:\n            newick = \");\"\n        newick = get_newick(node.get_left(), node.dist, leaf_names, newick=newick)\n        newick = get_newick(node.get_right(), node.dist, leaf_names, newick=\",%s\" % (newick))\n        newick = \"(%s\" % (newick)\n        return newick\n\n\ntree = to_tree(Z, False)\n\n\nnewick_str = get_newick(tree, tree.dist, df.index)\n\n\nnewick_str\n\n'((((((((((((CK1E:0.21,CK1D:0.21):0.14,CK1A:0.35):0.23,((CK1G1:0.24,CK1G2:0.24):0.10,CK1G3:0.34):0.25):0.27,((((GRK2:0.35,TTBK1:0.35):0.06,PLK3:0.41):0.11,(GRK7:0.39,GRK5:0.39):0.12):0.07,GRK1:0.58):0.28):0.32,(CK2A2:0.31,CK2A1:0.31):0.87):0.13,(((TLK2:0.20,TLK1:0.20):0.38,PERK:0.58):0.22,((((TGFBR1:0.23,ALK4:0.23):0.05,ALK2:0.29):0.02,BMPR1B:0.30):0.14,ACVR2A:0.44):0.35):0.51):0.32,(((((MLK3:0.20,MLK1:0.20):0.24,COT:0.45):0.09,(((NEK7:0.18,NEK6:0.18):0.20,DSTYK:0.38):0.01,(NEK9:0.24,NEK2:0.24):0.15):0.15):0.13,((BUB1B:0.27,PLK1:0.27):0.27,PLK4:0.54):0.13):0.29,(((TBK1:0.22,IKKE:0.22):0.16,(IKKA:0.22,IKKB:0.22):0.17):0.12,ULK3:0.50):0.45):0.67):0.46,((ATR:0.36,ATM:0.36):0.26,DNAPK:0.62):1.46):1.25,((((((((((MNK2:0.33,PHKG2:0.33):0.05,PKN1:0.39):0.08,PHKG1:0.47):0.11,PKN2:0.58):0.11,((NDR2:0.37,NDR1:0.37):0.09,(LATS1:0.26,LATS2:0.26):0.20):0.24):0.26,(((((PKCT:0.26,PKCB:0.26):0.02,PKCG:0.28):0.04,PKCH:0.32):0.05,(PKCI:0.30,PKCZ:0.30):0.07):0.10,((PKCD:0.25,PKCA:0.25):0.12,PKCE:0.37):0.11):0.48):0.32,((((AURC:0.21,AURA:0.21):0.07,AURB:0.28):0.22,((PAK2:0.17,PAK1:0.17):0.04,PAK3:0.21):0.29):0.27,((PAK5:0.37,PAK6:0.37):0.04,PAK4:0.41):0.37):0.51):0.27,((((((CHK2:0.37,CHK1:0.37):0.09,SKMLCK:0.46):0.06,(DCAMKL1:0.30,DCAMKL2:0.30):0.22):0.09,(CAMK1A:0.44,MELK:0.44):0.17):0.27,((LRRK2:0.52,DAPK1:0.52):0.05,((ROCK2:0.30,ROCK1:0.30):0.15,MRCKB:0.45):0.12):0.31):0.39,(((CAMK1D:0.44,CAMK4:0.44):0.13,(((PRKD1:0.24,PRKD3:0.24):0.03,PRKD2:0.28):0.08,MAPKAPK3:0.36):0.21):0.15,(((CAMK2D:0.19,CAMK2G:0.19):0.01,CAMK2B:0.20):0.06,CAMK2A:0.26):0.45):0.55):0.28):0.24,(((((NUAK1:0.33,NUAK2:0.33):0.13,(TSSK2:0.26,TSSK1:0.26):0.21):0.03,(AMPKA2:0.26,AMPKA1:0.26):0.24):0.02,BRSK2:0.52):0.20,(((NIM1:0.21,QIK:0.21):0.10,SIK:0.31):0.07,((MARK3:0.19,MARK4:0.19):0.00,(MARK1:0.17,MARK2:0.17):0.02):0.19):0.33):1.08):0.15,(((((((((RSK2:0.21,RSK4:0.21):0.04,RSK3:0.25):0.04,P90RSK:0.29):0.05,P70S6K:0.34):0.12,(MSK2:0.26,MSK1:0.26):0.19):0.26,P70S6KB:0.71):0.08,((PIM3:0.20,PIM1:0.20):0.21,PIM2:0.40):0.39):0.12,((((PKG2:0.25,PKACB:0.25):0.02,PKACA:0.28):0.09,PKG1:0.37):0.02,PRKX:0.39):0.53):0.04,(((SGK2:0.29,SGK1:0.29):0.09,SGK3:0.38):0.11,((AKT3:0.26,AKT2:0.26):0.08,AKT1:0.33):0.16):0.46):0.98):1.40):1.16,((((((((DYRK1A:0.25,DYRK4:0.25):0.10,CDK9:0.35):0.02,HIPK2:0.37):0.19,(HIPK3:0.36,HIPK1:0.36):0.20):0.39,(MAP2K3:0.42,MAP2K4:0.42):0.54):0.11,((((CLK3:0.40,CLK1:0.40):0.12,MAP2K7:0.53):0.14,((MAPKAPK2:0.30,MAPKAPK5:0.30):0.22,HIPK4:0.52):0.15):0.10,((((DYRK3:0.20,DYRK2:0.20):0.29,CDK7:0.50):0.05,MTOR:0.55):0.09,CDK8:0.64):0.13):0.30):0.11,(((MOK:0.38,ICK:0.38):0.13,ERK5:0.51):0.25,ERK7:0.76):0.41):0.55,((((((P38B:0.24,P38A:0.24):0.09,NLK:0.33):0.02,CDK6:0.35):0.22,(((JNK2:0.16,JNK1:0.16):0.09,JNK3:0.24):0.03,(P38G:0.15,P38D:0.15):0.12):0.30):0.14,(GSK3A:0.30,GSK3B:0.30):0.41):0.13,(((ERK1:0.10,ERK2:0.10):0.28,CDK4:0.38):0.12,(((CDK2:0.18,CDK1:0.18):0.05,CDK5:0.22):0.10,CDK3:0.32):0.17):0.35):0.88):2.78):0.08,((((((STLK3:0.47,TAK1:0.47):0.15,ASK1:0.62):0.06,MOS:0.68):0.19,((MEKK3:0.45,MEKK2:0.45):0.14,(MEK1:0.37,MEK2:0.37):0.21):0.28):0.16,((((((IRAK4:0.31,MLK2:0.31):0.07,IRAK1:0.38):0.08,((NEK11:0.28,ZAK:0.28):0.08,MEKK1:0.35):0.11):0.15,BUB1:0.62):0.04,HASPIN:0.66):0.11,((WNK2:0.29,WNK3:0.29):0.02,WNK1:0.31):0.46):0.25):0.36,((((OSR1:0.47,EEF2K:0.47):0.08,(MEK5:0.45,SLK:0.45):0.10):0.13,((((((TNIK:0.16,MINK:0.16):0.02,HGK:0.17):0.05,(MST2:0.14,MST1:0.14):0.09):0.01,GCK:0.24):0.16,(NEK4:0.20,NEK1:0.20):0.20):0.03,(((TAO2:0.21,KHS1:0.21):0.06,((MST4:0.14,MST3:0.14):0.01,YSK1:0.15):0.13):0.06,TAO1:0.34):0.10):0.24):0.25,((MPSK1:0.54,PBK:0.54):0.12,((CAMKK2:0.30,CAMKK1:0.30):0.12,LKB1:0.41):0.25):0.26):0.46):3.20):7.46,((((((((KIT:0.16,CSF1R:0.16):0.07,(JAK2:0.15,JAK3:0.15):0.08):0.03,((FGFR4:0.16,ERBB4:0.16):0.01,FGFR3:0.17):0.09):0.04,((ZAP70:0.14,SYK:0.14):0.05,EGFR:0.19):0.11):0.12,(((((KDR:0.13,FLT4:0.13):0.04,FLT1:0.18):0.04,(((FGFR2:0.10,FGFR1:0.10):0.06,NTRK2:0.16):0.01,((IGF1R:0.09,INSR:0.09):0.03,INSRR:0.13):0.04):0.05):0.01,(NTRK1:0.09,NTRK3:0.09):0.14):0.02,(((((TYRO3:0.11,ROS1:0.11):0.01,ALK:0.12):0.03,MUSK:0.14):0.03,(PDGFRB:0.13,PDGFRA:0.13):0.05):0.01,((MST1R:0.12,MET:0.12):0.01,(RET:0.12,FLT3:0.12):0.01):0.05):0.07):0.17):0.12,((JAK1:0.23,TYK2:0.23):0.17,WEE1:0.40):0.14):0.07,(((((((((MERTK:0.11,AXL:0.11):0.06,PTK2B:0.17):0.07,TNK1:0.24):0.08,DDR2:0.32):0.00,CSK:0.32):0.05,TNK2:0.37):0.06,((((((FER:0.09,FES:0.09):0.07,SRMS:0.16):0.01,((FRK:0.13,BMX:0.13):0.03,TEK:0.15):0.02):0.02,(EPHA1:0.14,LTK:0.14):0.06):0.04,((EPHA8:0.09,EPHA3:0.09):0.05,(((EPHB4:0.08,EPHB1:0.08):0.01,EPHB3:0.09):0.00,EPHB2:0.09):0.06):0.09):0.06,(((EPHA6:0.11,EPHA7:0.11):0.01,(EPHA2:0.11,EPHA5:0.11):0.01):0.07,EPHA4:0.19):0.11):0.14):0.05,PTK2:0.49):0.04,((((((BLK:0.12,LCK:0.12):0.01,(LYN:0.11,YES1:0.11):0.01):0.05,(FYN:0.13,SRC:0.13):0.05):0.04,((HCK:0.15,FGR:0.15):0.02,PTK6:0.17):0.05):0.03,(ABL2:0.12,ABL1:0.12):0.13):0.02,(((TXK:0.15,TEC:0.15):0.01,BTK:0.16):0.04,ITK:0.20):0.08):0.25):0.09):0.81,((LIMK2:0.45,TESK1:0.45):0.10,(MATK:0.38,LIMK1:0.38):0.17):0.87):10.61);'\n\n\n\n# Save the Newick string to a file\nwith open(f'supp/CDDM.newick', 'w') as f:\n    f.write(newick_str)# Open the tree.newick in figtree",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#determine-threshold-to-cut-tree",
    "href": "hierarchical_clustering.html#determine-threshold-to-cut-tree",
    "title": "Hierarchical clustering",
    "section": "Determine threshold to cut tree",
    "text": "Determine threshold to cut tree\n\n# Generate a range of possible t values\nt_values = np.linspace(0, 15, 40)  # Example range from 0.05 to 1\nnum_clusters = [len(np.unique(fcluster(Z, t=t, criterion='distance'))) for t in t_values]\n\n# Plot the elbow curve\nplt.figure(figsize=(10, 6))\nplt.plot(t_values, num_clusters, marker='o')\nplt.title('Elbow Method to Determine Threshold')\nplt.xlabel('Threshold (t)')\nplt.ylabel('Number of clusters')\nplt.grid(True)\nplt.show()\n\n\n\n\n\n\n\n\n\n# Generate a range of possible t values\nt_values = np.linspace(1.2, 14, 40)  # Example range from 0.05 to 1\nnum_clusters = [len(np.unique(fcluster(Z, t=t, criterion='distance'))) for t in t_values]\n\n# Plot the elbow curve\nplt.figure(figsize=(10, 6))\nplt.plot(t_values, num_clusters, marker='o')\nplt.title('Elbow Method to Determine Threshold')\nplt.xlabel('Threshold (t)')\nplt.ylabel('Number of clusters')\nplt.grid(True)\nplt.show()",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#umap",
    "href": "hierarchical_clustering.html#umap",
    "title": "Hierarchical clustering",
    "section": "UMAP",
    "text": "UMAP\n\nDetermine parameters in UMAP\n\n# the lower the value, the more localized\nfor i in [3,5,10,15,20,30]:\n    plot_cluster(df,method='umap',complexity=i,min_dist=0.6,s=5)\n    plt.show()\n    plt.close()\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\nComplexity 5 looks good\n\n\nVisualize threshold for clusters\n\n# umap_matrix = reduce_feature(df,'umap',5,min_dist=0.6)\n\nfor i in [3,4,6,14]:\n    \n    # cut tree to get cluster\n    cluster = fcluster(Z, t=i, criterion='distance')\n    \n    print(f'q is {i}') # lower value of q, more clusters\n    # plot_2d(umap_matrix,legend=True, s=10, hue=cluster,palette='tab10')\n    \n    plot_cluster(df, hue = cluster,method= 'umap',palette='tab10',\n                 s = 10,legend=True,complexity = 5,min_dist=0.6)\n    plt.show()\n    plt.close()\n\nq is 3\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\nq is 4\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\nq is 6\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\nq is 14\n\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\ncluster = fcluster(Z, t=3, criterion='distance')\n\n\ncluster_info = pd.DataFrame(df.index)\n\n\ncluster_info['CDDM_big'] = cluster\n\n\ncluster = fcluster(Z, t=0.6, criterion='distance')\n\n\ncluster_info['CDDM_small'] = cluster\n\n\ncluster_info.to_csv('supp/CDDM_cluster.csv',index=False)\n\n\ninfo = Data.get_kinase_info()\n\n\ninfo\n\n\n\n\n\n\n\n\nkinase\nID_coral\nuniprot\nID_HGNC\ngroup\nfamily\nsubfamily_coral\nsubfamily\nin_ST_paper\nin_Tyr_paper\nin_cddm\npseudo\npspa_category_small\npspa_category_big\ncddm_big\ncddm_small\nlength\nhuman_uniprot_sequence\nkinasecom_domain\nnucleus\ncytosol\ncytoskeleton\nplasma membrane\nmitochondrion\nGolgi apparatus\nendoplasmic reticulum\nvesicle\ncentrosome\naggresome\nmain_location\n\n\n\n\n0\nAAK1\nAAK1\nQ2M2I8\nAAK1\nOther\nNAK\nNone\nNAK\n1\n0\n0\n0\nNAK\nNAK\nNaN\nNaN\n339\nMKKFFDSRREQGGSGLGSGSSGGGGSTSGLGSGYIGRVFGIGRQQVTVDEVLAEGGFAIVFLVRTSNGMKCALKRMFVNNEHDLQVCKREIQIMRDLSGHKNIVGYIDSSINNVSSGDVWEVLILMDFCRGGQVVNLMNQRLQTGFTENEVLQIFCDTCEAVARLHQCKTPIIHRDLKVENILLHDRGHYVLCDFGSATNKFQNPQTEGVNAVEDEIKKYTTLSYRAPEMVNLYSGKIITTKADIWALGCLLYKLCYFTLPFGESQVAICDGNFTIPDNSRYSQDMHCLIRYMLEPDPDKRPDIYQVSYFSFKLLKKECPIPNVQNSPIPAKLPEPVKASEAAAKKTQPKARLTDPIPTTETSIAPRQRPKAGQTQPNPGILPIQPALTPRKRATVQPPPQAAGSSNQPGLLASVPQPKPQAPPSQPLPQTQAKQPQAPPTPQQTPSTQAQGLPAQAQATPQHQQQLFLKQQQQQQQPPPAQQQPAGTFYQQQQAQTQQFQAVHPATQKPAIAQFPVVSQGGSQQQLMQNFYQQQQQQQQQQQQQQLATALHQQQLMTQQAALQQKPTMAAGQQPQPQPAAAPQPAPAQEPAIQAP...\nVTVDEVLAEGGFAIVFLVRTSNGMKCALKRMFVNNEHDLQVCKREIQIMRDLSGHKNIVGYIDSSINNVSSGDVWEVLILMDFCRGGQVVNLMNQRLQTGFTENEVLQIFCDTCEAVARLHQCKTPIIHRDLKVENILLHDRGHYVLCDFGSATNKFQNPQTEGVNAVEDEIKKYTTLSYRAPEMVNLYSGKIITTKADIWALGCLLYKLCYFTLPFGESQVAICDGNFTIPDNSRYSQDMHCLIRYMLEPDPDKRPDIYQVSYF\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\n\n\n1\nABL1\nABL1\nP00519\nABL1\nTK\nAbl\nNone\nAbl\n0\n1\n1\n0\nABL\nABL\n1.0\n2.0\n1130\nMLEICLKLVGCKSKKGLSSSSSCYLEEALQRPVASDFEPQGLSEAARWNSKENLLAGPSENDPNLFVALYDFVASGDNTLSITKGEKLRVLGYNHNGEWCEAQTKNGQGWVPSNYITPVNSLEKHSWYHGPVSRNAAEYLLSSGINGSFLVRESESSPGQRSISLRYEGRVYHYRINTASDGKLYVSSESRFNTLAELVHHHSTVADGLITTLHYPAPKRNKPTVYGVSPNYDKWEMERTDITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEAAVMKEIKHPNLVQLLGVCTREPPFYIITEFMTYGNLLDYLRECNRQEVNAVVLLYMATQISSAMEYLEKKNFIHRDLAARNCLVGENHLVKVADFGLSRLMTGDTYTAHAGAKFPIKWTAPESLAYNKFSIKSDVWAFGVLLWEIATYGMSPYPGIDLSQVYELLEKDYRMERPEGCPEKVYELMRACWQWNPSDRPSFAEIHQAFETMFQESSISDEVEKELGKQGVRGAVSTLLQAPELPTKTRTSRRAAEHRDTTDVPEMPHSKGQGESDPLDHEPAVSPLLPRKERGPPEGGLNEDERLLPKDKK...\nITMKHKLGGGQYGEVYEGVWKKYSLTVAVKTLKEDTMEVEEFLKEAAVMKEIKHPNLVQLLGVCTREPPFYIITEFMTYGNLLDYLRECNRQEVNAVVLLYMATQISSAMEYLEKKNFIHRDLAARNCLVGENHLVKVADFGLSRLMTGDTYTAHAGAKFPIKWTAPESLAYNKFSIKSDVWAFGVLLWEIATYGMSPYPGIDLSQVYELLEKDYRMERPEGCPEKVYELMRACWQWNPSDRPSFAEIHQAF\nNaN\n6.0\nNaN\n4.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n2\nABL2\nABL2\nP42684\nABL2\nTK\nAbl\nNone\nAbl\n0\n1\n1\n0\nABL\nABL\n1.0\n2.0\n1182\nMGQQVGRVGEAPGLQQPQPRGIRGSSAARPSGRRRDPAGRTTETGFNIFTQHDHFASCVEDGFEGDKTGGSSPEALHRPYGCDVEPQALNEAIRWSSKENLLGATESDPNLFVALYDFVASGDNTLSITKGEKLRVLGYNQNGEWSEVRSKNGQGWVPSNYITPVNSLEKHSWYHGPVSRSAAEYLLSSLINGSFLVRESESSPGQLSISLRYEGRVYHYRINTTADGKVYVTAESRFSTLAELVHHHSTVADGLVTTLHYPAPKCNKPTVYGVSPIHDKWEMERTDITMKHKLGGGQYGEVYVGVWKKYSLTVAVKTLKEDTMEVEEFLKEAAVMKEIKHPNLVQLLGVCTLEPPFYIVTEYMPYGNLLDYLRECNREEVTAVVLLYMATQISSAMEYLEKKNFIHRDLAARNCLVGENHVVKVADFGLSRLMTGDTYTAHAGAKFPIKWTAPESLAYNTFSIKSDVWAFGVLLWEIATYGMSPYPGIDLSQVYDLLEKGYRMEQPEGCPPKVYELMRACWKWSPADRPSFAETHQAFETMFHDSSISEEVAEELGRAASSSSVVPYLPRLPILPSKTRTLKKQVENKENIEGAQ...\nITMKHKLGGGQYGEVYVGVWKKYSLTVAVKTLKEDTMEVEEFLKEAAVMKEIKHPNLVQLLGVCTLEPPFYIVTEYMPYGNLLDYLRECNREEVTAVVLLYMATQISSAMEYLEKKNFIHRDLAARNCLVGENHVVKVADFGLSRLMTGDTYTAHAGAKFPIKWTAPESLAYNTFSIKSDVWAFGVLLWEIATYGMSPYPGIDLSQVYDLLEKGYRMEQPEGCPPKVYELMRACWKWSPADRPSFAETHQAF\nNaN\n4.0\n6.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytoskeleton\n\n\n3\nTNK2\nACK\nQ07912\nTNK2\nTK\nAck\nNone\nAck\n0\n1\n1\n0\nACK\nACK\n1.0\n2.0\n1038\nMQPEEGTGWLLELLSEVQLQQYFLRLRDDLNVTRLSHFEYVKNEDLEKIGMGRPGQRRLWEAVKRRKALCKRKSWMSKVFSGKRLEAEFPPHHSQSTFRKTSPAPGGPAGEGPLQSLTCLIGEKDLRLLEKLGDGSFGVVRRGEWDAPSGKTVSVAVKCLKPDVLSQPEAMDDFIREVNAMHSLDHRNLIRLYGVVLTPPMKMVTELAPLGSLLDRLRKHQGHFLLGTLSRYAVQVAEGMGYLESKRFIHRDLAARNLLLATRDLVKIGDFGLMRALPQNDDHYVMQEHRKVPFAWCAPESLKTRTFSHASDTWMFGVTLWEMFTYGQEPWIGLNGSQILHKIDKEGERLPRPEDCPQDIYNVMVQCWAHKPEDRPTFVALRDFLLEAQPTDMRALQDFEEPDKLHIQMNDVITVIEGRAENYWWRGQNTRTLCVGPFPRNVVTSVAGLSAQDISQPLQNSFIHTGHGDSDPRHCWGFPDRIDELYLGNPMDPPDLLSVELSTSRPPQHLGGVKKPTYDPVSEDQDPLSSDFKRLGLRKPGLPRGLWLAKPSARVPGTKASRGSGAEVTLIDFGEEPVVPALRPCAPSLAQLAMDA...\nLRLLEKLGDGSFGVVRRGEWDAPSGKTVSVAVKCLKPDVLSQPEAMDDFIREVNAMHSLDHRNLIRLYGVVLTPPMKMVTELAPLGSLLDRLRKHQGHFLLGTLSRYAVQVAEGMGYLESKRFIHRDLAARNLLLATRDLVKIGDFGLMRALPQNDDHYVMQEHRKVPFAWCAPESLKTRTFSHASDTWMFGVTLWEMFTYGQEPWIGLNGSQILHKIDKEGERLPRPEDCPQDIYNVMVQCWAHKPEDRPTFVALRDFL\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n8.0\nNaN\n2.0\nvesicle\n\n\n4\nACVR2A\nACTR2\nP27037\nACVR2A\nTKL\nSTKR\nSTKR2\nSTKR2\n1\n0\n1\n0\nTGFBR\nacidophilic\n5.0\n49.0\n352\nMGAAAKLAFAVFLISCSSGAILGRSETQECLFFNANWEKDRTNQTGVEPCYGDKDKRRHCFATWKNISGSIEIVKQGCWLDDINCYDRTDCVEKKDSPEVYFCCCEGNMCNEKFSYFPEMEVTQPTSNPVTPKPPYYNILLYSLVPLMLIAGIVICAFWVYRHHKMAYPPVLVPTQDPGPPPPSPLLGLKPLQLLEVKARGRFGCVWKAQLLNEYVAVKIFPIQDKQSWQNEYEVYSLPGMKHENILQFIGAEKRGTSVDVDLWLITAFHEKGSLSDFLKANVVSWNELCHIAETMARGLAYLHEDIPGLKDGHKPAISHRDIKSKNVLLKNNLTACIADFGLALKFEAGKSAGDTHGQVGTRRYMAPEVLEGAINFQRDAFLRIDMYAMGLVLWELASRCTAADGPVDEYMLPFEEEIGQHPSLEDMQEVVVHKKKRPVLRDYWQKHAGMAMLCETIEECWDHDAEARLSAGCVGERITQMQRLTNIITTEDIVTVVTMVTNVDFPPKESSL\nLQLLEVKARGRFGCVWKAQLLNEYVAVKIFPIQDKQSWQNEYEVYSLPGMKHENILQFIGAEKRGTSVDVDLWLITAFHEKGSLSDFLKANVVSWNELCHIAETMARGLAYLHEDIPGLKDGHKPAISHRDIKSKNVLLKNNLTACIADFGLALKFEAGKSAGDTHGQVGTRRYMAPEVLEGAINFQRDAFLRIDMYAMGLVLWELASRCTAADGPVDEYMLPFEEEIGQHPSLEDMQEVVVHKKKRPVLRDYWQKHAGMAMLCETIEECWDHDAEARLSAGCVGERI\nNaN\n5.0\nNaN\nNaN\nNaN\nNaN\n5.0\nNaN\nNaN\nNaN\ncytosol\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n518\nYSK1\nYSK1\nO00506\nSTK25\nSTE\nSTE20\nYSK\nYSK\n1\n0\n1\n0\nMAP4K\nMAP4K\n2.0\n6.0\n426\nMAHLRGFANQHSRVDPEELFTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQEITVLSQCDSPYITRYFGSYLKSTKLWIIMEYLGGGSALDLLKPGPLEETYIATILREILKGLDYLHSERKIHRDIKAANVLLSEQGDVKLADFGVAGQLTDTQIKRNTFVGTPFWMAPEVIKQSAYDFKADIWSLGITAIELAKGEPPNSDLHPMRVLFLIPKNSPPTLEGQHSKPFKEFVEACLNKDPRFRPTAKELLKHKFITRYTKKTSFLTELIDRYKRWKSEGHGEESSSEDSDIDGEAEDGEQGPIWTFPPTIRPSPHSKLHKGTALHSSQKPAEPVKRQPRSQCLSTLVRPVFGELKEKHKQSGGSVGALEELENAFSLAEESCPGISDKLMVHLVERVQRFSHNRNHLTSTR\nFTKLDRIGKGSFGEVYKGIDNHTKEVVAIKIIDLEEAEDEIEDIQQEITVLSQCDSPYITRYFGSYLKSTKLWIIMEYLGGGSALDLLKPGPLEETYIATILREILKGLDYLHSERKIHRDIKAANVLLSEQGDVKLADFGVAGQLTDTQIKRNTFVGTPFWMAPEVIKQSAYDFKADIWSLGITAIELAKGEPPNSDLHPMRVLFLIPKNSPPTLEGQHSKPFKEFVEACLNKDPRFRPTAKELLKHKFI\nNaN\n6.0\nNaN\nNaN\nNaN\n4.0\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n519\nZAK\nZAK\nQ9NYL2\nMAP3K20\nTKL\nMLK\nZAK\nZAK\n1\n0\n1\n0\nMAP3K\nMAP3K\n2.0\n9.0\n800\nMSSLGASFVQIKFDDLQFFENCGGGSFGSVYRAKWISQDKEVAVKKLLKIEKEAEILSVLSHRNIIQFYGVILEPPNYGIVTEYASLGSLYDYINSNRSEEMDMDHIMTWATDVAKGMHYLHMEAPVKVIHRDLKSRNVVIAADGVLKICDFGASRFHNHTTHMSLVGTFPWMAPEVIQSLPVSETCDTYSYGVVLWEMLTREVPFKGLEGLQVAWLVVEKNERLTIPSSCPRSFAELLHQCWEADAKKRPSFKQIISILESMSNDTSLPDKCNSFLHNKAEWRCEIEATLERLKKLERDLSFKEQELKERERRLKMWEQKLTEQSNTPLLPSFEIGAWTEDDVYCWVQQLVRKGDSSAEMSVYASLFKENNITGKRLLLLEEEDLKDMGIVSKGHIIHFKSAIEKLTHDYINLFHFPPLIKDSGGEPEENEEKIVNLELVFGFHLKPGTGPQDCKWKMYMEMDGDEIAITYIKDVTFNTNLPDAEILKMTKPPFVMEKWIVGIAKSQTVECTVTYESDVRTPKSTKHVHSIQWSRTKPQDEVKAVQLAIQTLFTNSDGNPGSRSDSSADCQWLDTLRMRQIASNTSLQRSQSNPI...\nLQFFENCGGGSFGSVYRAKWISQDKEVAVKKLLKIEKEAEILSVLSHRNIIQFYGVILEPPNYGIVTEYASLGSLYDYINSNRSEEMDMDHIMTWATDVAKGMHYLHMEAPVKVIHRDLKSRNVVIAADGVLKICDFGASRFHNHTTHMSLVGTFPWMAPEVIQSLPVSETCDTYSYGVVLWEMLTREVPFKGLEGLQVAWLVVEKNERLTIPSSCPRSFAELLHQCWEADAKKRPSFKQIISI\n5.0\n5.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nnucleus\n\n\n520\nZAP70\nZAP70\nP43403\nZAP70\nTK\nSyk\nNone\nSyk\n0\n1\n1\n0\nSYK and FAK\nSYK and FAK\n1.0\n3.0\n619\nMPDPAAHLPFFYGSISRAEAEEHLKLAGMADGLFLLRQCLRSLGGYVLSLVHDVRFHHFPIERQLNGTYAIAGGKAHCGPAELCEFYSRDPDGLPCNLRKPCNRPSGLEPQPGVFDCLRDAMVRDYVRQTWKLEGEALEQAIISQAPQVEKLIATTAHERMPWYHSSLTREEAERKLYSGAQTDGKFLLRPRKEQGTYALSLIYGKTVYHYLISQDKAGKYCIPEGTKFDTLWQLVEYLKLKADGLIYCLKEACPNSSASNASGAAAPTLPAHPSTLTHPQRRIDTLNSDGYTPEPARITSPDKPRPMPMDTSVYESPYSDPEELKDKKLFLKRDNLLIADIELGCGNFGSVRQGVYRMRKKQIDVAIKVLKQGTEKADTEEMMREAQIMHQLDNPYIVRLIGVCQAEALMLVMEMAGGGPLHKFLVGKREEIPVSNVAELLHQVSMGMKYLEEKNFVHRDLAARNVLLVNRHYAKISDFGLSKALGADDSYYTARSAGKWPLKWYAPECINFRKFSSRSDVWSYGVTMWEALSYGQKPYKKMKGPEVMAFIEQGKRMECPPECPPELYALMSDCWIYKWEDRPDFLTVEQRMRAC...\nLIADIELGCGNFGSVRQGVYRMRKKQIDVAIKVLKQGTEKADTEEMMREAQIMHQLDNPYIVRLIGVCQAEALMLVMEMAGGGPLHKFLVGKREEIPVSNVAELLHQVSMGMKYLEEKNFVHRDLAARNVLLVNRHYAKISDFGLSKALGADDSYYTARSAGKWPLKWYAPECINFRKFSSRSDVWSYGVTMWEALSYGQKPYKKMKGPEVMAFIEQGKRMECPPECPPELYALMSDCWIYKWEDRPDFL\n3.0\n5.0\nNaN\n2.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n521\nEEF2K\neEF2K\nO00418\nEEF2K\nAtypical\nAlpha\neEF2K\neEF2K\n1\n0\n1\n0\nALPHA/MLK\nALPHA/MLK\n2.0\n7.0\n725\nMADEDLIFRLEGVDGGQSPRAGHDGDSDGDSDDEEGYFICPITDDPSSNQNVNSKVNKYYSNLTKSERYSSSGSPANSFHFKEAWKHAIQKAKHMPDPWAEFHLEDIATERATRHRYNAVTGEWLDDEVLIKMASQPFGRGAMRECFRTKKLSNFLHAQQWKGASNYVAKRYIEPVDRDVYFEDVRLQMEAKLWGEEYNRHKPPKQVDIMQMCIIELKDRPGKPLFHLEHYIEGKYIKYNSNSGFVRDDNIRLTPQAFSHFTFERSGHQLIVVDIQGVGDLYTDPQIHTETGTDFGDGNLGVRGMALFFYSHACNRICESMGLAPFDLSPRERDAVNQNTKLLQSAKTILRGTEEKCGSPQVRTLSGSRPPLLRPLSENSGDENMSDVTFDSLPSSPSSATPHSQKLDHLHWPVFSDLDNMASRDHDHLDNHRESENSGDSGYPSEKRGELDDPEPREHGHSYSNRKYESDEDSLGSSGRVCVEKWNLLNSSRLHLPRASAVALEVQRLNALDLEKKIGKSILGKVHLAMVRYHEGGRFCEKGEEWDQESAVFHLEHAANLGELEAIVGLGLMYSQLPHHILADVSLKETEENKTK...\nVTGEWLDDEVLIKMASQPFGRGAMRECFRTKKLSNFLHAQQWKGASNYVAKRYIEPVDRDVYFEDVRLQMEAKLWGEEYNRHKPPKQVDIMQMCIIELKDRPGKPLFHLEHYIEGKYIKYNSNSGFVRDDNIRLTPQAFSHFTFERSGHQLIVVDIQGVGDLYTDPQIHTETGTDFGDGNLGVRGMALFFYSHACNRIC\nNaN\n9.0\nNaN\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n522\nFAM20C\nFAM20C\nQ8IXL6\nFAM20C\nAtypical\nFAM20C\nNone\nFAM20C\n1\n0\n0\n0\nFAM20C\nacidophilic\nNaN\nNaN\n562\nMKMMLVRRFRVLILMVFLVACALHIALDLLPRLERRGARPSGEPGCSCAQPAAEVAAPGWAQVRGRPGEPPAASSAAGDAGWPNKHTLRILQDFSSDPSSNLSSHSLEKLPPAAEPAERALRGRDPGALRPHDPAHRPLLRDPGPRRSESPPGPGGDASLLARLFEHPLYRVAVPPLTEEDVLFNVNSDTRLSPKAAENPDWPHAGAEGAEFLSPGEAAVDSYPNWLKFHIGINRYELYSRHNPAIEALLHDLSSQRITSVAMKSGGTQLKLIMTFQNYGQALFKPMKQTREQETPPDFFYFSDYERHNAEIAAFHLDRILDFRRVPPVAGRMVNMTKEIRDVTRDKKLWRTFFISPANNICFYGECSYYCSTEHALCGKPDQIEGSLAAFLPDLSLAKRKTWRNPWRRSYHKRKKAEWEVDPDYCEEVKQTPPYDSSHRILDVMDMTIFDFLMGNMDRHHYETFEKFGNETFIIHLDNGRGFGKYSHDELSILVPLQQCCRIRKSTYLRLQLLAKEEYKLSLLMAESLRGDQVAPVLYQPHLEALDRRLRVVLKAVRDCVERNGLHSVVDDDLDTEHRAASAR\nFISPANNICFYGECSYYCSTEHALCGKPDQIEGSLAAFLPDLSLAKRKTWRNPWRRSYHKRKKAEWEVDPDYCEEVKQTPPYDSSHRILDVMDMTIFDFLMGNMDRHHYETFEKFGNETFIIHLDNGRGFGKYSHDELSILVPLQQCCRIRKSTYLRLQLLAKEEYKLSLLMAESLRGDQVAPVLYQPHLEALDRRLRVVLKAVRDCVERNG\nNaN\n2.0\nNaN\nNaN\nNaN\n7.0\n1.0\nNaN\nNaN\nNaN\nGolgi apparatus\n\n\n\n\n523 rows × 30 columns",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "hierarchical_clustering.html#plot-umap",
    "href": "hierarchical_clustering.html#plot-umap",
    "title": "Hierarchical clustering",
    "section": "Plot UMAP",
    "text": "Plot UMAP\n\ninfo = Data.get_kinase_info().query('pseudo==\"0\"')\n\nWe have already merge the cluster in the info, so no need to merge here\n\ninfo = info.set_index('kinase')\n\n\ncolored by CDDM cluster\n\nplot_cluster(df, hue = info.cddm_big,method= 'umap',palette='tab10',\n             s = 10,legend=True,complexity = 5,min_dist=0.6)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\ncolored by kinase family/group\n\nfrom fastcore.xtras import *\n\n\ncolor_group = load_pickle('raw/kinase_color.pkl')\n\n\nplot_cluster(df, hue = info.group,method= 'umap',palette=color_group,\n             s = 10,legend=True,complexity = 5,min_dist=0.6)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nPSPA category\n\npspa_color = pd.read_csv('raw/pspa_color.csv')\n\n\npspa_color = pspa_color.set_index('Label')['Color'].to_dict()\n\n\ninfo.pspa_category_big.value_counts()\n\nbasophilic                            87\npro-directed                          45\nacidophilic                           32\nMAP3K                                 17\nMAP4K                                 17\nALPHA/MLK                             15\nFGF and VEGF receptors                13\nRIPK/WNK                              13\nPKC                                   12\nEphrin receptors                      11\nassorted                              11\nNEK/ASK                               10\nEIF2AK/TLK                            10\nPDGF receptors                         9\nSRC                                    8\nTEC                                    7\nCMGC                                   7\nTAM receptors                          7\nULK/TTBK                               7\nInsulin and neurotrophin receptors     6\nNon-canonical (WEE)                    6\nJAK                                    5\nEGF receptors                          5\nLKB/CAMKK                              5\nIKK                                    4\nPIKK                                   4\nNon-canonical (PDHK)                   3\nNAK                                    3\nSYK and FAK                            3\nDiscoidin domain receptors             2\nABL                                    2\nassorted_Non-canonical (PDHK)          2\nACK                                    2\nassorted_Non-canomical (PDHK)          1\nLKB/CAMKK_Non-canonical (WEE)          1\nName: pspa_category_big, dtype: int64\n\n\n\ninfo.columns\n\nIndex(['ID_coral', 'uniprot', 'ID_HGNC', 'group', 'family', 'subfamily_coral',\n       'subfamily', 'in_ST_paper', 'in_Tyr_paper', 'in_cddm', 'pseudo',\n       'pspa_category_small', 'pspa_category_big', 'cddm_big', 'cddm_small',\n       'length', 'human_uniprot_sequence', 'kinasecom_domain', 'nucleus',\n       'cytosol', 'cytoskeleton', 'plasma membrane', 'mitochondrion',\n       'Golgi apparatus', 'endoplasmic reticulum', 'vesicle', 'centrosome',\n       'aggresome', 'main_location'],\n      dtype='object')\n\n\n\nplot_cluster(df, hue = info.pspa_category_big.str.split('_').str[0],\n             method= 'umap',palette=pspa_color,\n             s = 10,legend=True,complexity = 5,min_dist=0.6)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")\n\n\n\n\n\n\n\n\n\n\n\nMain location\n\nplot_cluster(df, hue = info.main_location,method= 'umap',palette='tab20',\n             s = 10,legend=True,complexity = 5,min_dist=0.6)\n\n/usr/local/lib/python3.9/dist-packages/umap/umap_.py:1945: UserWarning: n_jobs value 1 overridden to 1 by setting random_state. Use no seed for parallelism.\n  warn(f\"n_jobs value {self.n_jobs} overridden to 1 by setting random_state. Use no seed for parallelism.\")",
    "crumbs": [
      "Hierarchical clustering"
    ]
  },
  {
    "objectID": "others_01_process_am.html",
    "href": "others_01_process_am.html",
    "title": "Process AlphaMissense dataset",
    "section": "",
    "text": "import pandas as pd\n\nUncheck below to download the AlphaMissense data:\n\n# !wget https://zenodo.org/records/8208688/files/AlphaMissense_aa_substitutions.tsv.gz\n\n\ndf = pd.read_csv('AlphaMissense_aa_substitutions.tsv.gz', compression='gzip',  header=3, sep='\\t', quotechar='\"')\n\nCPU times: user 1min 2s, sys: 37.8 s, total: 1min 39s\nWall time: 3min 6s\n\n\n\ndf['position'] = df.protein_variant.str[1:-1].astype(int)\n\n\ndf['aa_position'] =  df.protein_variant.str[:-1]\n\n\ndf_mean = df.groupby(['uniprot_id','aa_position'])['am_pathogenicity'].mean().reset_index()\n\n\ndf.shape[0]//df_mean.shape[0]\n\n19\n\n\n\ndf_mean['position'] = df_mean.aa_position.str[1:].astype(int)\n\n\ndf_mean = df_mean.sort_values(by=['uniprot_id','position']).reset_index(drop=True)\n\n\ndf_mean.to_parquet('raw/AM_mean.parquet')\n\n\ndf_mean\n\n\n\n\n\n\n\n\nuniprot_id\naa_position\nam_pathogenicity\nposition\n\n\n\n\n0\nA0A024R1R8\nM1\n0.414942\n1\n\n\n1\nA0A024R1R8\nS2\n0.231174\n2\n\n\n2\nA0A024R1R8\nS3\n0.188332\n3\n\n\n3\nA0A024R1R8\nH4\n0.141832\n4\n\n\n4\nA0A024R1R8\nE5\n0.245732\n5\n\n\n...\n...\n...\n...\n...\n\n\n11377646\nX6R8D5\nV123\n0.296089\n123\n\n\n11377647\nX6R8D5\nL124\n0.260532\n124\n\n\n11377648\nX6R8D5\nW125\n0.901605\n125\n\n\n11377649\nX6R8D5\nR126\n0.326921\n126\n\n\n11377650\nX6R8D5\nS127\n0.407611\n127\n\n\n\n\n11377651 rows × 4 columns",
    "crumbs": [
      "Process AlphaMissense dataset"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "KATLAS raw",
    "section": "",
    "text": "Reproduce datasets and figures for paper [Computational Decoding of Human Kinome Substrate Specificities and Functions]\nThe function modules for python-katlas is available at: https://github.com/sky1ove/katlas",
    "crumbs": [
      "KATLAS raw"
    ]
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "KATLAS raw",
    "section": "Install",
    "text": "Install\nTo run notebooks successfully, install dev version of python-katlas:\npip install 'python-katlas[dev]' -U",
    "crumbs": [
      "KATLAS raw"
    ]
  },
  {
    "objectID": "index.html#system-requirements",
    "href": "index.html#system-requirements",
    "title": "KATLAS raw",
    "section": "System Requirements",
    "text": "System Requirements\nWe recommend using a CUDA-enabled environment for efficient protein embedding extraction and deep learning model training.\nRun import torch; torch.cuda.is_available() to check cuda availability.",
    "crumbs": [
      "KATLAS raw"
    ]
  },
  {
    "objectID": "index.html#instruction",
    "href": "index.html#instruction",
    "title": "KATLAS raw",
    "section": "Instruction",
    "text": "Instruction\nAfter installation, git clone this repository through:\n\ngit clone https://github.com/sky1ove/katlas_raw.git\nThen to go to nbs folder and run notebooks:\ncd nbs",
    "crumbs": [
      "KATLAS raw"
    ]
  },
  {
    "objectID": "index.html#doc-site-for-this-repository",
    "href": "index.html#doc-site-for-this-repository",
    "title": "KATLAS raw",
    "section": "Doc site for this repository",
    "text": "Doc site for this repository\nNotebooks in the nbs folder can be visualized at:\nhttps://sky1ove.github.io/katlas_raw/",
    "crumbs": [
      "KATLAS raw"
    ]
  },
  {
    "objectID": "aa_feature.html",
    "href": "aa_feature.html",
    "title": "Analysis of amino acid features",
    "section": "",
    "text": "from katlas.core import *\nfrom katlas.feature import *\nfrom katlas.plot import *\nfrom fastbook import *\nfrom tqdm.notebook import tqdm; tqdm.pandas()\nimport seaborn as sns",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "aa_feature.html#setup",
    "href": "aa_feature.html#setup",
    "title": "Analysis of amino acid features",
    "section": "",
    "text": "from katlas.core import *\nfrom katlas.feature import *\nfrom katlas.plot import *\nfrom fastbook import *\nfrom tqdm.notebook import tqdm; tqdm.pandas()\nimport seaborn as sns",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "aa_feature.html#aa-info",
    "href": "aa_feature.html#aa-info",
    "title": "Analysis of amino acid features",
    "section": "AA info",
    "text": "AA info\n\n# Download the amino acid info\naa = Data.get_aa_info()\n\n\naa = aa.iloc[:-2,:]",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "aa_feature.html#rdkit-chemical-property",
    "href": "aa_feature.html#rdkit-chemical-property",
    "title": "Analysis of amino acid features",
    "section": "Rdkit chemical property",
    "text": "Rdkit chemical property\n\naa_rdkit = get_rdkit(aa, 'SMILES')\n\n\naa_rdkit.shape\n\n(23, 210)\n\n\n\naa_rdkit = preprocess(aa_rdkit)\n\nremoving columns: {'fr_COO2', 'ExactMolWt', 'fr_ether', 'fr_N_O', 'fr_phenol', 'fr_C_O_noCOO', 'fr_nitrile', 'fr_bicyclic', 'NumRadicalElectrons', 'fr_ketone', 'NumSaturatedCarbocycles', 'fr_amide', 'fr_nitro', 'fr_COO', 'fr_Al_OH_noTert', 'fr_isothiocyan', 'PEOE_VSA13', 'fr_oxazole', 'fr_azo', 'fr_nitro_arom', 'fr_phos_acid', 'SMR_VSA8', 'SlogP_VSA10', 'fr_Nhpyrrole', 'fr_thiophene', 'fr_morpholine', 'fr_piperdine', 'fr_lactone', 'Chi2n', 'fr_aniline', 'fr_furan', 'SMR_VSA2', 'fr_pyridine', 'HeavyAtomMolWt', 'fr_alkyl_carbamate', 'fr_ArN', 'SlogP_VSA6', 'fr_Ar_COO', 'fr_Ar_OH', 'fr_dihydropyridine', 'NumAliphaticCarbocycles', 'fr_epoxide', 'fr_aryl_methyl', 'MaxPartialCharge', 'fr_imide', 'Chi2v', 'fr_diazo', 'fr_ester', 'MinAbsPartialCharge', 'fr_nitroso', 'fr_para_hydroxylation', 'fr_allylic_oxid', 'fr_Ar_NH', 'fr_phos_ester', 'fr_quatN', 'fr_aldehyde', 'fr_sulfone', 'fr_hdrzone', 'fr_Ndealkylation2', 'fr_oxime', 'fr_priamide', 'VSA_EState9', 'fr_hdrzine', 'fr_guanido', 'NumSaturatedHeterocycles', 'fr_thiazole', 'MaxEStateIndex', 'PEOE_VSA5', 'HeavyAtomCount', 'NumSaturatedRings', 'fr_halogen', 'fr_ketone_Topliss', 'SlogP_VSA11', 'fr_prisulfonamd', 'fr_thiocyan', 'fr_urea', 'fr_term_acetylene', 'SlogP_VSA12', 'EState_VSA11', 'fr_benzodiazepine', 'fr_nitro_arom_nonortho', 'BCUT2D_MRHI', 'fr_sulfonamd', 'fr_Imine', 'fr_alkyl_halide', 'fr_isocyan', 'fr_Ndealkylation1', 'fr_HOCCN', 'fr_azide', 'fr_phenol_noOrthoHbond', 'SlogP_VSA9', 'fr_tetrazole', 'LabuteASA', 'fr_methoxy', 'NumValenceElectrons', 'fr_piperzine', 'Chi0', 'fr_benzene', 'VSA_EState1', 'fr_C_S', 'SlogP_VSA7', 'NumAliphaticRings', 'fr_amidine', 'fr_barbitur', 'fr_imidazole', 'fr_lactam'}\n\n\n\naa_rdkit.shape\n\n(23, 104)",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "aa_feature.html#pca",
    "href": "aa_feature.html#pca",
    "title": "Analysis of amino acid features",
    "section": "PCA",
    "text": "PCA\n\nsns.set(rc={\"figure.dpi\":300, 'savefig.dpi':300})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\n\nplot_cluster(aa_rdkit, name_list = aa.Name, hue = 'aa', method = 'pca')",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "aa_feature.html#correlation-of-aa",
    "href": "aa_feature.html#correlation-of-aa",
    "title": "Analysis of amino acid features",
    "section": "Correlation of aa",
    "text": "Correlation of aa\n\nrdkit_corr = aa_rdkit.T.corr()\n\n\ndraw_corr(rdkit_corr)",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "aa_feature.html#correlation-of-aa-in-target",
    "href": "aa_feature.html#correlation-of-aa-in-target",
    "title": "Analysis of amino acid features",
    "section": "Correlation of aa in target",
    "text": "Correlation of aa in target\n\nPSPA - tyr\n\ndf = Data.get_pspa_tyr_norm().iloc[:,:-3]\n\ndf2 = df.unstack().reset_index()\n\ndf2.columns = ['substrate','kinase','target']\n\ndf2['aa']=df2.substrate.str[-1]\n\ndf2['enum'] = df2.groupby('aa').cumcount()\n\ndf_pivot = df2.pivot(index='enum', columns='aa', values='target')\n\ncorr = df_pivot.corr().round(2)\n\ndraw_corr(corr)\n\n\n\n\n\n\n\n\n\n\nPSPA - st\n\ndf = Data.get_pspa_st_norm().iloc[:,:-3]\n\ndf2 = df.unstack().reset_index()\n\ndf2.columns = ['substrate','kinase','target']\n\ndf2['aa']=df2.substrate.str[-1]\n\ndf2['enum'] = df2.groupby('aa').cumcount()\n\ndf_pivot = df2.pivot(index='enum', columns='aa', values='target')\n\ncorr = df_pivot.corr().round(2)\n\ndraw_corr(corr)\n\n\n\n\n\n\n\n\n\n\nCDDM\n\ndf = Data.get_cddm().iloc[:,:-3]\n\ndf2 = df.unstack().reset_index()\n\ndf2.columns = ['substrate','kinase','target']\n\ndf2['aa']=df2.substrate.str[-1]\n\ndf2['enum'] = df2.groupby('aa').cumcount()\n\ndf_pivot = df2.pivot(index='enum', columns='aa', values='target')\n\ncorr = df_pivot.corr().round(2)\n\ndraw_corr(corr)",
    "crumbs": [
      "Analysis of amino acid features"
    ]
  },
  {
    "objectID": "correlation_tyr.html",
    "href": "correlation_tyr.html",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "",
    "text": "from katlas.core import *\n\nimport pandas as pd,seaborn as sns",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#load-cddm",
    "href": "correlation_tyr.html#load-cddm",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Load CDDM",
    "text": "Load CDDM\n\ncddm = Data.get_cddm()\n\n\ncddm = cddm.iloc[:,:-6]",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#load-pspa",
    "href": "correlation_tyr.html#load-pspa",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Load PSPA",
    "text": "Load PSPA\n\npspa = Data.get_pspa_tyr_norm().iloc[:,:-6]",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#match-pspa-index-to-cddm",
    "href": "correlation_tyr.html#match-pspa-index-to-cddm",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Match PSPA index to CDDM",
    "text": "Match PSPA index to CDDM\n\npspa_info = pd.read_csv('raw/lew_tyr_info.csv')\n\n\npspa\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n...\n5H\n5K\n5R\n5Q\n5N\n5D\n5E\n5s\n5t\n5y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nABL1\n0.0668\n0.0689\n0.0646\n0.0520\n0.0564\n0.0539\n0.0485\n0.0448\n0.0520\n0.0536\n...\n0.0613\n0.0652\n0.0756\n0.0526\n0.0512\n0.0362\n0.0339\n0.0254\n0.0254\n0.0337\n\n\nTNK2\n0.0679\n0.0818\n0.0627\n0.0617\n0.0529\n0.0528\n0.0419\n0.0463\n0.0437\n0.0453\n...\n0.0499\n0.0385\n0.0302\n0.0531\n0.0465\n0.0630\n0.0572\n0.0364\n0.0364\n0.0572\n\n\nALK\n0.0675\n0.0640\n0.0590\n0.0511\n0.0476\n0.0422\n0.0455\n0.0514\n0.0546\n0.0543\n...\n0.0448\n0.0367\n0.0489\n0.0334\n0.0387\n0.0245\n0.0226\n0.0181\n0.0181\n0.0172\n\n\nABL2\n0.0687\n0.0715\n0.0611\n0.0448\n0.0537\n0.0513\n0.0467\n0.0398\n0.0462\n0.0505\n...\n0.0566\n0.0640\n0.0779\n0.0538\n0.0565\n0.0378\n0.0381\n0.0252\n0.0252\n0.0289\n\n\nAXL\n0.0656\n0.0753\n0.0535\n0.0525\n0.0468\n0.0467\n0.0459\n0.0538\n0.0507\n0.0542\n...\n0.0441\n0.0506\n0.0355\n0.0635\n0.0696\n0.0592\n0.0559\n0.0413\n0.0413\n0.0455\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\nKDR\n0.0634\n0.0672\n0.0556\n0.0517\n0.0541\n0.0526\n0.0427\n0.0420\n0.0428\n0.0476\n...\n0.0543\n0.0653\n0.0771\n0.0509\n0.0582\n0.0414\n0.0387\n0.0335\n0.0335\n0.0406\n\n\nFLT4\n0.0457\n0.0531\n0.0488\n0.0553\n0.0512\n0.0471\n0.0432\n0.0499\n0.0474\n0.0530\n...\n0.0624\n0.0564\n0.0559\n0.0537\n0.0610\n0.0620\n0.0528\n0.0600\n0.0600\n0.0464\n\n\nWEE1_TYR\n0.0531\n0.0640\n0.0559\n0.0560\n0.0433\n0.0435\n0.0568\n0.0571\n0.0637\n0.0562\n...\n0.0585\n0.1058\n0.1658\n0.0447\n0.0495\n0.0312\n0.0365\n0.0453\n0.0453\n0.0490\n\n\nYES1\n0.0677\n0.0571\n0.0537\n0.0530\n0.0527\n0.0505\n0.0435\n0.0375\n0.0400\n0.0463\n...\n0.0593\n0.0662\n0.0840\n0.0559\n0.0604\n0.0422\n0.0482\n0.0374\n0.0374\n0.0411\n\n\nZAP70\n0.0602\n0.0880\n0.0623\n0.0496\n0.0471\n0.0514\n0.0465\n0.0380\n0.0307\n0.0526\n...\n0.0484\n0.0477\n0.0290\n0.0520\n0.0537\n0.0709\n0.0710\n0.0862\n0.0862\n0.0605\n\n\n\n\n93 rows × 230 columns",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#get-overlapped-kinase",
    "href": "correlation_tyr.html#get-overlapped-kinase",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Get overlapped kinase",
    "text": "Get overlapped kinase\n\n# non-overlapped\npspa.index[~pspa.index.isin(cddm.index)]\n\nIndex(['BMPR2_TYR', 'DDR1', 'ERBB2', 'LIMK1_TYR', 'LIMK2_TYR', 'MAP2K4_TYR',\n       'MAP2K6_TYR', 'MAP2K7_TYR', 'PKMYT1_TYR', 'NEK10_TYR', 'PDHK1_TYR',\n       'PDHK3_TYR', 'PDHK4_TYR', 'PINK1_TYR', 'TESK1_TYR', 'TNNI3K_TYR',\n       'WEE1_TYR'],\n      dtype='object', name='kinase')\n\n\n\noverlap_kinase = pspa.index[pspa.index.isin(cddm.index)]\noverlap_kinase\n\nIndex(['ABL1', 'TNK2', 'ALK', 'ABL2', 'AXL', 'BLK', 'PTK6', 'BTK', 'CSF1R',\n       'CSK', 'MATK', 'DDR2', 'EGFR', 'EPHA1', 'EPHA2', 'EPHA3', 'EPHA4',\n       'EPHA5', 'EPHA6', 'EPHA7', 'EPHA8', 'EPHB1', 'EPHB2', 'EPHB3', 'EPHB4',\n       'BMX', 'PTK2', 'FER', 'FES', 'FGFR1', 'FGFR2', 'FGFR3', 'FGFR4', 'FGR',\n       'FLT3', 'FRK', 'FYN', 'HCK', 'ERBB4', 'IGF1R', 'INSR', 'INSRR', 'ITK',\n       'JAK1', 'JAK2', 'JAK3', 'KIT', 'LCK', 'LTK', 'LYN', 'MERTK', 'MET',\n       'MST1R', 'MUSK', 'PDGFRA', 'PDGFRB', 'PTK2B', 'RET', 'ROS1', 'SRC',\n       'SRMS', 'SYK', 'TEC', 'TEK', 'TNK1', 'NTRK1', 'NTRK2', 'NTRK3', 'TXK',\n       'TYK2', 'TYRO3', 'FLT1', 'KDR', 'FLT4', 'YES1', 'ZAP70'],\n      dtype='object', name='kinase')\n\n\n\noverlap_column = pspa.columns\n\n\npspa = pspa.loc[overlap_kinase,overlap_column]\n\n\ncddm = cddm.loc[overlap_kinase,overlap_column]",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#pearson",
    "href": "correlation_tyr.html#pearson",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Pearson",
    "text": "Pearson\n\nfrom matplotlib import pyplot as plt\n\n\nd = pspa.corrwith(cddm,axis=1).sort_values(ascending=False)\n\n\npspa.corrwith(cddm,axis=1).sort_values(ascending=False)\n\nkinase\nBLK       0.422068\nTNK2      0.418332\nTXK       0.366034\nLCK       0.364885\nABL2      0.355762\n            ...   \nMATK      0.028732\nFLT4      0.020456\nPTK6     -0.001976\nFES      -0.006169\nPDGFRA   -0.040095\nLength: 76, dtype: float64\n\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\npspa.corrwith(cddm,axis=1).sort_values(ascending=False).plot.bar(figsize=(15,3))\nplt.xlabel('')\nplt.ylabel('Pearson');",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#compare-pssm-heatmaps",
    "href": "correlation_tyr.html#compare-pssm-heatmaps",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Compare PSSM heatmaps",
    "text": "Compare PSSM heatmaps\n\nfrom matplotlib import pyplot as plt\nfrom katlas.plot import *\nimport os, seaborn as sns\nfrom tqdm import tqdm\nfrom PIL import Image\n\n\ndef plot_kinase(df,kinase, title, fname=None, aa_order_paper = [i for i in 'PGACSTVILMFYWHKRQNDEsty']):\n    \n    # get PSSM matrix\n    m = get_one_kinase(df, kinase, drop_s = False).T.loc[aa_order_paper]\n\n    # plot heatmap\n    plot_heatmap(m,title=title)\n    \n    \n    plt.savefig(fname,bbox_inches='tight', pad_inches=0.05) if fname else plt.show()\n    plt.close()\n\n\ndef plot_cor(k,title, fname=None):\n    \n    # plot\n    plot_corr(cddm.loc[k],pspa.loc[k],'CDDM','PSPA')\n    plt.title(title)\n    \n    plt.savefig(fname,bbox_inches='tight', pad_inches=0.2) if fname else plt.show()\n    plt.close()\n\n\nkinase_order = pspa.corrwith(cddm,axis=1).sort_values(ascending=False).index\n\n\nkinase_order\n\nIndex(['BLK', 'TNK2', 'TXK', 'LCK', 'ABL2', 'TEC', 'ABL1', 'FYN', 'EPHA6',\n       'SRMS', 'EPHB4', 'DDR2', 'EPHA5', 'EPHB2', 'YES1', 'EPHB3', 'HCK',\n       'SYK', 'EPHA7', 'FGFR4', 'EPHA2', 'EPHA8', 'EPHA4', 'PTK2B', 'ITK',\n       'LYN', 'FRK', 'PTK2', 'CSF1R', 'JAK3', 'JAK1', 'SRC', 'LTK', 'EPHB1',\n       'AXL', 'MST1R', 'MERTK', 'EPHA1', 'FLT1', 'EGFR', 'FER', 'KIT', 'BMX',\n       'INSRR', 'FGFR3', 'JAK2', 'EPHA3', 'MET', 'BTK', 'FLT3', 'FGR', 'KDR',\n       'ERBB4', 'ZAP70', 'RET', 'TNK1', 'FGFR2', 'TYK2', 'FGFR1', 'ALK',\n       'PDGFRB', 'TEK', 'MUSK', 'TYRO3', 'INSR', 'NTRK3', 'ROS1', 'NTRK1',\n       'NTRK2', 'IGF1R', 'CSK', 'MATK', 'FLT4', 'PTK6', 'FES', 'PDGFRA'],\n      dtype='object', name='kinase')\n\n\n\n# get count of KS pairs in CDDM\ndf = Data.get_ks_dataset()\n\n# Convert substrate names to uppercase\ndf['SUB'] = df['substrate'].str.upper()\n\n# Remove duplicates based on kinase and substrate\ndf_unique = df.drop_duplicates(subset=['kinase_paper', 'SUB'])\n\n# Count unique substrates for each kinase\ncnt_unique = df_unique.groupby('kinase_paper').size()\n\n\n# Count number of substrates (with duplicates) for each kinase\ncnt_general = df.kinase_paper.value_counts()\n\nUncheck below to run all\n\nfor k in tqdm(kinase_order):\n    \n    # print('CDDM')\n    plot_kinase(cddm,k,title= f'{k} from KS datasets (n={cnt_unique[k]})')\n    \n    # print('PSPA')\n    plot_kinase(pspa,k, title = f'{k} from PSPA')\n    \n    plot_cor(k,title = k)\n    \n    break\n\n  0%|          | 0/76 [00:00&lt;?, ?it/s]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  0%|          | 0/76 [00:00&lt;?, ?it/s]\n\n\nTo save, uncomment below\n\n# for k in tqdm(kinase_order):\n    \n#     # print('CDDM')\n#     plot_kinase(cddm,k,title= f'{k} from KS datasets (n={cnt_unique[k]})', fname=f'corr_tyr/CDDM/{k}.png')\n    \n#     # print('PSPA')\n#     plot_kinase(pspa,k, title = f'{k} from PSPA', fname=f'corr_tyr/PSPA/{k}.png')\n    \n#     plot_cor(k,title = k, fname=f'corr_tyr/pear/{k}.png')\n    \n#     # break",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#combine-images",
    "href": "correlation_tyr.html#combine-images",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Combine images",
    "text": "Combine images\n\ndef combine_images_custom_layout(image_paths, output_path):\n    images = [Image.open(image_path).convert('RGBA') for image_path in image_paths]\n    \n    # Calculate total width and height for the new image\n    total_width = max(images[0].width, images[1].width + images[2].width)\n    total_height = images[0].height + max(images[1].height, images[2].height)\n    \n    # Create a new image with calculated dimensions\n    combined_image = Image.new('RGBA', (total_width, total_height))\n    \n    # Paste the first image at the top-center\n    x_offset = (total_width - images[0].width) // 2\n    combined_image.paste(images[0], (x_offset, 0), images[0])\n    \n    # Paste the second image at the bottom-left\n    combined_image.paste(images[1], (0, images[0].height), images[1])\n    \n    # Paste the third image at the bottom-right\n    combined_image.paste(images[2], (images[1].width, images[0].height), images[2])\n    \n    # Save the result\n    combined_image.save(output_path)\n\nUncomment below to save combined figure for pdf\n\n# folders = [\"corr_tyr/pear\",'corr_tyr/CDDM','corr_tyr/PSPA']\n\n# for k in tqdm(kinase_order,total=len(kinase_order)):\n#     filename = f\"{k}.png\"\n#     image_paths = [os.path.join(folder, filename) for folder in folders]\n    \n#     output_path = f\"corr_tyr/combine/{k}.png\"\n#     combine_images_custom_layout(image_paths, output_path)\n    \n#     # break\n\nConvert images to pdf",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "correlation_tyr.html#correlation-of-amino-acids-de-and-phospho-sty",
    "href": "correlation_tyr.html#correlation-of-amino-acids-de-and-phospho-sty",
    "title": "Compare CDDM and PSPA in Tyr kinase",
    "section": "Correlation of amino acids DE and phospho-S/T/Y",
    "text": "Correlation of amino acids DE and phospho-S/T/Y\n\nimport pandas as pd\n\nfrom katlas.core import *\nfrom katlas.plot import *\n\nimport seaborn as sns\nfrom matplotlib import pyplot as plt\n\n\ncddm = Data.get_cddm()\n\npspa= Data.get_pspa_tyr_norm().iloc[:,:-6]\n\n\n# remove dual\npspa = pspa[pspa.index.str.split('_').str.len() ==1]\n\noverlap_kinase = cddm.index.intersection(pspa.index)\n\n\noverlap_columns=pspa.columns\n\n\npspa = pspa.loc[overlap_kinase,overlap_columns]\n\ncddm = cddm.loc[overlap_kinase,overlap_columns]\n\nD = cddm.columns[cddm.columns.str.contains('D')].tolist()\n\nE = cddm.columns[cddm.columns.str.contains('E')].tolist()\n\nDE = D+E\n\ncddm[DE].max(1)\n\ns = cddm.columns[cddm.columns.str.contains('s')].tolist()\nt = cddm.columns[cddm.columns.str.contains('t')].tolist()\ny = cddm.columns[cddm.columns.str.contains('y')].tolist()\n\nsty = s+t+y\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[DE].median(1), pspa[sty].max(1),'CDDM DE median', 'PSPA sty max')\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[E].median(1), pspa[sty].max(1),'CDDM DE median', 'PSPA sty max')\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[E].median(1), pspa[y].max(1),'CDDM DE median', 'PSPA sty max')\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[E].median(1), pspa[s].max(1),'CDDM DE median', 'PSPA sty max')\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[DE].median(1), pspa[t].max(1),'CDDM DE median', 'PSPA s/t max')\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[E].median(1), pspa[y].max(1),'CDDM E median', 'PSPA y max')\n\nplt.figure(figsize=(5,4))\nplot_corr(cddm[D].median(1), pspa[sty].max(1),'CDDM DE median', 'PSPA sty max')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTo save data, uncheck below\n\n# data_list = [cddm[DE].median(1),\n#              cddm[D].median(1),\n#              cddm[E].median(1),\n#              pspa[t].max(1),\n#              pspa[y].max(1)]\n\n# d = pd.concat(data_list,axis=1)\n\n# d.columns=['CDDM_DE_median','CDDM_D_median','CDDM_E_median',\n#            'PSPA_t_max','PSPA_y_max']\n\n# d.to_csv('source/Fig4CD.csv')",
    "crumbs": [
      "Compare CDDM and PSPA in Tyr kinase"
    ]
  },
  {
    "objectID": "enrichment_atm.html",
    "href": "enrichment_atm.html",
    "title": "Kinase enrichment analysis - ATM",
    "section": "",
    "text": "In this session, we will analyze the differential change of phosphorylation sites in phosphoproteomics dataset.",
    "crumbs": [
      "Kinase enrichment analysis - ATM"
    ]
  },
  {
    "objectID": "enrichment_atm.html#setup",
    "href": "enrichment_atm.html#setup",
    "title": "Kinase enrichment analysis - ATM",
    "section": "Setup",
    "text": "Setup\n\n# katlas\nfrom katlas.core import *\nfrom katlas.plot import *\n\n# utils\nimport pandas as pd, numpy as np, seaborn as sns\nfrom matplotlib import pyplot as plt\nfrom functools import reduce, partial\nfrom tqdm import tqdm\n\n# statistics\nfrom scipy.stats import ttest_rel,ttest_ind\nfrom statsmodels.stats.multitest import multipletests\n\n# disable warning\nimport warnings\nwarnings.filterwarnings(\"ignore\", message=\"converting a masked element to nan\")\n\npd.set_option('display.precision', 15)\n\n    \nset_sns()",
    "crumbs": [
      "Kinase enrichment analysis - ATM"
    ]
  },
  {
    "objectID": "enrichment_atm.html#data",
    "href": "enrichment_atm.html#data",
    "title": "Kinase enrichment analysis - ATM",
    "section": "Data",
    "text": "Data\n\ndf = pd.read_csv('raw/ATM_radiation.csv')\n\n\ndf.head()\n\n\n\n\n\n\n\n\nSITE_+/-7_AA\nLog2Fold-Change\n\n\n\n\n0\nSRSGEDEsQEDVLMD\n2.617689667\n\n\n1\nQEAREVNsQEEEEEE\n4.383139333\n\n\n2\nKLFDVCGsQDFESDL\n3.119948000\n\n\n3\nESEKQQDsQPEEVMD\n2.178596333\n\n\n4\nQDGEVQLsQNDDKTK\n0.767963900",
    "crumbs": [
      "Kinase enrichment analysis - ATM"
    ]
  },
  {
    "objectID": "enrichment_atm.html#substrate-scoring",
    "href": "enrichment_atm.html#substrate-scoring",
    "title": "Kinase enrichment analysis - ATM",
    "section": "Substrate scoring",
    "text": "Substrate scoring\n\n# pspa_out = predict_kinase_df(azd,seq_col='site_seq2', **param_PSPA)\ncddm_out = predict_kinase_df(df,seq_col='SITE_+/-7_AA', **param_CDDM_upper)\n\ninput dataframe has a length 37\nPreprocessing\nFinish preprocessing\nCalculating position: [-7, -6, -5, -4, -3, -2, -1, 0, 1, 2, 3, 4, 5, 6, 7]\n\n\n100%|██████████| 289/289 [00:03&lt;00:00, 84.33it/s]",
    "crumbs": [
      "Kinase enrichment analysis - ATM"
    ]
  },
  {
    "objectID": "enrichment_atm.html#kinase-enrichment",
    "href": "enrichment_atm.html#kinase-enrichment",
    "title": "Kinase enrichment analysis - ATM",
    "section": "Kinase enrichment",
    "text": "Kinase enrichment\n\ndef top_kinases(site_row,top_n=5):\n    # Sort the row in descending order and get the top n kinases\n    top_kinases = site_row.sort_values(ascending=False).head(top_n)\n\n    # Get the counts of the top kinases\n    kinase_counts = top_kinases.index.value_counts()\n\n    return kinase_counts\n\n\nfunc = partial(top_kinases,top_n=10)\n\n\ncnt_df = cddm_out.apply(func,axis=1)\n\n\ncnt = cnt_df.sum()\n\n\nw_cnt_df = cnt_df.multiply(df['Log2Fold-Change'],axis=0)\n\n\nw_cnt = w_cnt_df.sum()\n\n\nw_cnt\n\nAKT1       4.160016533\nAKT3       4.160016533\nALK2      15.193937901\nALK4       2.591647667\nAMPKA1     3.844430200\n              ...     \nTLK2       0.859286567\nTNIK       0.859286567\nTSSK1      9.668330334\nTSSK2     13.435776167\nULK3       4.405065666\nLength: 88, dtype: float64\n\n\n\nenrich = pd.concat([cnt,w_cnt],axis=1)\n\n\nenrich.columns = ['count','weighted_count']\n\n\nenrich = enrich.sort_values('weighted_count')\n\n\nset_sns()\n\n\nenrich.tail(10).weighted_count.plot.barh(figsize=(3.6,2))\nplt.xlabel('Enrichement score');",
    "crumbs": [
      "Kinase enrichment analysis - ATM"
    ]
  },
  {
    "objectID": "compare_psp_ls.html",
    "href": "compare_psp_ls.html",
    "title": "Compare PhosphoSitePlus and Large-scale datasets",
    "section": "",
    "text": "from katlas.core import *\nfrom katlas.plot import *\n\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy.stats import spearmanr, pearsonr\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")",
    "crumbs": [
      "Compare PhosphoSitePlus and Large-scale datasets"
    ]
  },
  {
    "objectID": "compare_psp_ls.html#setup",
    "href": "compare_psp_ls.html#setup",
    "title": "Compare PhosphoSitePlus and Large-scale datasets",
    "section": "",
    "text": "from katlas.core import *\nfrom katlas.plot import *\n\nimport pandas as pd\nimport numpy as np\n\nimport matplotlib.pyplot as plt\nimport seaborn as sns\n\nfrom scipy.stats import spearmanr, pearsonr\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")",
    "crumbs": [
      "Compare PhosphoSitePlus and Large-scale datasets"
    ]
  },
  {
    "objectID": "compare_psp_ls.html#load-data",
    "href": "compare_psp_ls.html#load-data",
    "title": "Compare PhosphoSitePlus and Large-scale datasets",
    "section": "Load data",
    "text": "Load data\n\ndf = Data.get_ks_dataset()\n\n\ndf['SUB'] = df.substrate.str.upper()\n\n\nPP = df.query('source == \"pplus\"').reset_index(drop=True)\n\nLS = df.query('source == \"large_scale\"').reset_index(drop=True)",
    "crumbs": [
      "Compare PhosphoSitePlus and Large-scale datasets"
    ]
  },
  {
    "objectID": "compare_psp_ls.html#get-overlap",
    "href": "compare_psp_ls.html#get-overlap",
    "title": "Compare PhosphoSitePlus and Large-scale datasets",
    "section": "Get overlap",
    "text": "Get overlap\n\ncnt = PP[PP.kinase_paper.isin(LS.kinase_paper)].kinase_paper.value_counts()\n\n\noverlap_PP = cnt[cnt&gt;50]",
    "crumbs": [
      "Compare PhosphoSitePlus and Large-scale datasets"
    ]
  },
  {
    "objectID": "compare_psp_ls.html#calculate-pearson",
    "href": "compare_psp_ls.html#calculate-pearson",
    "title": "Compare PhosphoSitePlus and Large-scale datasets",
    "section": "Calculate Pearson",
    "text": "Calculate Pearson\n\ndata = []\nfor k in overlap_PP.index:\n\n    \n    PP_k = PP.query(f'kinase_paper==\"{k}\"')\n    LS_k = LS.query(f'kinase_paper==\"{k}\"')\n    \n    # drop duplicates\n    PP_k = PP_k.drop_duplicates(subset = 'SUB')\n    LS_k = LS_k.drop_duplicates(subset = 'SUB')\n    \n    PP_cnt = PP_k.shape[0]\n    LS_cnt = LS_k.shape[0]\n    \n    PP_paper, PP_full = get_freq(PP_k)\n    LS_paper, LS_full = get_freq(LS_k)\n    \n#     plot_heatmap(PP_paper,f'{k}_PP')\n#     plt.show()\n#     plt.close()\n    \n#     plot_heatmap(LS_paper,f'{k}_LS')\n#     plt.show()\n#     plt.close()\n\n    # Get pearson of full heatmap, then average\n    corr_full,_ = pearsonr(PP_full.unstack().values,LS_full.unstack().values)\n\n    data.append([k,corr_full,PP_cnt,LS_cnt])\n\n\nPP_LS = pd.DataFrame(data,columns=['kinase','pearson',\n                                   'PP_cnt','LS_cnt'])\n\n\nPP_LS.sort_values('pearson')\n\n\nPP_LS['min_cnt'] = PP_LS[['PP_cnt','LS_cnt']].min(axis=1)\n\n\nsns.set(rc={\"figure.dpi\":200, 'savefig.dpi':200})\nsns.set_context('notebook')\nsns.set_style(\"ticks\")\n\nplt.figure(figsize=(5,3))\nPP_LS.pearson.hist(bins=15);\n\n\nPP_LS.plot.scatter(y='pearson',x='min_cnt',c = 'DarkBlue')\nplt.ylabel('Pearson')\nplt.xlabel('min count')\nplt.title('Agreement between two datasets');",
    "crumbs": [
      "Compare PhosphoSitePlus and Large-scale datasets"
    ]
  },
  {
    "objectID": "compare_psp_ls.html#examples",
    "href": "compare_psp_ls.html#examples",
    "title": "Compare PhosphoSitePlus and Large-scale datasets",
    "section": "Examples",
    "text": "Examples\n\n# Get one example\nk = 'CDK1'\n\nPP_k = PP.query(f'kinase_paper==\"{k}\"')\nLS_k = LS.query(f'kinase_paper==\"{k}\"')\n\n# drop duplicates\nPP_k = PP_k.drop_duplicates(subset = 'SUB')\nLS_k = LS_k.drop_duplicates(subset = 'SUB')\n\n\nPP_paper, PP_full = get_freq(PP_k)\nLS_paper, LS_full = get_freq(LS_k)\n\n\nplot_heatmap(PP_paper,f'{k}_PP')\nplot_heatmap(LS_paper,f'{k}_LS')\n\n\nk = 'CK2A1'\n\nPP_k = PP.query(f'kinase_paper==\"{k}\"')\nLS_k = LS.query(f'kinase_paper==\"{k}\"')\n\n# drop duplicates\nPP_k = PP_k.drop_duplicates(subset = 'SUB')\nLS_k = LS_k.drop_duplicates(subset = 'SUB')\n\nPP_paper, PP_full = get_freq(PP_k)\nLS_paper, LS_full = get_freq(LS_k)\n\n\nplot_heatmap(PP_paper,f'{k}_PP')\nplot_heatmap(LS_paper,f'{k}_LS')",
    "crumbs": [
      "Compare PhosphoSitePlus and Large-scale datasets"
    ]
  },
  {
    "objectID": "others_00_prepare_pct_reference.html",
    "href": "others_00_prepare_pct_reference.html",
    "title": "Get reference score to calculate percentile",
    "section": "",
    "text": "from katlas.imports import *\nimport pickle, pandas as pd,numpy as np, seaborn as sns,matplotlib.pyplot as plt\nfrom numpy import trapz",
    "crumbs": [
      "Get reference score to calculate percentile"
    ]
  },
  {
    "objectID": "others_00_prepare_pct_reference.html#setup",
    "href": "others_00_prepare_pct_reference.html#setup",
    "title": "Get reference score to calculate percentile",
    "section": "",
    "text": "from katlas.imports import *\nimport pickle, pandas as pd,numpy as np, seaborn as sns,matplotlib.pyplot as plt\nfrom numpy import trapz",
    "crumbs": [
      "Get reference score to calculate percentile"
    ]
  },
  {
    "objectID": "others_00_prepare_pct_reference.html#scoring",
    "href": "others_00_prepare_pct_reference.html#scoring",
    "title": "Get reference score to calculate percentile",
    "section": "Scoring",
    "text": "Scoring\nDownload supp table3 (sheet2) from nature Ser/Thr kinase paper and supp table3 (sheet3, with non-canonical) from nature Tyr kinase paper\nThese two files are too big to upload to the current repository, please download the files yourself.\n\n# df = pd.read_csv('supp3_ST.csv')\ndf = pd.read_csv('supp3_tyr.csv')\n\nCheck whether the sequence contains lowercase other than the phospho-acceptor\n\ndf['SITE_+/-7_AA'].str[0:7].str.contains('[a-z]').value_counts()\n\nSITE_+/-7_AA\nFalse    7315\nName: count, dtype: int64\n\n\n\ndf['SITE_+/-7_AA'].str[8:].str.contains('[a-z]').value_counts()\n\nSITE_+/-7_AA\nFalse    7315\nName: count, dtype: int64\n\n\nIt seems the sequence in the supp3 does not contains phosphorylated sequence.\nConvert column names\n\ncols=df.columns[df.columns.str.contains('_percentile')][1:]\n\n# get the target\ntarget = df[cols]\n\n\ntarget.columns = target.columns.str.split('_').str[0]\n\nBelow is for tyr only, as we need to transform the name to be consistent\n\nkinase_dict = pd.read_csv('raw/lew_tyr_info.csv')\n\n\nname_dict = kinase_dict.set_index('lew_kinase2')['kinase_tyr']\n\n\ntarget.columns = target.columns.map(name_dict)\n\n\ntarget.head()\n\n\n\n\n\n\n\n\nABL1\nTNK2\nALK\nABL2\nAXL\nBLK\nBMPR2_TYR\nPTK6\nBTK\nCSF1R\nCSK\nMATK\nDDR1\nDDR2\nEGFR\nEPHA1\nEPHA2\nEPHA3\nEPHA4\nEPHA5\nEPHA6\nEPHA7\nEPHA8\nEPHB1\nEPHB2\nEPHB3\nEPHB4\nBMX\nPTK2\nFER\nFES\nFGFR1\nFGFR2\nFGFR3\nFGFR4\nFGR\nFLT3\nFRK\nFYN\nHCK\nERBB2\nERBB4\nIGF1R\nINSR\nINSRR\nITK\nJAK1\nJAK2\nJAK3\nKIT\nLCK\nLIMK1_TYR\nLIMK2_TYR\nLTK\nLYN\nMERTK\nMET\nMAP2K4_TYR\nMAP2K6_TYR\nMAP2K7_TYR\nMST1R\nMUSK\nPKMYT1_TYR\nNEK10_TYR\nPDGFRA\nPDGFRB\nPDHK1_TYR\nPDHK3_TYR\nPDHK4_TYR\nPINK1_TYR\nPTK2B\nRET\nROS1\nSRC\nSRMS\nSYK\nTEC\nTESK1_TYR\nTEK\nTNK1\nTNNI3K_TYR\nNTRK1\nNTRK2\nNTRK3\nTXK\nTYK2\nTYRO3\nFLT1\nKDR\nFLT4\nWEE1_TYR\nYES1\nZAP70\n\n\n\n\n0\n36.18\n6.22\n27.40\n46.44\n49.64\n87.22\n78.99\n98.40\n71.50\n26.37\n90.22\n93.41\n12.52\n22.11\n79.36\n18.85\n58.28\n37.30\n69.07\n71.50\n24.25\n27.75\n64.70\n41.30\n76.43\n59.62\n42.81\n61.77\n91.84\n95.64\n79.32\n25.83\n41.72\n63.80\n89.69\n94.16\n38.89\n42.42\n99.87\n90.09\n41.93\n58.44\n86.36\n51.67\n57.80\n61.20\n5.36\n6.46\n8.84\n34.86\n83.74\n2.54\n2.34\n54.93\n83.98\n78.71\n27.29\n41.43\n92.16\n51.72\n5.28\n17.51\n12.72\n7.70\n3.17\n22.57\n96.65\n70.10\n74.98\n77.46\n76.65\n39.40\n7.86\n98.82\n88.18\n86.48\n58.13\n0.85\n16.63\n7.79\n0.68\n82.19\n57.28\n57.63\n73.82\n16.04\n27.23\n51.22\n21.43\n37.76\n47.45\n99.67\n62.11\n\n\n1\n72.93\n31.82\n45.68\n60.52\n41.74\n34.16\n40.25\n69.07\n47.87\n38.26\n74.41\n62.25\n69.23\n43.84\n66.23\n61.17\n76.28\n45.94\n51.26\n40.58\n62.25\n46.36\n46.36\n36.40\n31.87\n28.93\n16.52\n36.00\n27.03\n41.94\n60.14\n40.12\n67.21\n57.41\n68.86\n24.32\n50.71\n37.53\n35.76\n50.03\n66.64\n35.72\n42.17\n47.12\n43.38\n24.05\n34.25\n51.28\n47.06\n65.70\n41.34\n54.30\n70.01\n60.52\n45.30\n43.86\n47.49\n52.27\n23.03\n60.08\n59.09\n48.17\n26.40\n96.04\n53.40\n32.85\n61.31\n74.96\n37.58\n50.25\n57.78\n71.04\n17.07\n49.22\n61.17\n30.66\n56.25\n36.92\n16.90\n47.01\n17.29\n44.76\n45.41\n49.90\n44.37\n44.52\n36.18\n64.74\n33.12\n50.84\n40.25\n46.09\n15.02\n\n\n2\n3.11\n75.58\n2.80\n2.85\n23.33\n0.41\n33.75\n14.55\n10.83\n9.41\n26.77\n22.19\n20.42\n25.69\n2.52\n23.51\n5.62\n16.81\n16.13\n8.84\n41.58\n21.67\n6.00\n3.44\n3.52\n8.29\n9.37\n2.98\n9.70\n0.35\n3.26\n9.45\n18.80\n7.05\n1.73\n1.53\n28.63\n7.77\n1.10\n0.24\n2.52\n2.78\n0.57\n1.20\n1.29\n3.20\n9.26\n9.02\n24.05\n10.35\n0.61\n97.24\n92.14\n4.11\n1.36\n2.56\n12.32\n12.02\n28.93\n94.92\n25.12\n15.12\n84.33\n68.74\n50.93\n25.13\n64.67\n37.47\n75.49\n86.50\n2.36\n20.36\n10.02\n0.68\n3.96\n1.57\n3.22\n96.45\n23.03\n86.41\n68.24\n1.36\n1.42\n0.33\n1.95\n29.09\n11.86\n24.97\n29.11\n35.98\n97.79\n1.36\n1.03\n\n\n3\n81.77\n87.26\n41.91\n83.34\n83.72\n54.91\n24.01\n51.59\n63.93\n29.72\n59.95\n66.97\n17.75\n4.20\n16.79\n85.64\n61.11\n78.49\n58.44\n70.59\n68.81\n66.71\n54.00\n61.54\n69.60\n80.30\n84.39\n67.56\n59.77\n60.89\n28.37\n10.64\n9.69\n8.71\n11.78\n59.40\n57.10\n60.93\n32.20\n51.06\n18.87\n28.89\n12.23\n19.22\n12.34\n62.79\n49.11\n23.44\n17.31\n21.84\n71.33\n90.33\n85.16\n58.64\n51.30\n77.52\n41.39\n95.03\n53.82\n54.58\n67.23\n75.29\n59.34\n71.70\n47.63\n40.56\n35.11\n60.54\n30.62\n86.12\n88.82\n45.66\n39.27\n18.91\n60.71\n45.68\n74.22\n63.54\n59.31\n43.42\n44.50\n28.26\n45.13\n39.29\n81.42\n13.09\n75.40\n27.66\n33.97\n18.85\n87.66\n30.93\n45.39\n\n\n4\n30.44\n30.38\n39.00\n26.64\n60.36\n38.28\n88.22\n62.60\n76.95\n80.45\n64.19\n87.20\n56.38\n67.89\n79.05\n60.60\n64.35\n72.51\n55.90\n70.15\n81.44\n70.72\n73.69\n65.46\n76.19\n72.31\n89.08\n67.59\n61.44\n29.11\n44.23\n75.31\n48.02\n52.27\n61.68\n69.12\n79.49\n55.66\n27.51\n46.03\n64.98\n60.38\n65.24\n83.98\n51.35\n79.60\n85.99\n56.95\n93.52\n68.90\n57.17\n48.72\n44.74\n27.71\n40.64\n40.27\n83.12\n33.14\n46.18\n14.64\n85.51\n94.37\n59.55\n61.43\n92.23\n96.87\n27.66\n33.00\n35.46\n34.56\n36.97\n68.35\n83.94\n48.41\n21.97\n68.62\n60.93\n44.93\n86.25\n46.66\n98.80\n70.61\n94.84\n86.87\n56.16\n70.65\n84.24\n80.78\n72.93\n79.01\n95.19\n39.35\n74.46",
    "crumbs": [
      "Get reference score to calculate percentile"
    ]
  },
  {
    "objectID": "others_00_prepare_pct_reference.html#scoring-1",
    "href": "others_00_prepare_pct_reference.html#scoring-1",
    "title": "Get reference score to calculate percentile",
    "section": "Scoring",
    "text": "Scoring\n\nresult = predict_kinase_df(df,'SITE_+/-7_AA',**param_PSPA)\n\ninput dataframe has a length 7315\nPreprocessing\nFinish preprocessing\nMerging reference\nFinish merging\n\n\n100%|██████████| 396/396 [00:02&lt;00:00, 157.53it/s]\n\n\n\n# get the percentile score\npercentile = result[target.columns].rank(axis=0,pct=True)\n\n\npercentile = (percentile*100).round(2)\n\n\npercentile.head()\n\n\n\n\n\n\n\n\nABL1\nTNK2\nALK\nABL2\nAXL\nBLK\nBMPR2_TYR\nPTK6\nBTK\nCSF1R\nCSK\nMATK\nDDR1\nDDR2\nEGFR\nEPHA1\nEPHA2\nEPHA3\nEPHA4\nEPHA5\nEPHA6\nEPHA7\nEPHA8\nEPHB1\nEPHB2\nEPHB3\nEPHB4\nBMX\nPTK2\nFER\nFES\nFGFR1\nFGFR2\nFGFR3\nFGFR4\nFGR\nFLT3\nFRK\nFYN\nHCK\nERBB2\nERBB4\nIGF1R\nINSR\nINSRR\nITK\nJAK1\nJAK2\nJAK3\nKIT\nLCK\nLIMK1_TYR\nLIMK2_TYR\nLTK\nLYN\nMERTK\nMET\nMAP2K4_TYR\nMAP2K6_TYR\nMAP2K7_TYR\nMST1R\nMUSK\nPKMYT1_TYR\nNEK10_TYR\nPDGFRA\nPDGFRB\nPDHK1_TYR\nPDHK3_TYR\nPDHK4_TYR\nPINK1_TYR\nPTK2B\nRET\nROS1\nSRC\nSRMS\nSYK\nTEC\nTESK1_TYR\nTEK\nTNK1\nTNNI3K_TYR\nNTRK1\nNTRK2\nNTRK3\nTXK\nTYK2\nTYRO3\nFLT1\nKDR\nFLT4\nWEE1_TYR\nYES1\nZAP70\n\n\n\n\n0\n36.90\n6.23\n26.32\n46.87\n49.48\n87.50\n78.57\n98.49\n71.71\n25.83\n89.54\n93.08\n12.08\n21.67\n77.75\n18.28\n57.33\n36.49\n67.95\n70.62\n24.37\n27.27\n63.62\n41.39\n75.71\n59.68\n43.03\n62.14\n91.13\n95.52\n78.35\n25.27\n40.98\n62.66\n88.20\n94.21\n36.96\n41.16\n99.84\n90.01\n40.20\n57.33\n85.35\n50.85\n57.27\n61.66\n5.32\n6.25\n8.63\n34.05\n84.16\n3.10\n2.80\n54.25\n83.56\n78.68\n27.61\n42.73\n92.39\n52.09\n5.41\n16.96\n13.69\n8.03\n2.92\n21.61\n96.40\n70.79\n75.19\n77.29\n76.60\n38.91\n7.80\n98.78\n87.28\n85.72\n57.67\n1.11\n16.04\n8.06\n0.77\n80.68\n55.93\n56.02\n74.24\n15.55\n27.09\n50.01\n20.96\n36.08\n48.09\n99.69\n62.03\n\n\n1\n73.94\n31.87\n45.08\n61.11\n41.85\n34.85\n40.27\n69.06\n47.25\n37.45\n73.02\n61.91\n69.23\n43.32\n64.44\n60.55\n74.88\n44.68\n50.25\n39.88\n61.72\n45.71\n45.65\n36.37\n31.93\n28.73\n17.05\n35.85\n26.68\n41.67\n58.79\n39.35\n66.12\n56.15\n67.02\n24.81\n48.69\n36.55\n36.03\n50.15\n65.15\n35.11\n41.13\n46.32\n42.75\n24.33\n33.27\n49.55\n46.72\n63.94\n41.44\n55.50\n71.09\n60.08\n45.00\n43.78\n47.36\n53.40\n23.47\n59.51\n58.15\n47.46\n27.73\n95.82\n52.02\n31.86\n60.87\n75.47\n37.70\n50.42\n57.81\n70.94\n16.81\n49.34\n61.06\n30.30\n55.67\n38.15\n16.22\n47.40\n18.19\n43.98\n44.49\n48.59\n45.42\n42.92\n36.49\n63.37\n32.42\n49.25\n41.07\n46.65\n15.55\n\n\n2\n3.01\n76.08\n2.55\n2.80\n23.14\n0.43\n33.66\n14.39\n10.26\n9.00\n25.57\n21.89\n19.71\n25.13\n2.59\n22.71\n5.43\n16.93\n16.00\n8.59\n41.55\n21.48\n5.87\n3.41\n3.63\n8.22\n9.58\n3.06\n9.70\n0.33\n3.30\n9.23\n18.08\n6.86\n1.88\n1.58\n27.13\n7.29\n1.32\n0.28\n2.32\n2.93\n0.57\n1.21\n1.21\n3.34\n9.22\n8.74\n23.86\n9.67\n0.65\n96.85\n92.00\n3.79\n1.32\n2.48\n12.32\n13.02\n29.02\n94.74\n25.00\n14.46\n84.91\n68.87\n49.34\n24.04\n64.31\n38.23\n75.62\n86.30\n2.55\n20.02\n9.95\n0.73\n4.05\n1.62\n3.06\n96.47\n22.48\n86.21\n68.06\n1.51\n1.35\n0.40\n2.00\n27.79\n11.75\n23.90\n28.22\n34.54\n97.48\n1.47\n1.13\n\n\n3\n82.29\n87.57\n41.46\n83.82\n83.94\n55.37\n23.93\n51.19\n63.75\n29.02\n58.52\n66.27\n17.08\n4.27\n16.53\n85.72\n59.79\n77.56\n57.29\n69.70\n68.59\n65.58\n53.55\n60.72\n68.81\n79.94\n84.15\n67.80\n59.45\n60.17\n27.33\n10.42\n9.26\n8.47\n11.31\n59.98\n55.28\n59.82\n32.71\n51.19\n17.87\n28.43\n11.50\n18.82\n12.15\n63.41\n47.95\n22.69\n17.00\n21.00\n72.05\n90.03\n85.13\n57.96\n51.13\n77.29\n41.63\n95.50\n54.62\n54.94\n66.61\n74.57\n60.31\n71.74\n46.24\n39.64\n35.13\n61.16\n30.64\n86.02\n88.81\n44.81\n39.30\n19.16\n60.64\n44.98\n74.25\n64.19\n59.13\n43.81\n44.76\n27.50\n44.24\n38.65\n81.51\n12.64\n75.78\n26.61\n33.20\n17.67\n86.80\n31.91\n45.39\n\n\n4\n31.05\n30.53\n38.42\n28.13\n60.13\n38.78\n88.18\n62.51\n77.00\n79.15\n62.96\n86.69\n55.73\n67.27\n77.48\n59.87\n63.15\n71.18\n54.73\n69.28\n81.18\n69.69\n72.53\n64.53\n75.33\n71.95\n88.88\n67.85\n60.99\n28.97\n42.93\n74.40\n47.06\n50.79\n60.36\n69.69\n78.28\n55.02\n27.99\n46.10\n63.34\n59.35\n64.19\n82.99\n50.90\n80.06\n85.22\n54.84\n93.25\n67.05\n57.78\n49.97\n47.05\n27.16\n40.51\n40.21\n82.30\n34.11\n46.84\n14.78\n85.42\n94.09\n60.42\n61.47\n91.64\n96.68\n27.44\n33.72\n35.55\n34.89\n37.20\n68.28\n83.66\n48.50\n22.19\n67.38\n60.68\n46.77\n86.17\n47.33\n98.80\n68.70\n94.39\n85.68\n57.07\n68.78\n84.63\n79.69\n72.34\n77.55\n94.72\n40.12\n73.87\n\n\n\n\n\n\n\nCompare the calculated percentile with the target, they are very similar. The differences are due to raw data rounding.",
    "crumbs": [
      "Get reference score to calculate percentile"
    ]
  },
  {
    "objectID": "others_00_prepare_pct_reference.html#compare",
    "href": "others_00_prepare_pct_reference.html#compare",
    "title": "Get reference score to calculate percentile",
    "section": "Compare",
    "text": "Compare\n\n(target-percentile).abs().max().sort_values()\n\nMERTK        0.45\nPTK2B        0.51\nAXL          0.53\nSRC          0.64\nROS1         0.65\n             ... \nNTRK1        2.18\nTESK1_TYR    2.19\nJAK2         2.30\nFLT3         2.31\nLIMK2_TYR    2.67\nLength: 93, dtype: float64\n\n\nNo much difference between the two\n\n# save the result for reference\n# result.round(3).to_parquet('ochoa_pspa_score.parquet')",
    "crumbs": [
      "Get reference score to calculate percentile"
    ]
  },
  {
    "objectID": "others_00_prepare_pct_reference.html#to-use",
    "href": "others_00_prepare_pct_reference.html#to-use",
    "title": "Get reference score to calculate percentile",
    "section": "To use",
    "text": "To use\nWe’ve saved the reference sheet in Data and can load using the below function:\n\npct_ref = Data.get_ochoa_score()\n\n\nscore_df = predict_kinase_df(df,'site_seq',**param_PSPA)\n\ninput dataframe has a length 35\nPreprocessing\nFinish preprocessing\nCalculating position: [-5, -4, -3, -2, -1, 0, 1, 2, 3, 4]\n\n\n  0%|          | 0/303 [00:00&lt;?, ?it/s]/usr/local/lib/python3.9/dist-packages/katlas/core.py:575: RuntimeWarning: divide by zero encountered in log2\n  log_sum = np.sum(np.log2(values)) + (len(values) - 1) * np.log2(divide)\n100%|██████████| 303/303 [00:00&lt;00:00, 1096.01it/s]\n\n\n\npct = get_pct_df(score_df,pct_ref)\n\n\nsite = 'PGGNIyIsPLksPyk'\nget_pct(site,pct_ref)",
    "crumbs": [
      "Get reference score to calculate percentile"
    ]
  },
  {
    "objectID": "ml_training.html",
    "href": "ml_training.html",
    "title": "DL/ML Training",
    "section": "",
    "text": "# essentials\nfrom fastbook import *\nfrom katlas.imports import *\nfrom katlas.train import *\nfrom katlas.dl import *\nimport seaborn as sns\n\n# sklearn\nfrom sklearn.neighbors import *\nfrom sklearn.linear_model import *\nfrom sklearn.tree import *\nfrom sklearn.svm import *\nfrom sklearn.ensemble import *\nfrom sklearn.multioutput import MultiOutputRegressor",
    "crumbs": [
      "DL/ML Training"
    ]
  },
  {
    "objectID": "ml_training.html#setup",
    "href": "ml_training.html#setup",
    "title": "DL/ML Training",
    "section": "",
    "text": "# essentials\nfrom fastbook import *\nfrom katlas.imports import *\nfrom katlas.train import *\nfrom katlas.dl import *\nimport seaborn as sns\n\n# sklearn\nfrom sklearn.neighbors import *\nfrom sklearn.linear_model import *\nfrom sklearn.tree import *\nfrom sklearn.svm import *\nfrom sklearn.ensemble import *\nfrom sklearn.multioutput import MultiOutputRegressor",
    "crumbs": [
      "DL/ML Training"
    ]
  },
  {
    "objectID": "ml_training.html#data",
    "href": "ml_training.html#data",
    "title": "DL/ML Training",
    "section": "Data",
    "text": "Data\n\n# T5 data\nt5_kd = pd.read_parquet('train_data/combine_t5_kd.parquet').reset_index()\nt5 = pd.read_parquet('train_data/combine_t5.parquet').reset_index()\n\n# ESM data\nesm_kd = pd.read_parquet('train_data/combine_esm_kd.parquet').reset_index()\nesm = pd.read_parquet('train_data/combine_esm.parquet').reset_index()\n\n# feature col\nt5_col = t5.columns[t5.columns.str.startswith('T5_')]\nesm_col = esm.columns[esm.columns.str.startswith('esm_')]\n\n# target col\ntarget_col = t5.columns[~t5.columns.isin(t5_col)][1:]\n\n\nt5_col,esm_col,target_col\n\n(Index(['T5_0', 'T5_1', 'T5_2', 'T5_3', 'T5_4', 'T5_5', 'T5_6', 'T5_7', 'T5_8',\n        'T5_9',\n        ...\n        'T5_1014', 'T5_1015', 'T5_1016', 'T5_1017', 'T5_1018', 'T5_1019',\n        'T5_1020', 'T5_1021', 'T5_1022', 'T5_1023'],\n       dtype='object', length=1024),\n Index(['esm_0', 'esm_1', 'esm_2', 'esm_3', 'esm_4', 'esm_5', 'esm_6', 'esm_7',\n        'esm_8', 'esm_9',\n        ...\n        'esm_1270', 'esm_1271', 'esm_1272', 'esm_1273', 'esm_1274', 'esm_1275',\n        'esm_1276', 'esm_1277', 'esm_1278', 'esm_1279'],\n       dtype='object', length=1280),\n Index(['-5P', '-5G', '-5A', '-5C', '-5S', '-5T', '-5V', '-5I', '-5L', '-5M',\n        ...\n        '4Q', '4N', '4D', '4E', '4s', '4t', '4y', '0s', '0t', '0y'],\n       dtype='object', length=210))",
    "crumbs": [
      "DL/ML Training"
    ]
  },
  {
    "objectID": "ml_training.html#kfold-split",
    "href": "ml_training.html#kfold-split",
    "title": "DL/ML Training",
    "section": "Kfold Split",
    "text": "Kfold Split\n\nsource = pd.read_excel('train_data/combine_info_PSPA.xlsx').iloc[:,:2]\n\ninfo = Data.get_kinase_info().query('pseudo !=\"1\"')\n\ninfo = source.merge(info,how='left')\n\n\ninfo[info.kinase.str.contains('MEK')]\n\n\n\n\n\n\n\n\nkinase\nsource\nID_coral\nuniprot\nID_HGNC\ngroup\nfamily\nsubfamily_coral\nsubfamily\nin_ST_paper\nin_Tyr_paper\nin_cddm\npseudo\npspa_category_small\npspa_category_big\ncddm_big\ncddm_small\nlength\nhuman_uniprot_sequence\nkinasecom_domain\nnucleus\ncytosol\ncytoskeleton\nplasma membrane\nmitochondrion\nGolgi apparatus\nendoplasmic reticulum\nvesicle\ncentrosome\naggresome\nmain_location\n\n\n\n\n183\nMEK1\nPSPA\nMAP2K1\nQ02750\nMAP2K1\nSTE\nSTE7\nNone\nSTE7\n1\n0\n1\n0\nassorted\nassorted\n2.0\n12.0\n393\nMPKKKPTPIQLNPAPDGSAVNGTSSAETNLEALQKKLEELELDEQQRKRLEAFLTQKQKVGELKDDDFEKISELGAGNGGVVFKVSHKPSGLVMARKLIHLEIKPAIRNQIIRELQVLHECNSPYIVGFYGAFYSDGEISICMEHMDGGSLDQVLKKAGRIPEQILGKVSIAVIKGLTYLREKHKIMHRDVKPSNILVNSRGEIKLCDFGVSGQLIDSMANSFVGTRSYMSPERLQGTHYSVQSDIWSMGLSLVEMAVGRYPIPPPDAKELELMFGCQVEGDAAETPPRPRTPGRPLSSYGMDSRPPMAIFELLDYIVNEPPPKLPSGVFSLEFQDFVNKCLIKNPAERADLKQLMVHAFIKRSDAEEVDFAGWLCSTIGLNQPSTPTHAAGV\nFEKISELGAGNGGVVFKVSHKPSGLVMARKLIHLEIKPAIRNQIIRELQVLHECNSPYIVGFYGAFYSDGEISICMEHMDGGSLDQVLKKAGRIPEQILGKVSIAVIKGLTYLREKHKIMHRDVKPSNILVNSRGEIKLCDFGVSGQLIDSMANSFVGTRSYMSPERLQGTHYSVQSDIWSMGLSLVEMAVGRYPIPPPDAKELELMFGCQVEGDAAETPPRPRTPGRPLSSYGMDSRPPMAIFELLDYIVNEPPPKLPSGVFSLEFQDFVNKCLIKNPAERADLKQLMVHAFI\nNaN\n7.0\nNaN\n3.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n184\nMEK2\nPSPA\nMAP2K2\nP36507\nMAP2K2\nSTE\nSTE7\nNone\nSTE7\n1\n0\n1\n0\nassorted\nassorted\n2.0\n12.0\n95\nMLARRKPVLPALTINPTIAEGPSPTSEGASEANLVDLQKKLEELELDEQQKKRLEAFLTQKAKVGELKDDDFERISELGAGNGGVVTKVQHRPSGLIMARKLIHLEIKPAIRNQIIRELQVLHECNSPYIVGFYGAFYSDGEISICMEHMDGGSLDQVLKEAKRIPEEILGKVSIAVLRGLAYLREKHQIMHRDVKPSNILVNSRGEIKLCDFGVSGQLIDSMANSFVGTRSYMAPERLQGTHYSVQSDIWSMGLSLVELAVGRYPIPPPDAKELEAIFGRPVVDGEEGEPHSISPRPRPPGRPVSGHGMDSRPAMAIFELLDYIVNEPPPKLPNGVFTPDFQEFVNKCLIKNPAERADLKMLTNHTFIKRSEVEEVDFAGWLCKTLRLNQPGTPTRTAV\nFERISELGAGNGGVVTKVQHRPSGLIMARKLIHLEIKPAIRNQIIRELQVLHECNSPYIVGFYGAFYSDGEISICMEHMDGGSLDQVLKEAKRIPEEILGKVSIAVLRGLAYLREKHQIMHRDVKPSNILVNSRGEIKLCDFGVSGQLIDSMANSFVGTRSYMAPERLQGTHYSVQSDIWSMGLSLVELAVGRYPIPPPDAKELEAIFGRPVVDGEEGEPHSISPRPRPPGRPVSGHGMDSRPAMAIFELLDYIVNEPPPKLPNGVFTPDFQEFVNKCLIKNPAERADLKMLTNHTFI\nNaN\n7.0\nNaN\n3.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n185\nMEK5\nPSPA\nMAP2K5\nQ13163\nMAP2K5\nSTE\nSTE7\nNone\nSTE7\n1\n0\n1\n0\nMAP3K\nMAP3K\n2.0\n7.0\n448\nMLWLALGPFPAMENQVLVIRIKIPNSGAVDWTVHSGPQLLFRDVLDVIGQVLPEATTTAFEYEDEDGDRITVRSDEEMKAMLSYYYSTVMEQQVNGQLIEPLQIFPRACKPPGERNIHGLKVNTRAGPSQHSSPAVSDSLPSNSLKKSSAELKKILANGQMNEQDIRYRDTLGHGNGGTVYKAYHVPSGKILAVKVILLDITLELQKQIMSELEILYKCDSSYIIGFYGAFFVENRISICTEFMDGGSLDVYRKMPEHVLGRIAVAVVKGLTYLWSLKILHRDVKPSNMLVNTRGQVKLCDFGVSTQLVNSIAKTYVGTNAYMAPERISGEQYGIHSDVWSLGISFMELALGRFPYPQIQKNQGSLMPLQLLQCIVDEDSPVLPVGEFSEPFVHFITQCMRKQPKERPAPEELMGHPFIVQFNDGNAAVVSMWVCRALEERRSQQGPP\nIRYRDTLGHGNGGTVYKAYHVPSGKILAVKVILLDITLELQKQIMSELEILYKCDSSYIIGFYGAFFVENRISICTEFMDGGSLDVYRKMPEHVLGRIAVAVVKGLTYLWSLKILHRDVKPSNMLVNTRGQVKLCDFGVSTQLVNSIAKTYVGTNAYMAPERISGEQYGIHSDVWSLGISFMEIQKNQGSLMPLQLLQCIVDEDSPVLPVGEFSEPFVHFITQCMRKQPKERPAPEELMGHPFI\n3.0\n6.0\nNaN\n1.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n186\nMEKK1\nPSPA\nMAP3K1\nQ13233\nMAP3K1\nSTE\nSTE11\nNone\nSTE11\n1\n0\n1\n0\nMAP3K\nMAP3K\n2.0\n9.0\n339\nMAAAAGNRASSSGFPGARATSPEAGGGGGALKASSAPAAAAGLLREAGSGGRERADWRRRQLRKVRSVELDQLPEQPLFLAASPPASSTSPSPEPADAAGSGTGFQPVAVPPPHGAASRGGAHLTESVAAPDSGASSPAAAEPGEKRAPAAEPSPAAAPAGREMENKETLKGLHKMDDRPEERMIREKLKATCMPAWKHEWLERRNRRGPVVVKPIPVKGDGSEMNHLAAESPGEVQASAASPASKGRRSPSPGNSPSGRTVKSESPGVRRKRVSPVPFQSGRITPPRRAPSPDGFSPYSPEETNRRVNKVMRARLYLLQQIGPNSFLIGGDSPDNKYRVFIGPQNCSCARGTFCIHLLFVMLRVFQLEPSDPMLWRKTLKNFEVESLFQKYHSRRSSRIKAPSRNTIQKFVSRMSNSHTLSSSSTSTSSSENSIKDEEEQMCPICLLGMLDEESLTVCEDGCRNKLHHHCMSIWAEECRRNREPLICPLCRSKWRSHDFYSHELSSPVDSPSSLRAAQQQTVQQQPLAGSRRNQESNFNLTHYGTQQIPPAYKDLAEPWIQVFGMELVGCLFSRNWNVREMALRRLSHDVSGALL...\nWLKGQQIGLGAFSSCYQAQDVGTGTLMAVKQVTYVRNTSSEQEEVVEALREEIRMMSHLNHPNIIRMLGATCEKSNYNLFIEWMAGGSVAHLLSKYGAFKESVVINYTEQLLRGLSYLHENQIIHRDVKGANLLIDSTGQRLRIADFGAAARLASKGTGAGEFQGQLLGTIAFMAPEVLRGQQYGRSCDVWSVGCAIIEMACAKPPWNAEKHSNHLALIFKIASATTAPSIPSHLSPGLRDVALRCLELQPQDRPPSRELLKHPVF\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNone\n\n\n187\nMEKK2\nPSPA\nMAP3K2\nQ9Y2U5\nMAP3K2\nSTE\nSTE11\nNone\nSTE11\n1\n0\n1\n0\nMAP3K\nMAP3K\n2.0\n12.0\n619\nMDDQQALNSIMQDLAVLHKASRPALSLQETRKAKSSSPKKQNDVRVKFEHRGEKRILQFPRPVKLEDLRSKAKIAFGQSMDLHYTNNELVIPLTTQDDLDKAVELLDRSIHMKSLKILLVINGSTQATNLEPLPSLEDLDNTVFGAERKKRLSIIGPTSRDRSSPPPGYIPDELHQVARNGSFTSINSEGEFIPESMDQMLDPLSLSSPENSGSGSCPSLDSPLDGESYPKSRMPRAQSYPDNHQEFSDYDNPIFEKFGKGGTYPRRYHVSYHHQEYNDGRKTFPRARRTQGTSLRSPVSFSPTDHSLSTSSGSSIFTPEYDDSRIRRRGSDIDNPTLTVMDISPPSRSPRAPTNWRLGKLLGQGAFGRVYLCYDVDTGRELAVKQVQFDPDSPETSKEVNALECEIQLLKNLLHERIVQYYGCLRDPQEKTLSIFMEYMPGGSIKDQLKAYGALTENVTRKYTRQILEGVHYLHSNMIVHRDIKGANILRDSTGNVKLGDFGASKRLQTICLSGTGMKSVTGTPYWMSPEVISGEGYGRKADIWSVACTVVEMLTEKPPWAEFEAMAAIFKIATQPTNPKLPPHVSDYTRDFLKR...\nWRLGKLLGQGAFGRVYLCYDVDTGRELAVKQVQFDPDSPETSKEVNALECEIQLLKNLLHERIVQYYGCLRDPQEKTLSIFMEYMPGGSIKDQLKAYGALTENVTRKYTRQILEGVHYLHSNMIVHRDIKGANILRDSTGNVKLGDFGASKRLQTICLSGTGMKSVTGTPYWMSPEVISGEGYGRKADIWSVACTVVEMLTEKPPWAEFEAMAAIFKIATQPTNPKLPPHVSDYTRDFLKRIFVEAKLRPSADELLRHMFV\n2.0\n8.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n188\nMEKK3\nPSPA\nMAP3K3\nQ99759\nMAP3K3\nSTE\nSTE11\nNone\nSTE11\n1\n0\n1\n0\nMAP3K\nMAP3K\n2.0\n12.0\n626\nMDEQEALNSIMNDLVALQMNRRHRMPGYETMKNKDTGHSNRQSDVRIKFEHNGERRIIAFSRPVKYEDVEHKVTTVFGQPLDLHYMNNELSILLKNQDDLDKAIDILDRSSSMKSLRILLLSQDRNHNSSSPHSGVSRQVRIKASQSAGDINTIYQPPEPRSRHLSVSSQNPGRSSPPPGYVPERQQHIARQGSYTSINSEGEFIPETSEQCMLDPLSSAENSLSGSCQSLDRSADSPSFRKSRMSRAQSFPDNRQEYSDRETQLYDKGVKGGTYPRRYHVSVHHKDYSDGRRTFPRIRRHQGNLFTLVPSSRSLSTNGENMGLAVQYLDPRGRLRSADSENALSVQERNVPTKSPSAPINWRRGKLLGQGAFGRVYLCYDVDTGRELASKQVQFDPDSPETSKEVSALECEIQLLKNLQHERIVQYYGCLRDRAEKTLTIFMEYMPGGSVKDQLKAYGALTESVTRKYTRQILEGMSYLHSNMIVHRDIKGANILRDSAGNVKLGDFGASKRLQTICMSGTGMRSVTGTPYWMSPEVISGEGYGRKADVWSLGCTVVEMLTEKPPWAEYEAMAAIFKIATQPTNPQLPSHISEHG...\nWRRGKLLGQGAFGRVYLCYDVDTGRELASKQVQFDPDSPETSKEVSALECEIQLLKNLQHERIVQYYGCLRDRAEKTLTIFMEYMPGGSVKDQLKAYGALTESVTRKYTRQILEGMSYLHSNMIVHRDIKGANILRDSAGNVKLGDFGASKRLQTICMSGTGMRSVTGTPYWMSPEVISGEGYGRKADVWSLGCTVVEMLTEKPPWAEYEAMAAIFKIATQPTNPQLPSHISEHGRDFLRRIFVEARQRPSAEELLTHHFA\nNaN\n10.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\ncytosol\n\n\n342\nMEKK6\nPSPA\nMAP3K6\nO95382\nMAP3K6\nSTE\nSTE11\nNone\nSTE11\n1\n0\n0\n0\nNEK/ASK\nNEK/ASK\nNaN\nNaN\n331\nMAGPCPRSGAERAGSCWQDPLAVALSRGRQLAAPPGRGCARSRPLSVVYVLTREPQPGLEPREGTEAEPLPLRCLREACAQVPRPRPPPQLRSLPFGTLELGDTAALDAFYNADVVVLEVSSSLVQPSLFYHLGVRESFSMTNNVLLCSQADLPDLQALREDVFQKNSDCVGSYTLIPYVVTATGRVLCGDAGLLRGLADGLVQAGVGTEALLTPLVGRLARLLEATPTDSCGYFRETIRRDIRQARERFSGPQLRQELARLQRRLDSVELLSPDIIMNLLLSYRDVQDYSAIIELVETLQALPTCDVAEQHNVCFHYTFALNRRNRPGDRAKALSVLLPLVQLEGSVAPDLYCMCGRIYKDMFFSSGFQDAGHREQAYHWYRKAFDVEPSLHSGINAAVLLIAAGQHFEDSKELRLIGMKLGCLLARKGCVEKMQYYWDVGFYLGAQILANDPTQVVLAAEQLYKLNAPIWYLVSVMETFLLYQHFRPTPEPPGGPPRRAHFWLHFLLQSCQPFKTACAQGDQCLVLVLEMNKVLLPAKLEVRGTDPVSTVTLSLLEPETQDIPSSWTFPVASICGVSASKRDERCCFLYALPPA...\nYTETGERLVLGKGTYGVVYAGRDRHTRVRIAIKEIPERDSRFSQPLHEEIALHRRLRHKNIVRYLGSASQGGYLKIFMEEVPGGSLSSLLRSVWGPLKDNESTISFYTRQILQGLGYLHDNHIVHRDIKGDNVLINTFSGLLKISDFGTSKRLAGITPCTETFTGTLQYMAPEIIDQGPRGYGKAADIWSLGCTVIEMATGRPPFHELGSPQAAMFQVGMYKVHPPMPSSLSAEAQAFLLRTFEPDPRLRASAQTLLGDPFL\n3.0\n3.0\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n4.0\naggresome\n\n\n\n\n\n\n\n\nmap2 = t5[t5.kinase.str.contains('MEK')]\n\n\nmap2 = map2.set_index('kinase')\n\n\ntarget = map2.loc[:,~map2.columns.str.contains('T5_')]\n\n\ntarget\n\n\n\n\n\n\n\n\n-5P\n-5G\n-5A\n-5C\n-5S\n-5T\n-5V\n-5I\n-5L\n-5M\n-5F\n-5Y\n-5W\n-5H\n-5K\n-5R\n-5Q\n-5N\n-5D\n-5E\n-5s\n-5t\n-5y\n-4P\n-4G\n-4A\n-4C\n-4S\n-4T\n-4V\n-4I\n-4L\n-4M\n-4F\n-4Y\n-4W\n-4H\n-4K\n-4R\n-4Q\n-4N\n-4D\n-4E\n-4s\n-4t\n-4y\n-3P\n-3G\n-3A\n-3C\n-3S\n-3T\n-3V\n-3I\n-3L\n-3M\n-3F\n-3Y\n-3W\n-3H\n-3K\n-3R\n-3Q\n-3N\n-3D\n-3E\n-3s\n-3t\n-3y\n-2P\n-2G\n-2A\n-2C\n-2S\n-2T\n-2V\n-2I\n-2L\n-2M\n-2F\n-2Y\n-2W\n-2H\n-2K\n-2R\n-2Q\n-2N\n-2D\n-2E\n-2s\n-2t\n-2y\n-1P\n-1G\n-1A\n-1C\n-1S\n-1T\n-1V\n-1I\n-1L\n-1M\n-1F\n-1Y\n-1W\n-1H\n-1K\n-1R\n-1Q\n-1N\n-1D\n-1E\n-1s\n-1t\n-1y\n1P\n1G\n1A\n1C\n1S\n1T\n1V\n1I\n1L\n1M\n1F\n1Y\n1W\n1H\n1K\n1R\n1Q\n1N\n1D\n1E\n1s\n1t\n1y\n2P\n2G\n2A\n2C\n2S\n2T\n2V\n2I\n2L\n2M\n2F\n2Y\n2W\n2H\n2K\n2R\n2Q\n2N\n2D\n2E\n2s\n2t\n2y\n3P\n3G\n3A\n3C\n3S\n3T\n3V\n3I\n3L\n3M\n3F\n3Y\n3W\n3H\n3K\n3R\n3Q\n3N\n3D\n3E\n3s\n3t\n3y\n4P\n4G\n4A\n4C\n4S\n4T\n4V\n4I\n4L\n4M\n4F\n4Y\n4W\n4H\n4K\n4R\n4Q\n4N\n4D\n4E\n4s\n4t\n4y\n0s\n0t\n0y\n\n\nkinase\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMEK1\n-0.179089\n-0.625424\n0.190732\n0.063208\n-0.147207\n-0.147207\n-0.019683\n-0.159960\n-0.147207\n-0.281108\n3.091911\n0.082336\n0.101465\n0.031327\n-0.217346\n-0.281108\n-0.363999\n-0.376751\n0.375642\n-0.121703\n-0.230098\n-0.230098\n-0.408632\n-0.760494\n-0.414864\n-0.056889\n0.054206\n-0.056889\n-0.056889\n0.165301\n-0.198845\n-0.451896\n0.146786\n0.072722\n0.270225\n0.344289\n0.350461\n-0.562991\n-0.334628\n-0.433380\n-0.149469\n0.406008\n0.665231\n0.449212\n0.449212\n0.103582\n-1.220768\n-1.155581\n-0.130373\n-0.130373\n-0.130373\n-0.130373\n-0.408898\n-0.207412\n-0.130373\n-0.124447\n-0.047408\n2.941334e-15\n0.562975\n0.053335\n0.124447\n1.060764\n-0.480011\n-0.965947\n-0.142225\n-0.183708\n2.222272\n2.222272\n-0.657792\n-1.346319\n-0.609511\n-0.105379\n0.133761\n-0.105379\n-0.105379\n-1.139495\n-1.042547\n-0.693533\n0.204856\n2.854780\n0.650819\n0.612040\n4.031088\n-0.764628\n-0.053673\n-0.512562\n0.094981\n-0.053673\n-0.150621\n-0.557805\n-0.557805\n-0.784018\n-0.792424\n1.390568\n0.193444\n-0.465935\n0.155033\n0.155033\n-0.491542\n-0.786022\n1.275337\n0.590351\n-0.171455\n0.724788\n0.155033\n0.161435\n0.327880\n0.257461\n-0.043420\n-0.075429\n-0.389114\n-0.965270\n-0.408319\n-0.408319\n-0.389114\n-1.175890\n-1.019384\n-1.205987\n0.467425\n-0.579963\n-0.579963\n0.599853\n1.851902\n0.491503\n1.340248\n0.491503\n0.334996\n0.304899\n-0.579963\n-1.458805\n-1.506961\n-1.055501\n-1.073559\n1.809766\n-0.622099\n1.466656\n1.466656\n0.232666\n-0.772097\n-1.008533\n-0.043620\n-0.490931\n-0.535662\n-0.535662\n-0.254495\n-0.535662\n-0.989363\n-0.216154\n-0.880730\n1.228021\n-0.414249\n9.381858\n-0.529272\n-0.490931\n-0.714586\n-0.912681\n-0.548442\n-1.072435\n0.352570\n0.352570\n-0.369518\n-0.100376\n0.434324\n-0.207316\n-0.188444\n-0.207316\n-0.207316\n-0.502973\n-0.534426\n-0.182153\n-0.320546\n-0.018598\n1.107416\n1.390492\n1.088544\n-0.270222\n-0.295384\n-0.528135\n-0.528135\n0.082051\n-0.364580\n-0.031179\n-0.031179\n0.415452\n0.170123\n0.270937\n-0.207929\n-0.056708\n-0.170123\n-0.170123\n-0.371751\n-0.069310\n0.214230\n-0.170123\n-0.277238\n0.932529\n1.871358\n0.012602\n-0.403256\n-0.441061\n-0.289840\n-0.611184\n0.025203\n-0.308743\n0.094513\n0.094513\n-0.138619\n0.088822\n1.177916\n-1.266738\n\n\nMEK2\n0.332485\n0.213356\n0.254593\n-0.134867\n0.048409\n0.048409\n0.414959\n-0.698438\n-0.538072\n-0.121121\n-0.066138\n0.712781\n0.699035\n0.020917\n0.048409\n0.286666\n-0.455598\n-0.070720\n0.052990\n-0.556399\n-0.199013\n-0.199013\n-0.093630\n-0.307572\n0.473250\n-0.022361\n0.183364\n0.043097\n0.043097\n-0.494595\n-0.438488\n0.043097\n0.225444\n0.216093\n0.945483\n1.127831\n0.206742\n-0.466541\n-0.106522\n-0.368354\n-0.129900\n0.440521\n0.117906\n-0.625511\n-0.625511\n-0.480568\n-0.725544\n-0.591853\n0.324886\n0.754607\n-0.176456\n-0.176456\n-0.176456\n0.644789\n1.255948\n1.766839\n1.580626\n1.384865e+00\n1.203427\n-0.009342\n-0.840136\n-0.453387\n-1.021574\n-0.892657\n-0.572754\n-0.410415\n-1.050222\n-1.050222\n-0.768516\n-1.316955\n-0.568562\n-0.219312\n0.139917\n-0.264215\n-0.264215\n-1.017598\n-0.828005\n-0.423873\n0.539060\n3.392934\n0.788525\n1.122807\n4.695138\n-0.688305\n0.169853\n-0.593508\n-0.408905\n0.214756\n-0.264215\n-1.401773\n-1.401773\n-1.401773\n-1.235675\n1.228419\n0.158354\n-0.376678\n0.266342\n0.266342\n-0.141068\n-0.543569\n1.645646\n1.154790\n0.771923\n1.194059\n0.443050\n0.266342\n0.300702\n1.208784\n-0.234330\n-0.656466\n-0.847899\n-0.911710\n-1.500737\n-1.500737\n-0.955887\n-1.709590\n-0.946947\n-0.965662\n0.274218\n-0.366777\n-0.366777\n0.171284\n1.598316\n1.345661\n2.534074\n1.425201\n2.019407\n1.083649\n-0.366777\n-1.419505\n-1.358681\n-0.946947\n-1.185565\n0.976037\n-0.769153\n-0.399528\n-0.399528\n-0.226413\n-0.693064\n-0.382631\n0.400841\n0.425479\n-0.210169\n-0.210169\n-0.131329\n0.129829\n-0.357994\n0.617651\n-0.037706\n1.810106\n0.745766\n6.077321\n-0.431906\n-0.210169\n-0.343211\n-0.471326\n-1.121756\n-1.609579\n-1.200596\n-1.200596\n-1.594796\n-0.005189\n0.758582\n0.037773\n-0.191358\n-0.005189\n-0.005189\n-0.043377\n0.209622\n0.090283\n-0.234320\n0.281225\n2.204971\n1.565314\n0.997260\n-0.325017\n-0.062471\n-0.578016\n-0.578016\n-0.859657\n-1.012411\n-0.950354\n-0.950354\n-0.344112\n0.218830\n0.391229\n-0.034979\n0.151786\n-0.034979\n-0.034979\n-0.580910\n0.060798\n-0.049346\n-0.236112\n0.137419\n2.105641\n2.852703\n0.372074\n-0.178645\n0.108686\n-0.437244\n-0.537810\n-0.676687\n-0.920919\n-0.954441\n-0.954441\n-0.767675\n-0.370947\n1.367336\n-0.996389\n\n\nMEK5\n-0.458827\n-0.198180\n-0.344397\n-0.280825\n-0.446113\n-0.446113\n-0.649545\n-0.598687\n-0.496971\n-0.477899\n0.672763\n1.149556\n1.194057\n0.558332\n0.259542\n0.647334\n-0.706760\n-0.458827\n-0.446113\n-0.706760\n1.003340\n1.003340\n0.227755\n-0.391335\n0.283236\n-0.089384\n-0.025139\n-0.089384\n-0.089384\n-0.815352\n-1.008086\n-0.841050\n-0.237148\n0.296085\n0.411726\n1.401098\n0.334632\n0.379604\n0.899987\n-0.648315\n-0.224299\n-0.057262\n-0.089384\n0.623734\n0.623734\n-0.648315\n0.113049\n0.455993\n-0.061540\n0.237756\n-0.142599\n-0.142599\n-1.289901\n-1.071664\n-0.703779\n-0.348365\n-0.273541\n3.811686e-01\n0.518346\n-0.049069\n0.156697\n1.852707\n-0.809780\n-0.479307\n-0.142599\n-0.541661\n1.091997\n1.091997\n0.156697\n-0.423574\n-0.270555\n-0.028275\n0.233132\n-0.423574\n-0.423574\n-0.908134\n-1.188668\n-0.653102\n-0.557465\n2.757943\n1.565671\n1.329767\n-0.015524\n-0.691357\n0.800577\n-0.646726\n-0.595720\n-0.308810\n-1.054777\n0.207629\n0.207629\n1.087487\n-0.684442\n0.789544\n-0.009684\n0.311317\n-0.009684\n-0.009684\n-1.064403\n-1.084056\n0.304766\n0.481644\n-0.337236\n0.697829\n-0.428951\n0.612665\n0.579910\n1.975283\n-0.068644\n0.357174\n-0.265175\n-0.992341\n-0.553421\n-0.553421\n-0.048990\n-1.336578\n-1.072818\n-1.013472\n1.624135\n-0.367258\n-0.367258\n0.839447\n2.085716\n0.859229\n2.474763\n0.522934\n0.608656\n2.797869\n-0.367258\n-0.420010\n0.450400\n-0.545296\n-0.558484\n-2.048732\n-1.982792\n-0.307912\n-0.307912\n-1.567369\n-1.358870\n-0.773718\n-0.539657\n-0.401974\n-0.112840\n-0.112840\n-0.821907\n-0.897632\n-0.925169\n-0.043999\n-0.112840\n2.558207\n1.711458\n5.504620\n1.429208\n2.392988\n-0.085303\n-0.016462\n-1.875180\n-1.964674\n-0.856327\n-0.856327\n-1.840760\n-0.966321\n-0.034354\n-0.851513\n-0.216695\n0.019673\n0.019673\n-0.702939\n-0.149162\n0.215521\n0.418122\n1.336582\n1.350089\n2.714271\n0.566697\n0.728778\n1.586457\n-0.405790\n0.019673\n-1.452564\n-1.486331\n-0.892033\n-0.892033\n-0.925800\n0.424628\n0.186754\n-0.302588\n-0.683187\n0.078011\n0.078011\n-0.710373\n-0.214235\n-0.458906\n0.016843\n0.078011\n1.036305\n1.158640\n0.478999\n2.144120\n1.899449\n0.560556\n-0.241420\n-1.410403\n-1.322050\n-0.635612\n-0.635612\n-1.525942\n-0.091744\n1.268037\n-1.176293\n\n\nMEKK1\n0.119784\n1.838032\n0.022433\n0.197665\n0.022433\n0.022433\n-1.077635\n-0.615217\n-1.325880\n-0.556806\n-0.542203\n0.183062\n-0.371839\n0.450778\n-0.376707\n0.402103\n-0.761244\n0.168460\n0.528659\n0.587070\n0.061374\n0.061374\n0.961872\n-0.102935\n1.022516\n0.084640\n0.039014\n-0.016752\n-0.016752\n-0.751843\n-0.792400\n-0.807609\n-0.574407\n0.221519\n-0.016752\n1.651146\n0.561182\n-0.260092\n-0.097865\n-0.442598\n0.028875\n0.672713\n0.287424\n-0.102935\n-0.102935\n-0.483155\n0.306855\n1.173841\n0.121768\n0.560132\n0.038966\n0.038966\n-1.110522\n-0.511425\n-0.730607\n0.389657\n-0.472459\n3.653033e-01\n0.686770\n0.472459\n-1.052073\n-0.487071\n-0.706253\n-0.107156\n0.038966\n0.316596\n0.058449\n0.058449\n0.550390\n-0.464810\n0.919156\n0.232187\n0.768725\n0.101814\n0.101814\n-1.226995\n-0.906075\n0.101814\n0.863998\n0.031612\n0.482906\n-0.158934\n0.989357\n-1.041463\n-0.489882\n0.101814\n0.788782\n0.327460\n-0.409652\n-0.259221\n-0.259221\n-0.595184\n-0.159676\n0.868425\n-0.758519\n-0.557138\n-0.159676\n-0.159676\n-1.447452\n-1.314965\n-0.726722\n0.884324\n-0.631331\n-0.276265\n-1.076488\n2.956425\n-0.477645\n1.361278\n0.449766\n1.944222\n1.276486\n0.110598\n-0.822112\n-0.822112\n-0.461747\n-1.843098\n-0.428787\n-1.222977\n0.060782\n-0.211201\n-0.211201\n2.737094\n4.570259\n1.252067\n3.063474\n0.642826\n0.740740\n0.854972\n-0.211201\n-1.043468\n-0.265597\n0.136937\n-0.738847\n-1.908374\n-1.951891\n-1.331770\n-1.331770\n-1.358968\n-1.059459\n-0.038656\n0.597974\n0.707738\n-0.274648\n-0.274648\n-0.433806\n-0.274648\n-1.361310\n0.394911\n-0.944207\n0.833966\n-0.362459\n1.152281\n2.112715\n5.136708\n-0.280136\n1.514502\n-0.587475\n-1.525956\n-1.641208\n-1.641208\n-1.750972\n-0.514480\n0.125721\n-0.589170\n-0.093015\n0.184406\n0.184406\n-0.391775\n1.304757\n1.294087\n1.651533\n0.723242\n1.342102\n1.491483\n0.301776\n0.184406\n0.957982\n-0.669196\n-0.658526\n-1.496122\n-1.704187\n-1.320067\n-1.320067\n-0.989296\n-0.090194\n0.582034\n-0.652134\n-0.216236\n0.198654\n0.198654\n-0.898967\n0.555775\n-0.116452\n0.455991\n-0.226740\n0.403474\n0.750091\n0.849875\n0.272179\n2.005266\n-0.400048\n0.198654\n-0.426307\n-0.746666\n-0.951485\n-0.951485\n-0.793932\n0.046841\n1.200652\n-1.247493\n\n\nMEKK2\n-0.191770\n0.438330\n0.160898\n-0.055405\n-0.191770\n-0.191770\n-0.111832\n-0.647887\n-0.882999\n-0.535033\n-0.384561\n-0.285814\n0.043342\n0.005724\n0.024533\n-0.309326\n-0.859488\n-0.497415\n0.838021\n0.273752\n1.472823\n1.472823\n0.414819\n0.005341\n0.614621\n0.162575\n-0.048708\n-0.161720\n-0.161720\n-0.481101\n-0.825050\n-0.771001\n-0.343521\n-0.019227\n-0.431965\n-0.186288\n0.000427\n-0.205942\n-0.107671\n-0.643248\n-0.161720\n1.390963\n1.204248\n0.604794\n0.604794\n-0.038881\n-0.181919\n1.501771\n-0.318804\n0.205923\n-0.423749\n-0.423749\n-1.067111\n-1.308942\n-1.067111\n-0.423749\n-0.838968\n-8.480941e-01\n-0.934788\n-0.546946\n-0.286864\n0.242426\n-0.743149\n-0.045033\n1.383137\n1.164121\n2.199887\n2.199887\n0.561825\n-0.656818\n0.518413\n0.314830\n0.661847\n-0.434727\n-0.434727\n-0.272786\n-0.707714\n-1.022343\n-0.582788\n0.046470\n1.022745\n-0.434727\n0.060351\n-0.855774\n-0.874282\n-0.615176\n-0.684579\n1.406777\n-0.342189\n0.592444\n0.592444\n2.702308\n-1.008872\n1.296773\n0.166854\n0.049791\n0.166854\n0.166854\n-0.764565\n-1.293896\n-0.230144\n0.395892\n-0.922347\n0.166854\n-0.957975\n1.138992\n0.630019\n1.220427\n0.400982\n0.553673\n0.299187\n-0.138529\n-0.820552\n-0.820552\n0.304277\n-1.678005\n-0.255398\n0.164559\n0.993976\n0.007075\n0.007075\n1.576667\n1.975627\n1.046470\n2.668557\n-0.407633\n-0.076916\n2.658058\n0.007075\n-0.712102\n0.442781\n0.201306\n-1.042819\n-2.003472\n-2.024470\n-0.953578\n-0.953578\n-1.641258\n-1.636214\n-0.795899\n-0.120352\n-0.296104\n-0.120352\n-0.120352\n-0.263151\n-0.894760\n-0.697038\n0.351982\n-0.686054\n3.169507\n0.247629\n4.185574\n1.950227\n3.323290\n0.297059\n-0.021491\n-1.603260\n-1.828442\n-1.416524\n-1.416524\n-1.608752\n-1.159134\n-0.259238\n-0.453952\n-0.275026\n0.356481\n0.356481\n-0.290813\n0.445944\n0.645921\n0.456469\n1.572130\n0.772222\n1.735270\n0.356481\n0.424894\n1.135339\n-0.138199\n-0.111886\n-0.985470\n-1.459100\n-1.090721\n-1.090721\n-0.943370\n0.949054\n0.117653\n0.287111\n-0.486039\n-0.078282\n-0.078282\n-0.396015\n-0.205375\n-0.078282\n0.011742\n-0.523108\n-0.279513\n-0.104760\n0.122949\n2.987840\n2.288828\n0.546593\n-0.750816\n-1.174460\n-0.787885\n-0.565472\n-0.565472\n-1.238007\n-0.133793\n1.286148\n-1.152355\n\n\nMEKK3\n-0.961703\n-0.558302\n-0.462444\n-0.502385\n-0.338628\n-0.338628\n-0.538332\n-0.670136\n-0.606231\n-0.494397\n-0.098984\n-0.182859\n0.140661\n-0.055049\n0.000868\n-0.234782\n-0.734041\n-0.282711\n-0.071025\n-0.338628\n3.104263\n3.104263\n1.119209\n-0.840918\n-0.391727\n-0.430600\n-0.361493\n-0.218962\n-0.218962\n-0.383089\n-0.443557\n-0.348536\n-0.033239\n-0.283749\n0.079059\n0.018591\n-0.218962\n0.087697\n0.057463\n-0.827961\n-0.145536\n0.787398\n0.420271\n1.901737\n1.901737\n-0.106664\n-0.997269\n0.438322\n-0.956944\n-0.464972\n-0.469004\n-0.469004\n-0.408516\n-0.634339\n-0.690795\n-0.569818\n-0.469004\n-5.456228e-01\n-0.384320\n-0.533525\n-0.343995\n0.337508\n-0.884358\n-0.243181\n0.591559\n0.539136\n2.914313\n2.914313\n1.329517\n-1.035348\n-0.479372\n-0.585086\n0.229302\n-0.479372\n-0.479372\n-0.107416\n-0.365828\n-0.882650\n-0.381489\n-0.197469\n0.299778\n-0.052602\n-0.444134\n-1.352489\n-0.604662\n-0.780852\n-0.565509\n1.098504\n-0.506779\n2.292678\n2.292678\n3.087489\n-1.449374\n0.556915\n-0.517564\n-0.415021\n-0.236684\n-0.236684\n-0.918822\n-0.749402\n-0.294643\n-0.236684\n-0.348144\n-0.062806\n-0.486355\n0.547998\n0.369661\n1.314846\n-0.526481\n0.699584\n0.650542\n-0.062806\n0.512331\n0.512331\n1.377264\n-1.772655\n-1.045354\n-0.745049\n0.531246\n-0.562051\n-0.562051\n1.230393\n2.164153\n1.408698\n2.089076\n0.944165\n0.362324\n4.449284\n-0.562051\n-1.284660\n-0.515129\n-0.820126\n-1.387889\n-1.871192\n-1.819577\n0.376401\n0.376401\n-0.984355\n-2.028483\n-1.405019\n-0.877123\n0.083102\n-0.344676\n-0.344676\n-0.458447\n-0.717844\n-0.544912\n0.096755\n-0.344676\n1.307275\n-0.048872\n4.124238\n1.079734\n1.757807\n-0.308269\n0.046695\n-0.986343\n-1.268494\n1.020573\n1.020573\n-0.858920\n-1.723039\n-0.231616\n-0.762936\n0.103954\n0.043365\n0.043365\n-0.348134\n0.043365\n0.584006\n0.341649\n1.073379\n0.747130\n1.581395\n0.103954\n0.537399\n0.453506\n-0.655740\n0.006079\n-0.609133\n-0.632436\n-0.450669\n-0.450669\n0.201828\n-0.101846\n-0.305341\n-0.178722\n-0.052103\n-0.156111\n-0.156111\n-0.757553\n-0.156111\n-0.526925\n-0.178722\n-0.273686\n0.006685\n-0.006881\n-0.427438\n1.806487\n0.879453\n0.124260\n-0.151589\n-0.694243\n0.065472\n0.933719\n0.933719\n-0.626411\n0.197119\n1.114230\n-1.311349\n\n\nMEKK6\n0.243776\n0.440910\n0.440910\n-0.228428\n0.110825\n0.110825\n0.023720\n-1.007794\n-0.343041\n-0.320118\n-0.301780\n-0.288026\n0.179593\n0.688473\n0.885607\n1.192768\n0.422572\n0.110825\n-1.039885\n-0.741892\n-0.196336\n-0.196336\n-0.187167\n-0.405693\n0.324959\n0.157421\n-0.163693\n0.124844\n0.124844\n0.115536\n-0.680268\n-0.582538\n0.925303\n-0.117155\n0.585573\n0.399420\n0.953226\n0.906687\n0.557650\n0.124844\n-0.042694\n-1.052575\n-0.908306\n-0.349847\n-0.349847\n-0.647692\n-0.542568\n0.491918\n0.738890\n0.282225\n0.123790\n0.123790\n0.035253\n-0.645085\n-0.160461\n-0.309576\n-0.272297\n5.524960e-01\n0.748210\n1.027801\n0.156409\n1.582323\n0.291544\n0.123790\n-1.362702\n-1.125050\n-0.677704\n-0.677704\n-0.505290\n0.480059\n0.530602\n1.403618\n0.994679\n-0.016182\n-0.016182\n0.980895\n-0.287276\n-0.167811\n-0.613509\n-0.981095\n-0.016182\n-0.641078\n0.466275\n-0.034561\n1.036033\n0.718990\n1.160093\n-1.674913\n-1.674913\n-0.232138\n-0.232138\n-1.183267\n-0.134736\n2.714733\n1.098115\n0.162684\n-0.010011\n-0.010011\n-0.077171\n-1.003008\n-0.388981\n0.532059\n-1.012602\n1.170072\n0.023568\n0.493683\n0.440915\n2.196648\n-0.149127\n-0.010011\n-1.631426\n-1.559470\n-1.041385\n-1.041385\n-0.763154\n-1.660768\n-0.639466\n1.138178\n1.022559\n-0.273339\n-0.273339\n1.918607\n0.902122\n1.181535\n2.231742\n-0.567204\n3.147059\n1.253797\n1.316424\n-1.453617\n-0.981506\n-0.273339\n-0.523847\n-2.142514\n-1.940180\n-0.957418\n-0.957418\n-1.468069\n-1.214603\n-0.394123\n-0.053080\n-0.315040\n-0.053080\n-0.053080\n-0.552288\n-1.011954\n-0.013539\n0.278078\n-0.028367\n4.054264\n0.787171\n1.439601\n1.815242\n3.298038\n-0.250786\n-0.226073\n-1.778065\n-1.995542\n-0.962528\n-0.962528\n-1.807721\n0.387633\n0.255621\n0.745953\n0.109464\n0.255621\n0.255621\n0.067031\n-0.979640\n0.656373\n0.095320\n0.458354\n0.943972\n0.382918\n0.166041\n0.844962\n1.698329\n-0.036693\n-0.461019\n-1.606699\n-1.733997\n-0.772191\n-0.772191\n-0.960781\n0.110226\n0.661795\n0.024201\n-0.198450\n0.110226\n0.110226\n-0.122546\n0.520107\n-0.289535\n0.039382\n0.439143\n0.889507\n0.181070\n1.102038\n2.756745\n2.291200\n0.110226\n-0.218691\n-1.559662\n-1.590023\n-1.883519\n-1.883519\n-1.600144\n-0.313535\n1.351034\n-1.037499\n\n\n\n\n\n\n\n\nt = get_one_kinase(target,'MEK1').T\n\n\nt = t.drop(columns=0)\n\n\nplot_heatmap(t)\n\n\n\n\n\n\n\n\n\ninfo.source.value_counts()\n\nPSPA    303\nKS       87\nName: source, dtype: int64\n\n\n\n# check if training dataset has same order with the info\n(info.kinase == t5.kinase).sum(), \\\n(info.kinase == t5_kd.kinase).sum(), \\\n(info.kinase == esm.kinase).sum(), \\\n(info.kinase == esm_kd.kinase).sum()\n\n(390, 390, 390, 390)\n\n\n\nsplits = get_splits(info, stratified='group',nfold=5)\n\nStratifiedKFold(n_splits=5, random_state=123, shuffle=True)\n# kinase group in train set: 9\n# kinase group in test set: 9\n---------------------------\n# kinase in train set: 312\n---------------------------\n# kinase in test set: 78\n---------------------------\ntest set: ['EPHA3' 'FES' 'FLT3' 'FYN' 'EPHB1' 'EPHB3' 'FER' 'EPHB4' 'FLT4' 'FGFR1' 'EPHA5' 'TEK' 'DDR2' 'ZAP70' 'LIMK1' 'ULK3' 'JAK1' 'WEE1' 'TESK1' 'MAP2K3' 'AMPKA2' 'ATM' 'CAMK1D' 'CAMK2D' 'CAMK4' 'CAMKK1'\n 'CK1D' 'CK1E' 'DYRK2' 'DYRK4' 'HGK' 'IKKE' 'JNK2' 'JNK3' 'KHS1' 'MAPKAPK5' 'MEK2' 'MSK2' 'NDR1' 'NEK6' 'NEK9' 'NIM1' 'NLK' 'OSR1' 'P38A' 'P38B' 'P90RSK' 'PAK1' 'PERK' 'PKCH' 'PKCI' 'PKN1' 'ROCK2'\n 'RSK2' 'SIK' 'STLK3' 'TAK1' 'TSSK1' 'ALPHAK3' 'BMPR2' 'CDK10' 'CDK13' 'CDK14' 'CDKL5' 'GCN2' 'GRK4' 'IRE1' 'KHS2' 'MASTL' 'MLK4' 'MNK1' 'MRCKA' 'PRPK' 'QSK' 'SMMLCK' 'SSTK' 'ULK2' 'VRK1']",
    "crumbs": [
      "DL/ML Training"
    ]
  },
  {
    "objectID": "ml_training.html#train-dl",
    "href": "ml_training.html#train-dl",
    "title": "DL/ML Training",
    "section": "Train DL",
    "text": "Train DL\n\nseed_everything()\n\n\nnum_t5 = len(t5_col)\nnum_esm = len(esm_col)\nnum_target = len(target_col)\n\n\nnum_t5,num_esm, num_target\n\n(1024, 1280, 210)\n\n\n\ndef mlp_t5():\n    return MLP_1(num_t5, num_target)\n\ndef mlp_esm():\n    return MLP_1(num_esm, num_target)\n\ndef cnn_t5():\n    return CNN1D_2(num_t5, num_target)\n\ndef cnn_esm():\n    return CNN1D_2(num_esm, num_target)\n\n\nmodels = {\n    'mlp_t5':    (mlp_t5, t5,    t5_col),\n    'mlp_t5_kd': (mlp_t5, t5_kd, t5_col),\n    'mlp_esm':   (mlp_esm,esm,   esm_col),\n    'mlp_esm_kd':(mlp_esm,esm_kd,esm_col),\n    'cnn_t5':    (cnn_t5, t5,    t5_col),\n    'cnn_t5_kd': (cnn_t5, t5_kd, t5_col),\n    'cnn_esm':   (cnn_esm,esm,   esm_col),\n    'cnn_esm_kd':(cnn_esm,esm_kd,esm_col)\n}\n\n\noofs={}\nmetrics_list = []\n\nn_epoch=20\nlr = 3e-3\n\nfor save_name, (model_func, data, feat_col) in models.items():\n    \n    oof, metrics = train_dl_cv(data,\n                           feat_col,\n                           target_col, \n                           splits, \n                           model_func, \n                           save = save_name,\n                           n_epoch=n_epoch,lr=lr)\n    \n    oofs[save_name] = oof\n    metrics['model'] = save_name\n    metrics_list.append(metrics)\n\n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.154047\n0.993763\n0.080863\n0.080229\n00:01\n\n\n1\n1.033500\n0.957460\n0.251623\n0.239915\n00:01\n\n\n2\n0.908174\n0.879915\n0.434919\n0.403990\n00:01\n\n\n3\n0.805384\n0.804587\n0.560596\n0.495304\n00:01\n\n\n4\n0.725529\n0.720960\n0.628532\n0.571654\n00:01\n\n\n5\n0.656491\n0.599209\n0.692632\n0.614877\n00:01\n\n\n6\n0.603124\n0.513039\n0.724522\n0.655832\n00:01\n\n\n7\n0.555976\n0.479024\n0.732275\n0.665790\n00:01\n\n\n8\n0.513584\n0.460103\n0.735400\n0.682403\n00:01\n\n\n9\n0.478237\n0.461291\n0.735585\n0.669326\n00:01\n\n\n10\n0.445855\n0.438646\n0.750032\n0.685824\n00:01\n\n\n11\n0.415538\n0.442491\n0.746850\n0.685451\n00:01\n\n\n12\n0.390254\n0.425079\n0.758302\n0.693570\n00:01\n\n\n13\n0.366253\n0.424454\n0.758709\n0.702660\n00:01\n\n\n14\n0.344065\n0.417625\n0.763168\n0.705728\n00:01\n\n\n15\n0.326288\n0.420386\n0.761326\n0.703843\n00:01\n\n\n16\n0.310711\n0.422554\n0.759938\n0.704773\n00:01\n\n\n17\n0.297028\n0.419107\n0.762185\n0.707341\n00:01\n\n\n18\n0.285352\n0.417938\n0.762975\n0.707281\n00:01\n\n\n19\n0.275999\n0.417737\n0.763116\n0.707632\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4177\nAverage Pearson: 0.7472 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.140956\n0.993235\n0.083575\n0.075205\n00:01\n\n\n1\n1.011993\n0.958387\n0.244458\n0.236904\n00:01\n\n\n2\n0.889426\n0.886061\n0.442374\n0.413279\n00:01\n\n\n3\n0.795835\n0.807503\n0.563417\n0.515726\n00:01\n\n\n4\n0.711169\n0.701166\n0.652063\n0.602737\n00:01\n\n\n5\n0.645843\n0.616948\n0.670980\n0.613756\n00:01\n\n\n6\n0.590385\n0.542628\n0.694287\n0.611596\n00:01\n\n\n7\n0.544477\n0.493557\n0.716135\n0.642213\n00:01\n\n\n8\n0.505067\n0.495106\n0.710593\n0.648736\n00:01\n\n\n9\n0.469207\n0.483776\n0.718823\n0.653112\n00:01\n\n\n10\n0.438371\n0.454403\n0.738648\n0.677631\n00:01\n\n\n11\n0.411289\n0.463022\n0.732808\n0.662357\n00:01\n\n\n12\n0.385714\n0.451259\n0.740798\n0.682107\n00:01\n\n\n13\n0.363211\n0.442026\n0.746981\n0.681592\n00:01\n\n\n14\n0.343041\n0.434914\n0.751728\n0.687908\n00:01\n\n\n15\n0.325796\n0.426248\n0.757512\n0.690509\n00:01\n\n\n16\n0.309910\n0.423560\n0.759250\n0.692971\n00:01\n\n\n17\n0.296182\n0.423638\n0.759256\n0.694006\n00:01\n\n\n18\n0.283400\n0.423879\n0.759063\n0.694628\n00:01\n\n\n19\n0.273604\n0.423261\n0.759445\n0.695261\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4233\nAverage Pearson: 0.7386 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.165929\n0.997861\n0.050772\n0.028566\n00:01\n\n\n1\n1.039540\n0.966586\n0.206035\n0.189236\n00:01\n\n\n2\n0.914809\n0.892644\n0.412268\n0.377057\n00:01\n\n\n3\n0.809839\n0.814406\n0.555799\n0.476264\n00:01\n\n\n4\n0.725071\n0.712379\n0.639749\n0.585895\n00:01\n\n\n5\n0.655595\n0.602220\n0.680939\n0.629493\n00:01\n\n\n6\n0.598713\n0.537104\n0.715591\n0.644765\n00:01\n\n\n7\n0.549589\n0.476055\n0.739973\n0.675286\n00:01\n\n\n8\n0.510118\n0.444510\n0.746331\n0.681570\n00:01\n\n\n9\n0.474679\n0.458707\n0.738142\n0.676377\n00:01\n\n\n10\n0.442593\n0.429351\n0.757148\n0.685784\n00:01\n\n\n11\n0.414344\n0.426939\n0.759803\n0.687920\n00:01\n\n\n12\n0.388826\n0.404149\n0.773380\n0.705384\n00:01\n\n\n13\n0.366843\n0.406389\n0.771577\n0.703282\n00:01\n\n\n14\n0.346036\n0.395607\n0.778841\n0.715038\n00:01\n\n\n15\n0.328788\n0.397993\n0.777540\n0.711512\n00:01\n\n\n16\n0.314253\n0.392937\n0.779935\n0.713729\n00:01\n\n\n17\n0.301027\n0.391074\n0.781128\n0.715466\n00:01\n\n\n18\n0.289494\n0.390069\n0.781767\n0.715914\n00:01\n\n\n19\n0.279331\n0.389034\n0.782352\n0.716548\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3890\nAverage Pearson: 0.7670 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.145138\n0.992893\n0.085656\n0.074035\n00:01\n\n\n1\n1.027817\n0.959737\n0.239721\n0.227646\n00:01\n\n\n2\n0.905911\n0.881654\n0.443629\n0.424223\n00:01\n\n\n3\n0.807086\n0.794142\n0.573527\n0.543761\n00:01\n\n\n4\n0.727605\n0.693271\n0.642865\n0.601084\n00:01\n\n\n5\n0.662847\n0.589507\n0.702499\n0.640313\n00:01\n\n\n6\n0.610458\n0.515101\n0.726136\n0.663075\n00:01\n\n\n7\n0.562271\n0.469750\n0.734906\n0.662374\n00:01\n\n\n8\n0.520536\n0.425143\n0.761607\n0.686464\n00:01\n\n\n9\n0.483968\n0.423267\n0.763724\n0.680789\n00:01\n\n\n10\n0.450132\n0.416346\n0.765058\n0.690973\n00:01\n\n\n11\n0.420178\n0.399086\n0.776151\n0.698785\n00:01\n\n\n12\n0.395010\n0.407800\n0.770021\n0.681984\n00:01\n\n\n13\n0.372879\n0.396190\n0.777995\n0.699153\n00:01\n\n\n14\n0.352383\n0.378501\n0.789091\n0.709949\n00:01\n\n\n15\n0.334448\n0.377712\n0.789451\n0.713670\n00:01\n\n\n16\n0.318485\n0.381596\n0.787125\n0.709212\n00:01\n\n\n17\n0.304810\n0.379858\n0.788337\n0.708199\n00:01\n\n\n18\n0.293324\n0.379836\n0.788288\n0.707384\n00:01\n\n\n19\n0.284492\n0.377875\n0.789289\n0.708853\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3779\nAverage Pearson: 0.7735 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.171297\n0.997939\n0.050111\n0.040568\n00:01\n\n\n1\n1.045996\n0.964800\n0.220317\n0.198966\n00:01\n\n\n2\n0.917384\n0.886729\n0.437603\n0.402385\n00:01\n\n\n3\n0.816893\n0.811052\n0.554054\n0.492507\n00:01\n\n\n4\n0.730609\n0.707229\n0.615462\n0.570250\n00:01\n\n\n5\n0.663249\n0.611400\n0.684933\n0.605848\n00:01\n\n\n6\n0.605722\n0.542345\n0.697075\n0.611762\n00:01\n\n\n7\n0.557211\n0.482583\n0.726528\n0.633111\n00:01\n\n\n8\n0.516083\n0.491525\n0.713217\n0.636467\n00:01\n\n\n9\n0.478804\n0.467066\n0.731536\n0.634731\n00:01\n\n\n10\n0.445529\n0.466572\n0.730373\n0.655157\n00:01\n\n\n11\n0.416316\n0.458398\n0.736372\n0.637750\n00:01\n\n\n12\n0.393119\n0.446372\n0.744441\n0.658355\n00:01\n\n\n13\n0.372507\n0.438278\n0.749862\n0.668372\n00:01\n\n\n14\n0.352572\n0.433500\n0.752958\n0.657434\n00:01\n\n\n15\n0.333567\n0.429726\n0.755635\n0.663901\n00:01\n\n\n16\n0.318260\n0.423233\n0.759670\n0.672074\n00:01\n\n\n17\n0.304142\n0.419488\n0.762064\n0.673936\n00:01\n\n\n18\n0.292499\n0.417668\n0.763152\n0.675356\n00:01\n\n\n19\n0.283703\n0.418396\n0.762670\n0.674032\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4184\nAverage Pearson: 0.7448 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.128783\n0.993710\n0.079545\n0.087242\n00:01\n\n\n1\n1.000408\n0.954827\n0.252600\n0.259849\n00:01\n\n\n2\n0.877500\n0.872050\n0.445186\n0.440904\n00:01\n\n\n3\n0.781121\n0.788291\n0.598598\n0.556018\n00:01\n\n\n4\n0.703877\n0.698109\n0.673864\n0.624578\n00:01\n\n\n5\n0.644518\n0.605176\n0.698570\n0.616493\n00:01\n\n\n6\n0.594482\n0.529415\n0.725192\n0.667000\n00:01\n\n\n7\n0.552536\n0.511411\n0.711317\n0.637322\n00:01\n\n\n8\n0.514493\n0.471762\n0.727841\n0.691696\n00:01\n\n\n9\n0.485739\n0.473458\n0.731075\n0.673806\n00:01\n\n\n10\n0.457696\n0.462814\n0.733474\n0.690381\n00:01\n\n\n11\n0.428566\n0.436654\n0.750662\n0.700442\n00:01\n\n\n12\n0.405334\n0.430235\n0.755443\n0.706275\n00:01\n\n\n13\n0.382945\n0.428628\n0.755965\n0.711911\n00:01\n\n\n14\n0.362497\n0.399392\n0.775167\n0.724731\n00:01\n\n\n15\n0.344533\n0.400168\n0.774828\n0.728168\n00:01\n\n\n16\n0.327960\n0.396860\n0.776627\n0.731183\n00:01\n\n\n17\n0.316058\n0.395895\n0.777330\n0.733727\n00:01\n\n\n18\n0.302647\n0.397020\n0.776641\n0.732010\n00:01\n\n\n19\n0.292897\n0.397151\n0.776537\n0.732272\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3972\nAverage Pearson: 0.7600 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.110761\n0.996697\n0.057758\n0.075487\n00:01\n\n\n1\n0.978502\n0.956851\n0.282827\n0.300056\n00:01\n\n\n2\n0.852812\n0.873396\n0.474011\n0.450219\n00:01\n\n\n3\n0.753090\n0.793904\n0.586377\n0.521912\n00:01\n\n\n4\n0.680767\n0.697122\n0.648115\n0.590710\n00:01\n\n\n5\n0.621360\n0.626566\n0.678537\n0.621998\n00:01\n\n\n6\n0.573299\n0.537844\n0.700038\n0.619934\n00:01\n\n\n7\n0.537447\n0.564759\n0.671423\n0.581094\n00:01\n\n\n8\n0.501783\n0.530610\n0.685135\n0.612027\n00:01\n\n\n9\n0.471651\n0.471819\n0.728918\n0.666515\n00:01\n\n\n10\n0.442774\n0.471213\n0.728387\n0.666116\n00:01\n\n\n11\n0.417866\n0.444752\n0.746593\n0.681429\n00:01\n\n\n12\n0.394661\n0.432775\n0.754314\n0.699116\n00:01\n\n\n13\n0.374938\n0.418785\n0.764055\n0.701494\n00:01\n\n\n14\n0.356047\n0.409610\n0.768769\n0.711593\n00:01\n\n\n15\n0.340295\n0.400383\n0.775097\n0.714740\n00:01\n\n\n16\n0.325422\n0.400200\n0.774967\n0.712936\n00:01\n\n\n17\n0.313327\n0.401197\n0.774065\n0.710762\n00:01\n\n\n18\n0.301719\n0.400604\n0.774380\n0.711667\n00:01\n\n\n19\n0.292295\n0.399910\n0.774718\n0.711924\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3999\nAverage Pearson: 0.7565 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.131063\n0.996462\n0.059773\n0.041874\n00:01\n\n\n1\n1.003610\n0.958448\n0.260307\n0.226585\n00:01\n\n\n2\n0.877091\n0.879808\n0.460443\n0.419428\n00:01\n\n\n3\n0.776283\n0.795005\n0.584367\n0.507475\n00:01\n\n\n4\n0.695550\n0.729284\n0.658256\n0.593127\n00:01\n\n\n5\n0.635156\n0.610224\n0.706382\n0.641893\n00:01\n\n\n6\n0.587124\n0.511825\n0.723481\n0.670150\n00:01\n\n\n7\n0.545906\n0.471957\n0.748007\n0.674919\n00:01\n\n\n8\n0.508820\n0.440248\n0.749761\n0.682432\n00:01\n\n\n9\n0.477320\n0.445300\n0.748759\n0.692518\n00:01\n\n\n10\n0.449105\n0.437093\n0.750764\n0.678468\n00:01\n\n\n11\n0.424530\n0.416910\n0.764988\n0.704228\n00:01\n\n\n12\n0.401528\n0.394517\n0.779027\n0.720310\n00:01\n\n\n13\n0.379942\n0.386115\n0.783918\n0.726077\n00:01\n\n\n14\n0.361028\n0.385328\n0.784033\n0.727033\n00:01\n\n\n15\n0.345376\n0.377323\n0.790195\n0.730751\n00:01\n\n\n16\n0.329762\n0.373578\n0.791756\n0.735098\n00:01\n\n\n17\n0.317112\n0.370979\n0.793291\n0.737812\n00:01\n\n\n18\n0.304469\n0.369603\n0.794089\n0.738913\n00:01\n\n\n19\n0.294648\n0.370337\n0.793599\n0.738885\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3703\nAverage Pearson: 0.7833 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.111100\n0.984469\n0.148462\n0.118590\n00:01\n\n\n1\n0.977842\n0.943770\n0.310783\n0.289653\n00:01\n\n\n2\n0.871553\n0.864395\n0.471983\n0.428511\n00:01\n\n\n3\n0.776905\n0.780677\n0.614120\n0.545000\n00:01\n\n\n4\n0.699287\n0.684117\n0.686196\n0.603511\n00:01\n\n\n5\n0.637435\n0.604981\n0.726525\n0.636420\n00:01\n\n\n6\n0.587340\n0.473186\n0.764501\n0.693565\n00:01\n\n\n7\n0.547684\n0.479824\n0.727440\n0.655271\n00:01\n\n\n8\n0.513541\n0.451349\n0.753496\n0.668923\n00:01\n\n\n9\n0.479716\n0.409409\n0.776387\n0.686997\n00:01\n\n\n10\n0.450685\n0.388248\n0.785123\n0.715279\n00:01\n\n\n11\n0.427188\n0.400587\n0.775251\n0.703570\n00:01\n\n\n12\n0.405081\n0.390215\n0.784351\n0.704062\n00:01\n\n\n13\n0.385486\n0.373772\n0.794150\n0.715276\n00:01\n\n\n14\n0.367914\n0.361943\n0.800702\n0.732240\n00:01\n\n\n15\n0.352785\n0.355219\n0.803547\n0.735433\n00:01\n\n\n16\n0.338327\n0.353186\n0.806016\n0.735004\n00:01\n\n\n17\n0.326018\n0.348631\n0.808581\n0.737226\n00:01\n\n\n18\n0.313785\n0.344942\n0.810813\n0.740852\n00:01\n\n\n19\n0.304783\n0.344421\n0.811130\n0.739999\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3444\nAverage Pearson: 0.8022 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.138863\n0.993372\n0.082757\n0.072170\n00:01\n\n\n1\n1.009768\n0.951483\n0.274195\n0.258487\n00:01\n\n\n2\n0.884887\n0.871585\n0.454884\n0.412056\n00:01\n\n\n3\n0.790021\n0.784916\n0.595855\n0.538802\n00:01\n\n\n4\n0.708776\n0.690470\n0.686383\n0.600683\n00:01\n\n\n5\n0.648803\n0.601382\n0.698563\n0.639437\n00:01\n\n\n6\n0.599950\n0.540712\n0.707360\n0.610571\n00:01\n\n\n7\n0.556581\n0.471006\n0.733336\n0.644909\n00:01\n\n\n8\n0.521624\n0.452386\n0.745504\n0.674814\n00:01\n\n\n9\n0.488039\n0.480375\n0.722168\n0.629938\n00:01\n\n\n10\n0.459280\n0.405328\n0.774127\n0.698979\n00:01\n\n\n11\n0.433295\n0.422283\n0.761112\n0.688903\n00:01\n\n\n12\n0.409236\n0.397547\n0.776195\n0.698025\n00:01\n\n\n13\n0.387612\n0.393799\n0.779613\n0.709538\n00:01\n\n\n14\n0.367258\n0.389297\n0.782372\n0.702802\n00:01\n\n\n15\n0.349781\n0.377078\n0.789588\n0.718889\n00:01\n\n\n16\n0.334924\n0.377609\n0.789108\n0.722318\n00:01\n\n\n17\n0.321259\n0.375089\n0.790811\n0.722603\n00:01\n\n\n18\n0.309635\n0.374322\n0.791195\n0.721578\n00:01\n\n\n19\n0.299376\n0.373418\n0.791733\n0.720455\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3734\nAverage Pearson: 0.7825 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.157673\n0.998462\n0.048070\n0.072969\n00:01\n\n\n1\n1.037905\n0.945200\n0.284254\n0.297389\n00:01\n\n\n2\n0.916484\n0.800898\n0.532123\n0.505515\n00:01\n\n\n3\n0.824315\n0.674872\n0.625628\n0.574711\n00:01\n\n\n4\n0.748077\n0.604842\n0.635903\n0.567009\n00:01\n\n\n5\n0.689846\n0.538024\n0.685815\n0.604766\n00:01\n\n\n6\n0.641608\n0.501118\n0.706454\n0.644766\n00:01\n\n\n7\n0.597043\n0.468152\n0.729283\n0.674768\n00:01\n\n\n8\n0.557734\n0.491791\n0.713333\n0.664789\n00:01\n\n\n9\n0.523974\n0.472747\n0.727143\n0.669441\n00:01\n\n\n10\n0.492780\n0.446169\n0.744236\n0.669053\n00:01\n\n\n11\n0.464903\n0.416187\n0.765430\n0.703634\n00:01\n\n\n12\n0.438916\n0.415587\n0.765864\n0.707183\n00:01\n\n\n13\n0.414435\n0.401195\n0.774907\n0.714754\n00:01\n\n\n14\n0.391351\n0.398148\n0.776707\n0.712254\n00:01\n\n\n15\n0.371530\n0.393040\n0.779694\n0.717970\n00:01\n\n\n16\n0.354038\n0.388590\n0.782528\n0.724596\n00:01\n\n\n17\n0.338742\n0.387000\n0.783421\n0.722924\n00:01\n\n\n18\n0.325033\n0.386472\n0.783630\n0.723608\n00:01\n\n\n19\n0.315189\n0.385637\n0.783991\n0.725267\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3856\nAverage Pearson: 0.7633 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.148871\n0.993806\n0.081569\n0.063176\n00:01\n\n\n1\n1.024885\n0.942724\n0.330757\n0.302565\n00:01\n\n\n2\n0.905095\n0.809047\n0.543201\n0.513134\n00:01\n\n\n3\n0.810084\n0.704233\n0.623344\n0.574213\n00:01\n\n\n4\n0.733200\n0.607658\n0.646933\n0.594417\n00:01\n\n\n5\n0.670995\n0.564638\n0.659830\n0.616129\n00:01\n\n\n6\n0.622740\n0.537306\n0.680612\n0.617730\n00:01\n\n\n7\n0.581736\n0.507870\n0.701577\n0.640984\n00:01\n\n\n8\n0.542354\n0.515192\n0.696285\n0.636736\n00:01\n\n\n9\n0.510413\n0.531217\n0.687404\n0.617385\n00:01\n\n\n10\n0.481174\n0.483432\n0.718826\n0.661016\n00:01\n\n\n11\n0.453522\n0.454218\n0.738794\n0.678051\n00:01\n\n\n12\n0.426981\n0.463689\n0.732395\n0.677128\n00:01\n\n\n13\n0.403476\n0.444609\n0.745393\n0.690164\n00:01\n\n\n14\n0.384952\n0.454986\n0.738283\n0.677540\n00:01\n\n\n15\n0.365943\n0.444880\n0.745090\n0.687827\n00:01\n\n\n16\n0.348477\n0.439288\n0.748816\n0.690052\n00:01\n\n\n17\n0.333922\n0.437894\n0.749789\n0.690127\n00:01\n\n\n18\n0.320533\n0.436050\n0.750996\n0.691892\n00:01\n\n\n19\n0.311041\n0.436738\n0.750579\n0.691774\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4367\nAverage Pearson: 0.7310 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.156618\n0.996993\n0.056145\n0.064842\n00:01\n\n\n1\n1.034022\n0.950679\n0.278912\n0.284957\n00:01\n\n\n2\n0.912812\n0.824764\n0.525375\n0.495985\n00:01\n\n\n3\n0.815307\n0.702473\n0.632620\n0.554350\n00:01\n\n\n4\n0.741813\n0.588826\n0.675763\n0.599057\n00:01\n\n\n5\n0.680163\n0.526534\n0.691813\n0.620772\n00:01\n\n\n6\n0.628032\n0.499857\n0.708549\n0.635667\n00:01\n\n\n7\n0.581624\n0.473593\n0.727864\n0.664521\n00:01\n\n\n8\n0.541849\n0.459929\n0.734957\n0.674673\n00:01\n\n\n9\n0.508627\n0.450476\n0.741458\n0.676974\n00:01\n\n\n10\n0.478031\n0.442089\n0.747666\n0.674054\n00:01\n\n\n11\n0.448859\n0.419057\n0.762255\n0.703343\n00:01\n\n\n12\n0.423481\n0.432991\n0.753345\n0.686737\n00:01\n\n\n13\n0.401207\n0.407876\n0.770177\n0.708308\n00:01\n\n\n14\n0.379782\n0.412719\n0.766550\n0.704251\n00:01\n\n\n15\n0.360899\n0.407431\n0.770311\n0.706228\n00:01\n\n\n16\n0.345434\n0.396722\n0.776988\n0.716308\n00:01\n\n\n17\n0.331564\n0.397536\n0.776336\n0.714301\n00:01\n\n\n18\n0.318958\n0.398760\n0.775513\n0.713440\n00:01\n\n\n19\n0.308342\n0.397521\n0.776352\n0.714413\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3975\nAverage Pearson: 0.7645 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.159021\n0.994149\n0.078490\n0.050288\n00:01\n\n\n1\n1.037169\n0.951734\n0.294549\n0.267674\n00:01\n\n\n2\n0.919539\n0.824703\n0.531176\n0.498259\n00:01\n\n\n3\n0.823436\n0.710149\n0.607041\n0.516334\n00:01\n\n\n4\n0.744455\n0.589703\n0.672932\n0.584959\n00:01\n\n\n5\n0.679118\n0.514884\n0.701929\n0.633019\n00:01\n\n\n6\n0.626607\n0.509054\n0.700702\n0.619701\n00:01\n\n\n7\n0.588692\n0.490848\n0.714870\n0.639465\n00:01\n\n\n8\n0.554123\n0.465737\n0.733084\n0.654866\n00:01\n\n\n9\n0.515814\n0.469562\n0.728755\n0.643777\n00:01\n\n\n10\n0.482701\n0.442584\n0.749267\n0.670630\n00:01\n\n\n11\n0.454473\n0.439933\n0.752256\n0.666517\n00:01\n\n\n12\n0.430226\n0.439374\n0.749822\n0.663645\n00:01\n\n\n13\n0.406618\n0.410587\n0.770339\n0.691059\n00:01\n\n\n14\n0.384051\n0.421521\n0.763051\n0.671704\n00:01\n\n\n15\n0.364623\n0.416556\n0.764846\n0.673692\n00:01\n\n\n16\n0.347550\n0.402176\n0.774190\n0.686431\n00:01\n\n\n17\n0.331825\n0.397898\n0.777142\n0.693273\n00:01\n\n\n18\n0.320196\n0.398915\n0.776409\n0.690554\n00:01\n\n\n19\n0.309277\n0.399001\n0.776371\n0.690707\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3990\nAverage Pearson: 0.7607 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.137612\n0.994000\n0.078814\n0.056758\n00:01\n\n\n1\n1.023317\n0.943398\n0.318036\n0.285128\n00:01\n\n\n2\n0.904741\n0.811796\n0.544389\n0.492103\n00:01\n\n\n3\n0.814181\n0.683793\n0.634993\n0.545088\n00:01\n\n\n4\n0.736907\n0.581590\n0.680457\n0.597002\n00:01\n\n\n5\n0.676377\n0.519496\n0.695451\n0.618372\n00:01\n\n\n6\n0.628734\n0.512692\n0.699184\n0.605052\n00:01\n\n\n7\n0.585340\n0.521013\n0.696463\n0.626780\n00:01\n\n\n8\n0.548112\n0.464780\n0.731850\n0.645645\n00:01\n\n\n9\n0.513222\n0.485793\n0.717376\n0.619378\n00:01\n\n\n10\n0.480694\n0.447566\n0.744219\n0.658308\n00:01\n\n\n11\n0.451958\n0.443730\n0.745995\n0.660425\n00:01\n\n\n12\n0.427042\n0.457420\n0.736674\n0.640173\n00:01\n\n\n13\n0.404414\n0.421630\n0.761328\n0.679337\n00:01\n\n\n14\n0.383327\n0.430208\n0.755284\n0.665053\n00:01\n\n\n15\n0.364663\n0.428724\n0.755843\n0.673704\n00:01\n\n\n16\n0.347691\n0.422182\n0.760367\n0.676068\n00:01\n\n\n17\n0.333251\n0.419463\n0.762208\n0.677029\n00:01\n\n\n18\n0.318980\n0.419866\n0.762052\n0.675537\n00:01\n\n\n19\n0.310583\n0.419268\n0.762214\n0.676642\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4193\nAverage Pearson: 0.7586 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.136482\n0.993696\n0.080199\n0.085662\n00:01\n\n\n1\n0.998372\n0.923513\n0.385841\n0.354111\n00:01\n\n\n2\n0.872176\n0.756011\n0.592829\n0.549260\n00:01\n\n\n3\n0.775923\n0.635067\n0.660251\n0.602803\n00:01\n\n\n4\n0.702748\n0.526281\n0.705283\n0.634054\n00:01\n\n\n5\n0.647198\n0.522564\n0.698861\n0.627824\n00:01\n\n\n6\n0.597791\n0.489143\n0.718212\n0.664088\n00:01\n\n\n7\n0.561085\n0.517959\n0.694381\n0.615827\n00:01\n\n\n8\n0.527388\n0.451737\n0.740705\n0.679675\n00:01\n\n\n9\n0.493225\n0.438324\n0.749938\n0.707114\n00:01\n\n\n10\n0.462982\n0.433294\n0.753074\n0.687623\n00:01\n\n\n11\n0.436112\n0.405655\n0.771690\n0.721251\n00:01\n\n\n12\n0.412442\n0.400966\n0.774263\n0.719371\n00:01\n\n\n13\n0.390220\n0.404443\n0.771898\n0.723058\n00:01\n\n\n14\n0.372515\n0.382372\n0.785901\n0.733526\n00:01\n\n\n15\n0.356121\n0.390297\n0.781167\n0.720299\n00:01\n\n\n16\n0.341550\n0.382265\n0.786418\n0.733252\n00:01\n\n\n17\n0.330938\n0.375861\n0.790048\n0.739707\n00:01\n\n\n18\n0.318752\n0.374129\n0.791127\n0.738543\n00:01\n\n\n19\n0.308397\n0.374688\n0.790768\n0.736895\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3747\nAverage Pearson: 0.7680 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.126146\n0.994451\n0.074958\n0.072940\n00:01\n\n\n1\n0.992778\n0.921305\n0.378173\n0.347688\n00:01\n\n\n2\n0.870068\n0.759877\n0.573249\n0.527383\n00:01\n\n\n3\n0.775533\n0.644609\n0.644986\n0.587326\n00:01\n\n\n4\n0.697560\n0.581562\n0.665445\n0.598124\n00:01\n\n\n5\n0.643023\n0.548444\n0.674107\n0.601390\n00:01\n\n\n6\n0.597180\n0.528359\n0.687243\n0.619392\n00:01\n\n\n7\n0.555703\n0.480282\n0.720927\n0.675910\n00:01\n\n\n8\n0.521891\n0.466492\n0.730493\n0.675750\n00:01\n\n\n9\n0.491663\n0.466466\n0.731582\n0.673130\n00:01\n\n\n10\n0.463304\n0.476645\n0.723676\n0.659105\n00:01\n\n\n11\n0.438192\n0.445982\n0.744631\n0.683222\n00:01\n\n\n12\n0.413640\n0.437198\n0.750837\n0.691914\n00:01\n\n\n13\n0.392041\n0.427100\n0.756948\n0.702303\n00:01\n\n\n14\n0.372575\n0.413516\n0.766629\n0.709846\n00:01\n\n\n15\n0.356531\n0.416417\n0.764304\n0.707668\n00:01\n\n\n16\n0.343239\n0.412113\n0.766760\n0.711806\n00:01\n\n\n17\n0.328881\n0.404121\n0.772009\n0.718675\n00:01\n\n\n18\n0.317669\n0.403464\n0.772523\n0.718520\n00:01\n\n\n19\n0.308606\n0.403359\n0.772559\n0.718930\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4034\nAverage Pearson: 0.7568 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.124082\n1.000890\n0.025263\n0.032386\n00:01\n\n\n1\n0.990205\n0.933668\n0.369440\n0.343749\n00:01\n\n\n2\n0.874709\n0.771003\n0.587052\n0.541818\n00:01\n\n\n3\n0.783245\n0.638195\n0.652622\n0.597745\n00:01\n\n\n4\n0.710708\n0.558960\n0.678355\n0.600784\n00:01\n\n\n5\n0.654200\n0.515192\n0.701643\n0.643724\n00:01\n\n\n6\n0.603523\n0.469243\n0.728574\n0.670986\n00:01\n\n\n7\n0.563172\n0.514160\n0.697029\n0.620195\n00:01\n\n\n8\n0.527461\n0.492941\n0.712300\n0.636880\n00:01\n\n\n9\n0.496621\n0.438729\n0.749249\n0.698523\n00:01\n\n\n10\n0.470688\n0.431761\n0.753850\n0.692423\n00:01\n\n\n11\n0.445933\n0.415621\n0.764547\n0.712586\n00:01\n\n\n12\n0.421443\n0.407115\n0.771736\n0.709854\n00:01\n\n\n13\n0.399298\n0.400973\n0.773970\n0.715885\n00:01\n\n\n14\n0.378403\n0.386034\n0.783888\n0.725361\n00:01\n\n\n15\n0.361343\n0.381934\n0.786233\n0.730782\n00:01\n\n\n16\n0.345841\n0.379798\n0.787542\n0.732069\n00:01\n\n\n17\n0.331907\n0.377464\n0.789011\n0.731610\n00:01\n\n\n18\n0.319104\n0.378370\n0.788436\n0.731743\n00:01\n\n\n19\n0.309870\n0.378198\n0.788546\n0.731664\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3782\nAverage Pearson: 0.7812 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.122446\n0.995197\n0.070141\n0.057839\n00:01\n\n\n1\n0.993662\n0.926829\n0.389817\n0.347008\n00:01\n\n\n2\n0.873179\n0.771662\n0.602927\n0.548822\n00:01\n\n\n3\n0.781082\n0.638639\n0.680993\n0.596084\n00:01\n\n\n4\n0.709751\n0.527253\n0.708673\n0.622247\n00:01\n\n\n5\n0.653177\n0.476999\n0.729322\n0.640477\n00:01\n\n\n6\n0.603732\n0.474914\n0.724693\n0.621398\n00:01\n\n\n7\n0.565161\n0.436976\n0.750389\n0.682896\n00:01\n\n\n8\n0.533213\n0.435934\n0.754656\n0.661643\n00:01\n\n\n9\n0.502031\n0.399242\n0.778864\n0.701386\n00:01\n\n\n10\n0.469022\n0.387641\n0.785175\n0.709594\n00:01\n\n\n11\n0.442537\n0.400429\n0.779139\n0.702134\n00:01\n\n\n12\n0.418022\n0.370172\n0.794832\n0.718561\n00:01\n\n\n13\n0.397150\n0.372257\n0.794841\n0.717995\n00:01\n\n\n14\n0.378553\n0.365091\n0.800239\n0.720597\n00:01\n\n\n15\n0.362266\n0.359812\n0.803227\n0.729589\n00:01\n\n\n16\n0.345817\n0.355229\n0.804561\n0.734320\n00:01\n\n\n17\n0.331388\n0.350866\n0.807270\n0.733327\n00:01\n\n\n18\n0.318344\n0.350047\n0.807692\n0.732951\n00:01\n\n\n19\n0.307978\n0.350657\n0.807438\n0.731294\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3507\nAverage Pearson: 0.7909 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.133101\n0.996229\n0.062005\n0.046389\n00:01\n\n\n1\n0.996671\n0.924041\n0.393522\n0.339823\n00:01\n\n\n2\n0.878841\n0.769787\n0.600870\n0.544570\n00:01\n\n\n3\n0.783613\n0.630914\n0.678652\n0.599448\n00:01\n\n\n4\n0.708441\n0.512700\n0.712528\n0.627240\n00:01\n\n\n5\n0.648157\n0.505964\n0.704126\n0.623504\n00:01\n\n\n6\n0.596509\n0.458010\n0.736221\n0.649767\n00:01\n\n\n7\n0.556387\n0.475411\n0.729549\n0.646778\n00:01\n\n\n8\n0.524189\n0.466897\n0.734682\n0.663400\n00:01\n\n\n9\n0.493333\n0.442036\n0.747183\n0.660340\n00:01\n\n\n10\n0.464119\n0.417680\n0.764113\n0.678446\n00:01\n\n\n11\n0.437889\n0.399755\n0.775965\n0.692754\n00:01\n\n\n12\n0.414478\n0.400790\n0.774522\n0.699172\n00:01\n\n\n13\n0.392500\n0.392561\n0.780793\n0.701474\n00:01\n\n\n14\n0.374135\n0.386335\n0.783828\n0.704602\n00:01\n\n\n15\n0.356031\n0.376459\n0.789979\n0.707439\n00:01\n\n\n16\n0.341838\n0.377868\n0.788760\n0.711054\n00:01\n\n\n17\n0.329440\n0.374104\n0.791212\n0.712184\n00:01\n\n\n18\n0.317193\n0.372992\n0.791939\n0.711894\n00:01\n\n\n19\n0.308452\n0.372502\n0.792183\n0.713401\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3725\nAverage Pearson: 0.7815 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.292544\n0.989465\n0.116011\n0.109405\n00:04\n\n\n1\n1.142734\n0.991869\n0.100687\n0.042590\n00:01\n\n\n2\n1.021166\n1.054265\n0.164518\n0.115665\n00:01\n\n\n3\n0.946030\n0.983256\n0.260691\n0.208587\n00:01\n\n\n4\n0.877899\n0.945536\n0.289812\n0.283952\n00:02\n\n\n5\n0.806079\n0.700232\n0.563017\n0.523097\n00:01\n\n\n6\n0.728828\n0.627072\n0.617049\n0.557381\n00:01\n\n\n7\n0.653791\n0.481928\n0.721406\n0.645876\n00:01\n\n\n8\n0.589306\n0.447124\n0.749204\n0.668335\n00:01\n\n\n9\n0.527541\n0.438720\n0.753606\n0.682532\n00:01\n\n\n10\n0.473683\n0.400283\n0.776752\n0.705523\n00:01\n\n\n11\n0.424068\n0.399002\n0.777605\n0.712934\n00:01\n\n\n12\n0.379440\n0.385126\n0.784515\n0.718525\n00:01\n\n\n13\n0.342999\n0.382498\n0.787217\n0.718554\n00:01\n\n\n14\n0.308789\n0.375983\n0.791154\n0.723687\n00:01\n\n\n15\n0.279898\n0.371299\n0.794482\n0.727699\n00:01\n\n\n16\n0.256017\n0.369786\n0.795179\n0.729493\n00:01\n\n\n17\n0.234444\n0.368144\n0.796001\n0.729999\n00:02\n\n\n18\n0.216537\n0.370098\n0.795056\n0.730636\n00:02\n\n\n19\n0.200367\n0.369142\n0.795590\n0.730623\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3691\nAverage Pearson: 0.7754 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.280892\n0.989775\n0.106935\n0.080704\n00:02\n\n\n1\n1.139460\n0.983054\n0.131488\n0.064454\n00:01\n\n\n2\n1.023331\n1.085983\n0.099590\n0.051320\n00:01\n\n\n3\n0.932097\n1.008756\n0.229172\n0.224889\n00:01\n\n\n4\n0.860198\n0.809107\n0.436972\n0.383236\n00:01\n\n\n5\n0.794526\n0.802949\n0.505577\n0.465394\n00:02\n\n\n6\n0.734285\n0.681683\n0.582518\n0.517996\n00:01\n\n\n7\n0.665784\n0.555346\n0.682581\n0.627427\n00:01\n\n\n8\n0.595424\n0.507221\n0.715518\n0.657850\n00:01\n\n\n9\n0.533775\n0.482111\n0.729736\n0.668044\n00:01\n\n\n10\n0.478819\n0.434856\n0.753900\n0.691042\n00:01\n\n\n11\n0.430259\n0.428804\n0.756737\n0.694282\n00:01\n\n\n12\n0.386865\n0.414727\n0.767028\n0.707041\n00:01\n\n\n13\n0.349853\n0.407413\n0.770093\n0.710540\n00:01\n\n\n14\n0.317262\n0.402065\n0.774094\n0.717342\n00:01\n\n\n15\n0.286859\n0.402339\n0.775044\n0.721081\n00:01\n\n\n16\n0.263531\n0.403439\n0.774398\n0.720476\n00:01\n\n\n17\n0.241825\n0.403351\n0.774802\n0.721002\n00:01\n\n\n18\n0.224196\n0.404154\n0.774939\n0.722095\n00:01\n\n\n19\n0.208126\n0.401012\n0.776437\n0.722986\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4010\nAverage Pearson: 0.7651 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.268538\n0.989308\n0.112892\n0.063198\n00:01\n\n\n1\n1.125541\n0.984390\n0.130679\n0.085495\n00:01\n\n\n2\n1.014183\n1.182768\n0.041443\n0.019458\n00:01\n\n\n3\n0.935534\n0.891649\n0.329646\n0.284717\n00:01\n\n\n4\n0.864271\n0.769452\n0.480573\n0.482503\n00:01\n\n\n5\n0.800483\n0.686034\n0.561784\n0.472785\n00:01\n\n\n6\n0.734342\n0.560399\n0.663065\n0.587283\n00:01\n\n\n7\n0.661612\n0.493249\n0.711880\n0.632056\n00:01\n\n\n8\n0.591530\n0.471516\n0.732291\n0.647952\n00:01\n\n\n9\n0.531793\n0.426530\n0.758131\n0.686342\n00:01\n\n\n10\n0.477233\n0.424800\n0.759427\n0.678865\n00:01\n\n\n11\n0.427130\n0.401040\n0.775090\n0.704277\n00:01\n\n\n12\n0.383997\n0.397809\n0.776769\n0.701171\n00:01\n\n\n13\n0.345138\n0.390293\n0.781702\n0.715485\n00:01\n\n\n14\n0.312779\n0.387198\n0.783686\n0.715852\n00:01\n\n\n15\n0.283868\n0.387039\n0.784264\n0.718828\n00:01\n\n\n16\n0.258474\n0.382317\n0.787521\n0.721553\n00:02\n\n\n17\n0.238743\n0.381882\n0.788048\n0.722055\n00:01\n\n\n18\n0.220132\n0.379602\n0.789345\n0.722361\n00:01\n\n\n19\n0.204240\n0.378418\n0.789904\n0.723349\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3784\nAverage Pearson: 0.7729 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.285269\n0.990208\n0.107578\n0.077208\n00:01\n\n\n1\n1.135616\n0.982261\n0.135285\n0.109125\n00:01\n\n\n2\n1.017804\n1.258903\n0.061325\n0.067551\n00:01\n\n\n3\n0.948030\n1.043126\n0.207390\n0.235657\n00:01\n\n\n4\n0.876326\n0.817656\n0.427716\n0.363078\n00:01\n\n\n5\n0.810635\n0.750633\n0.514241\n0.421862\n00:01\n\n\n6\n0.740500\n0.605633\n0.633040\n0.538895\n00:01\n\n\n7\n0.668496\n0.468002\n0.734820\n0.661240\n00:01\n\n\n8\n0.599872\n0.444961\n0.747589\n0.659324\n00:01\n\n\n9\n0.536926\n0.394913\n0.778070\n0.700332\n00:01\n\n\n10\n0.481401\n0.403894\n0.772454\n0.692345\n00:01\n\n\n11\n0.433141\n0.387417\n0.782803\n0.703208\n00:01\n\n\n12\n0.388801\n0.390385\n0.780893\n0.699940\n00:01\n\n\n13\n0.349964\n0.386334\n0.783768\n0.706491\n00:01\n\n\n14\n0.318607\n0.395447\n0.777858\n0.693136\n00:01\n\n\n15\n0.288273\n0.383656\n0.786312\n0.710476\n00:01\n\n\n16\n0.264929\n0.373477\n0.792364\n0.719627\n00:01\n\n\n17\n0.243218\n0.373152\n0.792222\n0.717112\n00:01\n\n\n18\n0.226395\n0.372036\n0.792981\n0.717033\n00:01\n\n\n19\n0.210004\n0.372572\n0.792566\n0.714659\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3726\nAverage Pearson: 0.7783 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.284542\n0.989482\n0.110908\n0.076821\n00:02\n\n\n1\n1.136575\n1.001484\n0.083966\n0.004165\n00:01\n\n\n2\n1.022551\n0.992045\n0.183526\n0.172091\n00:01\n\n\n3\n0.947053\n0.971159\n0.319269\n0.245793\n00:01\n\n\n4\n0.879423\n0.991022\n0.268215\n0.172019\n00:01\n\n\n5\n0.809498\n0.758455\n0.501788\n0.427878\n00:01\n\n\n6\n0.738233\n0.655159\n0.616733\n0.535067\n00:01\n\n\n7\n0.663848\n0.509706\n0.711039\n0.622114\n00:01\n\n\n8\n0.595070\n0.457961\n0.739392\n0.644187\n00:01\n\n\n9\n0.528692\n0.424382\n0.761139\n0.671177\n00:01\n\n\n10\n0.471552\n0.422025\n0.761534\n0.668902\n00:01\n\n\n11\n0.427599\n0.416640\n0.765545\n0.679142\n00:01\n\n\n12\n0.382249\n0.405983\n0.771352\n0.685278\n00:02\n\n\n13\n0.343336\n0.405263\n0.773513\n0.693766\n00:02\n\n\n14\n0.309523\n0.391437\n0.780910\n0.697412\n00:01\n\n\n15\n0.283125\n0.381287\n0.788159\n0.704462\n00:01\n\n\n16\n0.257358\n0.385970\n0.785340\n0.701128\n00:01\n\n\n17\n0.235116\n0.385500\n0.785613\n0.701755\n00:01\n\n\n18\n0.216113\n0.385400\n0.785668\n0.702862\n00:01\n\n\n19\n0.202255\n0.383209\n0.787097\n0.703337\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3832\nAverage Pearson: 0.7703 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.248910\n0.990329\n0.107553\n0.075002\n00:01\n\n\n1\n1.091407\n1.004232\n0.057023\n0.063556\n00:01\n\n\n2\n0.981395\n1.028895\n0.110138\n0.062971\n00:01\n\n\n3\n0.904417\n0.934115\n0.277484\n0.224396\n00:01\n\n\n4\n0.842598\n0.876274\n0.352068\n0.285614\n00:01\n\n\n5\n0.787378\n0.721206\n0.530349\n0.449411\n00:01\n\n\n6\n0.716401\n0.627813\n0.616593\n0.541714\n00:02\n\n\n7\n0.648505\n0.519202\n0.695117\n0.639158\n00:02\n\n\n8\n0.587389\n0.469505\n0.737564\n0.670411\n00:02\n\n\n9\n0.533930\n0.404412\n0.772227\n0.705982\n00:02\n\n\n10\n0.485104\n0.416608\n0.765770\n0.705394\n00:02\n\n\n11\n0.439701\n0.395817\n0.780965\n0.718095\n00:02\n\n\n12\n0.397569\n0.375670\n0.793369\n0.734500\n00:01\n\n\n13\n0.362731\n0.369370\n0.795240\n0.737282\n00:01\n\n\n14\n0.330319\n0.370768\n0.796590\n0.741612\n00:02\n\n\n15\n0.302045\n0.368364\n0.797711\n0.743663\n00:01\n\n\n16\n0.276591\n0.367423\n0.797541\n0.740992\n00:01\n\n\n17\n0.256490\n0.363760\n0.800512\n0.744347\n00:01\n\n\n18\n0.240127\n0.365616\n0.800209\n0.744046\n00:01\n\n\n19\n0.226115\n0.366132\n0.800020\n0.744812\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3661\nAverage Pearson: 0.7832 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.260543\n0.989198\n0.117010\n0.070382\n00:02\n\n\n1\n1.092462\n0.988899\n0.111428\n0.067119\n00:01\n\n\n2\n0.979237\n0.987732\n0.183323\n0.119536\n00:01\n\n\n3\n0.907215\n0.909729\n0.302536\n0.280490\n00:01\n\n\n4\n0.841430\n0.859976\n0.375066\n0.350604\n00:01\n\n\n5\n0.778112\n0.675421\n0.570308\n0.514938\n00:01\n\n\n6\n0.713817\n0.634272\n0.605147\n0.529246\n00:02\n\n\n7\n0.651417\n0.493535\n0.714316\n0.642089\n00:02\n\n\n8\n0.588797\n0.464606\n0.738157\n0.681146\n00:01\n\n\n9\n0.535079\n0.411608\n0.769504\n0.705002\n00:01\n\n\n10\n0.484705\n0.397191\n0.780252\n0.713096\n00:01\n\n\n11\n0.439167\n0.396294\n0.778737\n0.715007\n00:01\n\n\n12\n0.399922\n0.378118\n0.790435\n0.728347\n00:02\n\n\n13\n0.365531\n0.364318\n0.798136\n0.732678\n00:01\n\n\n14\n0.332979\n0.363607\n0.798931\n0.731076\n00:02\n\n\n15\n0.303887\n0.360467\n0.800383\n0.733379\n00:01\n\n\n16\n0.279600\n0.359879\n0.801332\n0.738344\n00:01\n\n\n17\n0.261387\n0.357479\n0.803671\n0.741484\n00:02\n\n\n18\n0.244418\n0.358399\n0.803504\n0.740766\n00:01\n\n\n19\n0.229661\n0.356755\n0.804363\n0.741831\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3568\nAverage Pearson: 0.8002 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.241334\n0.987173\n0.126982\n0.038944\n00:02\n\n\n1\n1.087275\n0.986407\n0.125084\n0.033662\n00:02\n\n\n2\n0.972466\n1.049425\n0.117816\n0.137235\n00:01\n\n\n3\n0.897240\n0.852623\n0.392091\n0.301257\n00:01\n\n\n4\n0.835681\n0.934227\n0.369359\n0.343481\n00:02\n\n\n5\n0.774235\n0.736187\n0.515436\n0.426457\n00:01\n\n\n6\n0.705956\n0.580412\n0.647782\n0.570580\n00:01\n\n\n7\n0.640253\n0.490460\n0.713847\n0.633763\n00:01\n\n\n8\n0.580089\n0.416725\n0.766332\n0.695887\n00:01\n\n\n9\n0.526275\n0.393426\n0.781002\n0.704387\n00:01\n\n\n10\n0.481167\n0.389264\n0.786589\n0.711328\n00:02\n\n\n11\n0.436207\n0.355401\n0.806026\n0.730975\n00:01\n\n\n12\n0.395817\n0.350991\n0.805989\n0.736054\n00:01\n\n\n13\n0.358858\n0.343960\n0.811849\n0.745606\n00:01\n\n\n14\n0.327075\n0.339657\n0.814190\n0.748141\n00:01\n\n\n15\n0.299981\n0.340178\n0.814317\n0.746659\n00:01\n\n\n16\n0.274345\n0.333071\n0.818946\n0.753000\n00:01\n\n\n17\n0.254738\n0.332077\n0.820435\n0.756039\n00:01\n\n\n18\n0.236760\n0.331746\n0.820646\n0.755893\n00:01\n\n\n19\n0.221317\n0.332671\n0.820407\n0.756171\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3327\nAverage Pearson: 0.8122 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.251677\n0.986292\n0.133228\n0.061990\n00:02\n\n\n1\n1.102669\n1.015790\n0.020404\n-0.018939\n00:01\n\n\n2\n0.999381\n0.971351\n0.236474\n0.214251\n00:01\n\n\n3\n0.927511\n1.109817\n0.222932\n0.207917\n00:02\n\n\n4\n0.860651\n0.992894\n0.362856\n0.272478\n00:01\n\n\n5\n0.796436\n0.707508\n0.542654\n0.493122\n00:01\n\n\n6\n0.726586\n0.593804\n0.638483\n0.554444\n00:01\n\n\n7\n0.660332\n0.448944\n0.742450\n0.652884\n00:02\n\n\n8\n0.595792\n0.413435\n0.766413\n0.671086\n00:01\n\n\n9\n0.539051\n0.383802\n0.785490\n0.699669\n00:01\n\n\n10\n0.488729\n0.358269\n0.802580\n0.717719\n00:01\n\n\n11\n0.442265\n0.357663\n0.802433\n0.719604\n00:01\n\n\n12\n0.399860\n0.342035\n0.811833\n0.727329\n00:01\n\n\n13\n0.362990\n0.338557\n0.814197\n0.731113\n00:02\n\n\n14\n0.333234\n0.339501\n0.813450\n0.726905\n00:01\n\n\n15\n0.303844\n0.332058\n0.818048\n0.733222\n00:01\n\n\n16\n0.278226\n0.323582\n0.823165\n0.741331\n00:01\n\n\n17\n0.258983\n0.321725\n0.824855\n0.743388\n00:02\n\n\n18\n0.240836\n0.320463\n0.825558\n0.745061\n00:01\n\n\n19\n0.226227\n0.321140\n0.825398\n0.746369\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3211\nAverage Pearson: 0.8147 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.236935\n0.988487\n0.122808\n0.116170\n00:02\n\n\n1\n1.088595\n0.995019\n0.099203\n0.074631\n00:01\n\n\n2\n0.978199\n1.091740\n0.126714\n0.104141\n00:01\n\n\n3\n0.907331\n1.035308\n0.227215\n0.194727\n00:01\n\n\n4\n0.851115\n0.803582\n0.443475\n0.369602\n00:01\n\n\n5\n0.781886\n0.742443\n0.509365\n0.444919\n00:01\n\n\n6\n0.720206\n0.607618\n0.638965\n0.565104\n00:01\n\n\n7\n0.653392\n0.471417\n0.731905\n0.639212\n00:01\n\n\n8\n0.594954\n0.433168\n0.754789\n0.674654\n00:02\n\n\n9\n0.537510\n0.395863\n0.781489\n0.708912\n00:02\n\n\n10\n0.486986\n0.383629\n0.790200\n0.714029\n00:01\n\n\n11\n0.442931\n0.372998\n0.794049\n0.714222\n00:01\n\n\n12\n0.401149\n0.355948\n0.803362\n0.729252\n00:01\n\n\n13\n0.364503\n0.351793\n0.806130\n0.731589\n00:02\n\n\n14\n0.332320\n0.343401\n0.811578\n0.742973\n00:01\n\n\n15\n0.304907\n0.345853\n0.810774\n0.747145\n00:02\n\n\n16\n0.279843\n0.342521\n0.812941\n0.747764\n00:01\n\n\n17\n0.257735\n0.337479\n0.815760\n0.748417\n00:01\n\n\n18\n0.239465\n0.338518\n0.815463\n0.748004\n00:02\n\n\n19\n0.223342\n0.339779\n0.814977\n0.747309\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3398\nAverage Pearson: 0.8016 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.302429\n0.987325\n0.126596\n0.101961\n00:02\n\n\n1\n1.155154\n0.975091\n0.165441\n0.156144\n00:02\n\n\n2\n1.051807\n1.047461\n0.137457\n0.101728\n00:02\n\n\n3\n0.978245\n0.838732\n0.402352\n0.362293\n00:01\n\n\n4\n0.916060\n0.763447\n0.493328\n0.391600\n00:02\n\n\n5\n0.849674\n0.650760\n0.610215\n0.507070\n00:01\n\n\n6\n0.779025\n0.765222\n0.621145\n0.574651\n00:01\n\n\n7\n0.713487\n0.650561\n0.639459\n0.584059\n00:01\n\n\n8\n0.648538\n0.513293\n0.720456\n0.640336\n00:01\n\n\n9\n0.588102\n0.451876\n0.745794\n0.665660\n00:02\n\n\n10\n0.532481\n0.436752\n0.752517\n0.683612\n00:02\n\n\n11\n0.482198\n0.419981\n0.762859\n0.697499\n00:01\n\n\n12\n0.435735\n0.408149\n0.770586\n0.706340\n00:02\n\n\n13\n0.393729\n0.390405\n0.781229\n0.718713\n00:01\n\n\n14\n0.357081\n0.388408\n0.782511\n0.719296\n00:02\n\n\n15\n0.324201\n0.378048\n0.789314\n0.726044\n00:02\n\n\n16\n0.294940\n0.381352\n0.787463\n0.726808\n00:01\n\n\n17\n0.272517\n0.382992\n0.786585\n0.726677\n00:01\n\n\n18\n0.252022\n0.382954\n0.786527\n0.727006\n00:01\n\n\n19\n0.234367\n0.381431\n0.787435\n0.727977\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3814\nAverage Pearson: 0.7636 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.288849\n0.991512\n0.098513\n0.104055\n00:01\n\n\n1\n1.149817\n0.969611\n0.178000\n0.149233\n00:01\n\n\n2\n1.056316\n0.957713\n0.223003\n0.183647\n00:02\n\n\n3\n0.983231\n0.871047\n0.373427\n0.280447\n00:02\n\n\n4\n0.907145\n0.804289\n0.452214\n0.404478\n00:01\n\n\n5\n0.843737\n0.788859\n0.564525\n0.520059\n00:01\n\n\n6\n0.769427\n0.761436\n0.613170\n0.541585\n00:01\n\n\n7\n0.697985\n0.572734\n0.686768\n0.620936\n00:01\n\n\n8\n0.629333\n0.531864\n0.696246\n0.631403\n00:01\n\n\n9\n0.568340\n0.498049\n0.716345\n0.667771\n00:01\n\n\n10\n0.512161\n0.459351\n0.739452\n0.679541\n00:02\n\n\n11\n0.461319\n0.447312\n0.747641\n0.692540\n00:02\n\n\n12\n0.415244\n0.435592\n0.751909\n0.693253\n00:01\n\n\n13\n0.375535\n0.438347\n0.751241\n0.696197\n00:01\n\n\n14\n0.340046\n0.433697\n0.755796\n0.702874\n00:01\n\n\n15\n0.309290\n0.432975\n0.756330\n0.705302\n00:01\n\n\n16\n0.283417\n0.428268\n0.759999\n0.707145\n00:01\n\n\n17\n0.261719\n0.426624\n0.761300\n0.707384\n00:01\n\n\n18\n0.241418\n0.424188\n0.762458\n0.709830\n00:01\n\n\n19\n0.224227\n0.424426\n0.762589\n0.709572\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.4244\nAverage Pearson: 0.7512 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.294832\n0.993058\n0.086690\n0.041377\n00:01\n\n\n1\n1.149183\n0.988674\n0.108200\n0.064975\n00:01\n\n\n2\n1.049579\n1.063563\n0.110334\n0.096180\n00:01\n\n\n3\n0.991086\n0.833912\n0.408381\n0.332441\n00:01\n\n\n4\n0.943465\n0.803314\n0.443683\n0.391172\n00:01\n\n\n5\n0.868038\n0.660401\n0.607326\n0.534908\n00:01\n\n\n6\n0.800216\n0.741996\n0.580026\n0.476736\n00:01\n\n\n7\n0.730816\n0.563737\n0.688017\n0.608828\n00:01\n\n\n8\n0.667033\n0.567450\n0.708758\n0.632448\n00:01\n\n\n9\n0.602029\n0.455588\n0.744640\n0.669595\n00:01\n\n\n10\n0.541773\n0.434250\n0.755714\n0.677287\n00:01\n\n\n11\n0.487524\n0.423086\n0.759761\n0.693215\n00:01\n\n\n12\n0.438407\n0.409683\n0.769476\n0.694270\n00:01\n\n\n13\n0.398067\n0.403435\n0.773739\n0.702185\n00:01\n\n\n14\n0.364256\n0.392025\n0.781198\n0.714200\n00:02\n\n\n15\n0.330292\n0.393080\n0.779975\n0.711770\n00:02\n\n\n16\n0.300850\n0.386400\n0.784721\n0.714298\n00:01\n\n\n17\n0.275743\n0.387235\n0.784316\n0.712658\n00:01\n\n\n18\n0.256593\n0.385274\n0.785780\n0.715210\n00:02\n\n\n19\n0.239255\n0.388006\n0.784210\n0.713320\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3880\nAverage Pearson: 0.7684 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.297134\n0.992432\n0.089417\n0.040924\n00:02\n\n\n1\n1.153744\n0.995849\n0.087174\n0.034802\n00:02\n\n\n2\n1.053385\n0.965197\n0.214082\n0.146169\n00:01\n\n\n3\n0.996689\n0.896478\n0.353285\n0.348727\n00:01\n\n\n4\n0.926985\n0.790891\n0.459010\n0.366767\n00:01\n\n\n5\n0.859994\n0.847036\n0.526804\n0.472004\n00:01\n\n\n6\n0.789911\n0.670244\n0.619232\n0.534482\n00:01\n\n\n7\n0.719859\n0.531346\n0.698154\n0.614017\n00:02\n\n\n8\n0.657427\n0.504494\n0.711225\n0.630594\n00:02\n\n\n9\n0.594539\n0.460375\n0.741614\n0.657430\n00:02\n\n\n10\n0.537270\n0.436117\n0.754968\n0.685517\n00:02\n\n\n11\n0.484126\n0.435703\n0.752113\n0.654708\n00:01\n\n\n12\n0.437753\n0.426184\n0.757520\n0.675571\n00:01\n\n\n13\n0.395919\n0.403072\n0.773015\n0.695596\n00:01\n\n\n14\n0.358442\n0.392178\n0.779654\n0.697854\n00:01\n\n\n15\n0.324655\n0.396436\n0.776937\n0.692145\n00:01\n\n\n16\n0.297128\n0.391469\n0.780294\n0.698397\n00:01\n\n\n17\n0.273765\n0.384951\n0.784569\n0.705255\n00:01\n\n\n18\n0.253901\n0.385762\n0.784140\n0.703063\n00:02\n\n\n19\n0.236064\n0.384611\n0.784772\n0.703431\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3846\nAverage Pearson: 0.7662 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.280601\n0.987249\n0.135629\n0.125721\n00:01\n\n\n1\n1.143126\n0.981064\n0.138952\n0.115609\n00:01\n\n\n2\n1.044881\n0.970373\n0.223964\n0.169955\n00:01\n\n\n3\n0.975163\n0.851138\n0.386579\n0.332334\n00:01\n\n\n4\n0.915974\n0.817548\n0.429852\n0.314103\n00:02\n\n\n5\n0.844742\n0.658974\n0.638312\n0.543933\n00:02\n\n\n6\n0.774957\n0.675945\n0.643501\n0.548340\n00:01\n\n\n7\n0.709393\n0.574169\n0.696119\n0.585268\n00:01\n\n\n8\n0.645132\n0.530699\n0.696703\n0.604004\n00:02\n\n\n9\n0.583587\n0.451727\n0.742912\n0.655546\n00:01\n\n\n10\n0.526324\n0.440966\n0.751961\n0.659735\n00:01\n\n\n11\n0.474205\n0.421800\n0.760671\n0.676549\n00:01\n\n\n12\n0.426346\n0.414305\n0.765837\n0.685452\n00:01\n\n\n13\n0.386355\n0.406306\n0.770901\n0.690389\n00:01\n\n\n14\n0.350649\n0.387192\n0.783118\n0.702226\n00:01\n\n\n15\n0.319704\n0.398768\n0.775639\n0.694322\n00:02\n\n\n16\n0.292609\n0.397432\n0.776968\n0.697457\n00:01\n\n\n17\n0.270361\n0.393982\n0.779288\n0.699625\n00:01\n\n\n18\n0.249420\n0.388777\n0.782461\n0.703426\n00:01\n\n\n19\n0.234135\n0.388849\n0.782549\n0.703486\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3888\nAverage Pearson: 0.7725 \n------fold0------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.253576\n0.993299\n0.084734\n0.056130\n00:02\n\n\n1\n1.098991\n0.982216\n0.134073\n0.078020\n00:01\n\n\n2\n0.991126\n0.968159\n0.204686\n0.154167\n00:01\n\n\n3\n0.916993\n0.769684\n0.494121\n0.431679\n00:01\n\n\n4\n0.848817\n0.699939\n0.551495\n0.492341\n00:02\n\n\n5\n0.786676\n0.684427\n0.641190\n0.534389\n00:01\n\n\n6\n0.720431\n0.668424\n0.671995\n0.569518\n00:01\n\n\n7\n0.657140\n0.532488\n0.724972\n0.626365\n00:02\n\n\n8\n0.599847\n0.503078\n0.742054\n0.680196\n00:01\n\n\n9\n0.544374\n0.430222\n0.768765\n0.704063\n00:02\n\n\n10\n0.495027\n0.419910\n0.764446\n0.688815\n00:02\n\n\n11\n0.448164\n0.383106\n0.787739\n0.725918\n00:01\n\n\n12\n0.407634\n0.383452\n0.785797\n0.722562\n00:01\n\n\n13\n0.369311\n0.371796\n0.795432\n0.730201\n00:02\n\n\n14\n0.336534\n0.356941\n0.802795\n0.740340\n00:01\n\n\n15\n0.307939\n0.356954\n0.802798\n0.739997\n00:01\n\n\n16\n0.282923\n0.358317\n0.802423\n0.740345\n00:02\n\n\n17\n0.260953\n0.358263\n0.802944\n0.740781\n00:02\n\n\n18\n0.243947\n0.357304\n0.804332\n0.742581\n00:02\n\n\n19\n0.228440\n0.359198\n0.803134\n0.740646\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3592\nAverage Pearson: 0.7813 \n------fold1------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.229177\n0.989660\n0.108738\n0.043703\n00:02\n\n\n1\n1.080249\n0.984985\n0.125213\n0.108477\n00:02\n\n\n2\n0.978429\n0.947816\n0.231414\n0.171291\n00:01\n\n\n3\n0.911561\n0.922546\n0.290002\n0.256684\n00:01\n\n\n4\n0.847492\n0.711955\n0.548586\n0.518456\n00:01\n\n\n5\n0.786505\n0.700665\n0.603755\n0.526356\n00:02\n\n\n6\n0.726127\n0.623342\n0.677597\n0.608144\n00:02\n\n\n7\n0.657878\n0.522822\n0.721908\n0.642809\n00:02\n\n\n8\n0.593254\n0.483774\n0.735289\n0.669383\n00:02\n\n\n9\n0.538243\n0.432575\n0.758054\n0.692037\n00:02\n\n\n10\n0.489276\n0.435340\n0.757060\n0.691530\n00:01\n\n\n11\n0.442978\n0.402596\n0.775390\n0.717231\n00:02\n\n\n12\n0.401603\n0.400804\n0.776240\n0.714973\n00:01\n\n\n13\n0.367163\n0.386713\n0.785368\n0.730425\n00:01\n\n\n14\n0.333535\n0.377267\n0.791090\n0.735552\n00:02\n\n\n15\n0.307870\n0.380115\n0.788787\n0.735055\n00:01\n\n\n16\n0.285180\n0.378731\n0.791048\n0.737706\n00:02\n\n\n17\n0.263502\n0.377103\n0.792220\n0.738326\n00:01\n\n\n18\n0.246818\n0.378105\n0.791844\n0.739270\n00:01\n\n\n19\n0.231383\n0.378058\n0.792256\n0.739782\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3781\nAverage Pearson: 0.7831 \n------fold2------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.236020\n0.995248\n0.070178\n0.027696\n00:01\n\n\n1\n1.078264\n0.988759\n0.110743\n0.050422\n00:01\n\n\n2\n0.984304\n0.938209\n0.253295\n0.167887\n00:01\n\n\n3\n0.937014\n0.888574\n0.363953\n0.332320\n00:01\n\n\n4\n0.864709\n0.737954\n0.516128\n0.468583\n00:01\n\n\n5\n0.802079\n0.694279\n0.601614\n0.525180\n00:01\n\n\n6\n0.731031\n0.581466\n0.688198\n0.585389\n00:01\n\n\n7\n0.668890\n0.576273\n0.708466\n0.627421\n00:01\n\n\n8\n0.609645\n0.487239\n0.746917\n0.665989\n00:01\n\n\n9\n0.552273\n0.419803\n0.770106\n0.700640\n00:01\n\n\n10\n0.504205\n0.392702\n0.791177\n0.723144\n00:02\n\n\n11\n0.455966\n0.380881\n0.793029\n0.731347\n00:01\n\n\n12\n0.413697\n0.360351\n0.800757\n0.738299\n00:01\n\n\n13\n0.375634\n0.354147\n0.805446\n0.743756\n00:02\n\n\n14\n0.340859\n0.349533\n0.808628\n0.745022\n00:02\n\n\n15\n0.310495\n0.344345\n0.812192\n0.750473\n00:01\n\n\n16\n0.286112\n0.343202\n0.812886\n0.753854\n00:01\n\n\n17\n0.263695\n0.341192\n0.814375\n0.756187\n00:01\n\n\n18\n0.244116\n0.340667\n0.814781\n0.757726\n00:01\n\n\n19\n0.227210\n0.341916\n0.814201\n0.756914\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3419\nAverage Pearson: 0.8041 \n------fold3------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.222317\n0.993610\n0.080199\n0.032400\n00:02\n\n\n1\n1.076854\n0.977526\n0.150822\n0.129489\n00:01\n\n\n2\n0.980216\n0.998324\n0.164397\n0.158476\n00:02\n\n\n3\n0.913132\n0.770909\n0.481249\n0.440876\n00:01\n\n\n4\n0.859254\n0.649468\n0.593107\n0.492686\n00:01\n\n\n5\n0.800511\n0.686524\n0.628884\n0.560609\n00:01\n\n\n6\n0.739962\n0.612573\n0.670090\n0.540904\n00:01\n\n\n7\n0.675889\n0.531022\n0.705821\n0.602978\n00:01\n\n\n8\n0.611711\n0.439105\n0.755904\n0.676651\n00:01\n\n\n9\n0.552348\n0.389951\n0.784729\n0.703547\n00:01\n\n\n10\n0.501550\n0.382362\n0.786562\n0.700800\n00:01\n\n\n11\n0.455271\n0.363148\n0.798155\n0.711976\n00:01\n\n\n12\n0.414663\n0.356388\n0.802305\n0.718339\n00:02\n\n\n13\n0.378637\n0.341276\n0.811883\n0.721803\n00:02\n\n\n14\n0.347239\n0.334652\n0.817324\n0.733146\n00:02\n\n\n15\n0.318244\n0.333288\n0.817523\n0.737039\n00:01\n\n\n16\n0.291708\n0.328481\n0.819984\n0.738902\n00:02\n\n\n17\n0.269269\n0.324076\n0.822952\n0.741093\n00:02\n\n\n18\n0.251296\n0.322984\n0.823729\n0.742280\n00:02\n\n\n19\n0.235073\n0.323208\n0.823799\n0.743069\n00:02\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3232\nAverage Pearson: 0.8073 \n------fold4------\nlr in training is 0.003\n\n\n\n\n\n\n\n\n\nepoch\ntrain_loss\nvalid_loss\npearsonr\nspearmanr\ntime\n\n\n\n\n0\n1.238034\n0.995568\n0.067444\n0.017039\n00:02\n\n\n1\n1.087779\n0.997393\n0.086055\n0.001116\n00:02\n\n\n2\n0.986789\n0.962331\n0.221712\n0.125929\n00:01\n\n\n3\n0.921382\n0.781944\n0.474640\n0.396243\n00:02\n\n\n4\n0.856494\n0.741954\n0.513045\n0.422718\n00:02\n\n\n5\n0.795871\n0.652096\n0.633885\n0.545384\n00:02\n\n\n6\n0.734708\n0.623018\n0.692585\n0.576608\n00:02\n\n\n7\n0.667443\n0.561336\n0.715499\n0.607036\n00:02\n\n\n8\n0.607193\n0.460601\n0.746010\n0.651354\n00:02\n\n\n9\n0.554969\n0.463469\n0.755858\n0.669316\n00:01\n\n\n10\n0.504137\n0.386735\n0.786635\n0.709550\n00:02\n\n\n11\n0.456302\n0.378401\n0.790805\n0.705523\n00:01\n\n\n12\n0.414623\n0.366218\n0.796153\n0.710435\n00:01\n\n\n13\n0.375654\n0.345754\n0.809332\n0.732095\n00:01\n\n\n14\n0.341691\n0.344036\n0.809975\n0.731792\n00:01\n\n\n15\n0.311097\n0.343089\n0.811159\n0.737367\n00:01\n\n\n16\n0.286559\n0.341745\n0.812711\n0.738464\n00:01\n\n\n17\n0.269187\n0.342570\n0.812291\n0.737386\n00:01\n\n\n18\n0.250789\n0.338811\n0.814486\n0.739602\n00:01\n\n\n19\n0.235877\n0.337893\n0.815185\n0.740166\n00:01\n\n\n\n\n\n\n\n\n\n\n\n\noverall MSE: 0.3379\nAverage Pearson: 0.8071 \nCPU times: user 3min 16s, sys: 17min 23s, total: 20min 40s\nWall time: 22min 42s\n\n\n\nscore = pd.concat(metrics_list)\n\n\nscore.sort_values('mse').head()\n\n\n\n\n\n\n\n\nfold\nmse\npearson_avg\nmodel\n\n\n\n\n3\n3\n0.321140\n0.814740\ncnn_t5_kd\n\n\n3\n3\n0.323208\n0.807320\ncnn_esm_kd\n\n\n2\n2\n0.332671\n0.812157\ncnn_t5_kd\n\n\n4\n4\n0.337893\n0.807076\ncnn_esm_kd\n\n\n4\n4\n0.339779\n0.801619\ncnn_t5_kd",
    "crumbs": [
      "DL/ML Training"
    ]
  },
  {
    "objectID": "ml_training.html#train-ml",
    "href": "ml_training.html#train-ml",
    "title": "DL/ML Training",
    "section": "Train ML",
    "text": "Train ML\n\n# Define feature sets and their corresponding column names\nfeature_sets = {\n    't5':(t5,t5_col),\n    't5_kd':(t5_kd,t5_col),\n    'esm':(esm,esm_col),\n    'esm_kd':(esm_kd,esm_col),\n}\n\n\n# Dictionary of ML models\nml_models = {\n    'LinearRegression': LinearRegression(),\n    'Lasso': Lasso(0.1), # L1 regularization # changing alpha does not change the result\n    'Ridge': Ridge(alpha=0.1), # L2 regularization\n    'ElasticNet': ElasticNet(0.1), # Combine L1 and L2\n    \n    # 'SVR':SVR(C=10,gamma=1),\n    'DecisionTreeRegressor': DecisionTreeRegressor(), # not very good\n    'KNN': KNeighborsRegressor(n_neighbors=3), # compared with others, n=3 gives the best results\n    # 'XGBRegressor': XGBRegressor(), #slow without gpu\n    # 'RandomForestRegressor': RandomForestRegressor() # slow, use cuml to use gpu\n                                      }\n\n\nmetrics_list2 = []\noofs2 = {}\n\nfor model_name, model in ml_models.items():\n    for feature_name, (data, feat_col) in feature_sets.items():\n        \n        # get model name for save\n        save_name = f'{model_name}_{feature_name}'\n        print('------------------',save_name,'------------------')\n        \n        \n        # if want to save model, just remove save_name\n        # oof, metrics = train_ml_cv(data, feat_col, target_col, splits,model,save_name)\n        \n        # train\n        oof, metrics = train_ml_cv(data, feat_col, target_col, splits, model)\n        \n        # save metrics\n        metrics['model'] = save_name\n        metrics_list2.append(metrics)\n        \n        # save oof\n        oofs2[save_name] = oof\n\n------------------ LinearRegression_t5 ------------------\n------ fold: 0 --------\nLinearRegression()\noverall MSE: 0.8305\nAverage Pearson: 0.6931 \n------ fold: 1 --------\nLinearRegression()\noverall MSE: 0.6924\nAverage Pearson: 0.6997 \n------ fold: 2 --------\nLinearRegression()\noverall MSE: 0.7312\nAverage Pearson: 0.7086 \n------ fold: 3 --------\nLinearRegression()\noverall MSE: 0.7582\nAverage Pearson: 0.6908 \n------ fold: 4 --------\nLinearRegression()\noverall MSE: 0.7260\nAverage Pearson: 0.6874 \n------------------ LinearRegression_t5_kd ------------------\n------ fold: 0 --------\nLinearRegression()\noverall MSE: 0.8763\nAverage Pearson: 0.7168 \n------ fold: 1 --------\nLinearRegression()\noverall MSE: 0.6405\nAverage Pearson: 0.7313 \n------ fold: 2 --------\nLinearRegression()\noverall MSE: 0.7465\nAverage Pearson: 0.7429 \n------ fold: 3 --------\nLinearRegression()\noverall MSE: 0.6453\nAverage Pearson: 0.7328 \n------ fold: 4 --------\nLinearRegression()\noverall MSE: 0.7906\nAverage Pearson: 0.7263 \n------------------ LinearRegression_esm ------------------\n------ fold: 0 --------\nLinearRegression()\noverall MSE: 0.6145\nAverage Pearson: 0.7195 \n------ fold: 1 --------\nLinearRegression()\noverall MSE: 0.6063\nAverage Pearson: 0.7225 \n------ fold: 2 --------\nLinearRegression()\noverall MSE: 0.5792\nAverage Pearson: 0.7196 \n------ fold: 3 --------\nLinearRegression()\noverall MSE: 0.6019\nAverage Pearson: 0.6973 \n------ fold: 4 --------\nLinearRegression()\noverall MSE: 0.6562\nAverage Pearson: 0.7159 \n------------------ LinearRegression_esm_kd ------------------\n------ fold: 0 --------\nLinearRegression()\noverall MSE: 0.6540\nAverage Pearson: 0.7366 \n------ fold: 1 --------\nLinearRegression()\noverall MSE: 0.5418\nAverage Pearson: 0.7399 \n------ fold: 2 --------\nLinearRegression()\noverall MSE: 0.6084\nAverage Pearson: 0.7372 \n------ fold: 3 --------\nLinearRegression()\noverall MSE: 0.5551\nAverage Pearson: 0.7485 \n------ fold: 4 --------\nLinearRegression()\noverall MSE: 0.6513\nAverage Pearson: 0.7358 \n------------------ Lasso_t5 ------------------\n------ fold: 0 --------\nLasso(alpha=0.1)\noverall MSE: 0.8621\nAverage Pearson: 0.3738 \n------ fold: 1 --------\nLasso(alpha=0.1)\noverall MSE: 0.8716\nAverage Pearson: 0.3636 \n------ fold: 2 --------\nLasso(alpha=0.1)\noverall MSE: 0.8705\nAverage Pearson: 0.3616 \n------ fold: 3 --------\nLasso(alpha=0.1)\noverall MSE: 0.8703\nAverage Pearson: 0.3624 \n------ fold: 4 --------\nLasso(alpha=0.1)\noverall MSE: 0.8719\nAverage Pearson: 0.3591 \n------------------ Lasso_t5_kd ------------------\n------ fold: 0 --------\nLasso(alpha=0.1)\noverall MSE: 0.8621\nAverage Pearson: 0.3738 \n------ fold: 1 --------\nLasso(alpha=0.1)\noverall MSE: 0.8716\nAverage Pearson: 0.3636 \n------ fold: 2 --------\nLasso(alpha=0.1)\noverall MSE: 0.8705\nAverage Pearson: 0.3616 \n------ fold: 3 --------\nLasso(alpha=0.1)\noverall MSE: 0.8703\nAverage Pearson: 0.3624 \n------ fold: 4 --------\nLasso(alpha=0.1)\noverall MSE: 0.8719\nAverage Pearson: 0.3591 \n------------------ Lasso_esm ------------------\n------ fold: 0 --------\nLasso(alpha=0.1)\noverall MSE: 0.8514\nAverage Pearson: 0.3859 \n------ fold: 1 --------\nLasso(alpha=0.1)\noverall MSE: 0.8561\nAverage Pearson: 0.3811 \n------ fold: 2 --------\nLasso(alpha=0.1)\noverall MSE: 0.8636\nAverage Pearson: 0.3707 \n------ fold: 3 --------\nLasso(alpha=0.1)\noverall MSE: 0.8583\nAverage Pearson: 0.3770 \n------ fold: 4 --------\nLasso(alpha=0.1)\noverall MSE: 0.8653\nAverage Pearson: 0.3712 \n------------------ Lasso_esm_kd ------------------\n------ fold: 0 --------\nLasso(alpha=0.1)\noverall MSE: 0.8415\nAverage Pearson: 0.3921 \n------ fold: 1 --------\nLasso(alpha=0.1)\noverall MSE: 0.8535\nAverage Pearson: 0.3800 \n------ fold: 2 --------\nLasso(alpha=0.1)\noverall MSE: 0.8494\nAverage Pearson: 0.3786 \n------ fold: 3 --------\nLasso(alpha=0.1)\noverall MSE: 0.8508\nAverage Pearson: 0.3815 \n------ fold: 4 --------\nLasso(alpha=0.1)\noverall MSE: 0.8478\nAverage Pearson: 0.3814 \n------------------ Ridge_t5 ------------------\n------ fold: 0 --------\nRidge(alpha=0.1)\noverall MSE: 0.4626\nAverage Pearson: 0.7288 \n------ fold: 1 --------\nRidge(alpha=0.1)\noverall MSE: 0.4618\nAverage Pearson: 0.7237 \n------ fold: 2 --------\nRidge(alpha=0.1)\noverall MSE: 0.4271\nAverage Pearson: 0.7514 \n------ fold: 3 --------\nRidge(alpha=0.1)\noverall MSE: 0.4100\nAverage Pearson: 0.7575 \n------ fold: 4 --------\nRidge(alpha=0.1)\noverall MSE: 0.4541\nAverage Pearson: 0.7337 \n------------------ Ridge_t5_kd ------------------\n------ fold: 0 --------\nRidge(alpha=0.1)\noverall MSE: 0.4440\nAverage Pearson: 0.7443 \n------ fold: 1 --------\nRidge(alpha=0.1)\noverall MSE: 0.4270\nAverage Pearson: 0.7428 \n------ fold: 2 --------\nRidge(alpha=0.1)\noverall MSE: 0.4021\nAverage Pearson: 0.7674 \n------ fold: 3 --------\nRidge(alpha=0.1)\noverall MSE: 0.3715\nAverage Pearson: 0.7849 \n------ fold: 4 --------\nRidge(alpha=0.1)\noverall MSE: 0.4028\nAverage Pearson: 0.7745 \n------------------ Ridge_esm ------------------\n------ fold: 0 --------\nRidge(alpha=0.1)\noverall MSE: 0.4047\nAverage Pearson: 0.7631 \n------ fold: 1 --------\nRidge(alpha=0.1)\noverall MSE: 0.4259\nAverage Pearson: 0.7570 \n------ fold: 2 --------\nRidge(alpha=0.1)\noverall MSE: 0.4173\nAverage Pearson: 0.7616 \n------ fold: 3 --------\nRidge(alpha=0.1)\noverall MSE: 0.4047\nAverage Pearson: 0.7603 \n------ fold: 4 --------\nRidge(alpha=0.1)\noverall MSE: 0.4542\nAverage Pearson: 0.7569 \n------------------ Ridge_esm_kd ------------------\n------ fold: 0 --------\nRidge(alpha=0.1)\noverall MSE: 0.3800\nAverage Pearson: 0.7851 \n------ fold: 1 --------\nRidge(alpha=0.1)\noverall MSE: 0.3762\nAverage Pearson: 0.7857 \n------ fold: 2 --------\nRidge(alpha=0.1)\noverall MSE: 0.3917\nAverage Pearson: 0.7885 \n------ fold: 3 --------\nRidge(alpha=0.1)\noverall MSE: 0.3631\nAverage Pearson: 0.7959 \n------ fold: 4 --------\nRidge(alpha=0.1)\noverall MSE: 0.4047\nAverage Pearson: 0.7898 \n------------------ ElasticNet_t5 ------------------\n------ fold: 0 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8614\nAverage Pearson: 0.3747 \n------ fold: 1 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8708\nAverage Pearson: 0.3646 \n------ fold: 2 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8698\nAverage Pearson: 0.3625 \n------ fold: 3 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8697\nAverage Pearson: 0.3632 \n------ fold: 4 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8712\nAverage Pearson: 0.3599 \n------------------ ElasticNet_t5_kd ------------------\n------ fold: 0 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8618\nAverage Pearson: 0.3740 \n------ fold: 1 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8713\nAverage Pearson: 0.3639 \n------ fold: 2 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8702\nAverage Pearson: 0.3618 \n------ fold: 3 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8701\nAverage Pearson: 0.3626 \n------ fold: 4 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8717\nAverage Pearson: 0.3593 \n------------------ ElasticNet_esm ------------------\n------ fold: 0 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8413\nAverage Pearson: 0.3989 \n------ fold: 1 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8468\nAverage Pearson: 0.3940 \n------ fold: 2 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8608\nAverage Pearson: 0.3753 \n------ fold: 3 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8479\nAverage Pearson: 0.3903 \n------ fold: 4 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8588\nAverage Pearson: 0.3816 \n------------------ ElasticNet_esm_kd ------------------\n------ fold: 0 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8323\nAverage Pearson: 0.4075 \n------ fold: 1 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8440\nAverage Pearson: 0.3942 \n------ fold: 2 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8382\nAverage Pearson: 0.3971 \n------ fold: 3 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8420\nAverage Pearson: 0.3934 \n------ fold: 4 --------\nElasticNet(alpha=0.1)\noverall MSE: 0.8372\nAverage Pearson: 0.3983 \n------------------ DecisionTreeRegressor_t5 ------------------\n------ fold: 0 --------\nDecisionTreeRegressor()\noverall MSE: 0.9956\nAverage Pearson: 0.5402 \n------ fold: 1 --------\nDecisionTreeRegressor()\noverall MSE: 1.0513\nAverage Pearson: 0.4965 \n------ fold: 2 --------\nDecisionTreeRegressor()\noverall MSE: 0.9685\nAverage Pearson: 0.5404 \n------ fold: 3 --------\nDecisionTreeRegressor()\noverall MSE: 1.0204\nAverage Pearson: 0.5209 \n------ fold: 4 --------\nDecisionTreeRegressor()\noverall MSE: 1.0122\nAverage Pearson: 0.5464 \n------------------ DecisionTreeRegressor_t5_kd ------------------\n------ fold: 0 --------\nDecisionTreeRegressor()\noverall MSE: 0.8075\nAverage Pearson: 0.6255 \n------ fold: 1 --------\nDecisionTreeRegressor()\noverall MSE: 1.0233\nAverage Pearson: 0.5172 \n------ fold: 2 --------\nDecisionTreeRegressor()\noverall MSE: 0.9162\nAverage Pearson: 0.5716 \n------ fold: 3 --------\nDecisionTreeRegressor()\noverall MSE: 0.9597\nAverage Pearson: 0.5299 \n------ fold: 4 --------\nDecisionTreeRegressor()\noverall MSE: 0.8294\nAverage Pearson: 0.6155 \n------------------ DecisionTreeRegressor_esm ------------------\n------ fold: 0 --------\nDecisionTreeRegressor()\noverall MSE: 1.0721\nAverage Pearson: 0.5104 \n------ fold: 1 --------\nDecisionTreeRegressor()\noverall MSE: 1.1493\nAverage Pearson: 0.4569 \n------ fold: 2 --------\nDecisionTreeRegressor()\noverall MSE: 1.0901\nAverage Pearson: 0.4972 \n------ fold: 3 --------\nDecisionTreeRegressor()\noverall MSE: 1.1164\nAverage Pearson: 0.4873 \n------ fold: 4 --------\nDecisionTreeRegressor()\noverall MSE: 1.0596\nAverage Pearson: 0.5265 \n------------------ DecisionTreeRegressor_esm_kd ------------------\n------ fold: 0 --------\nDecisionTreeRegressor()\noverall MSE: 0.8191\nAverage Pearson: 0.6201 \n------ fold: 1 --------\nDecisionTreeRegressor()\noverall MSE: 0.8755\nAverage Pearson: 0.5809 \n------ fold: 2 --------\nDecisionTreeRegressor()\noverall MSE: 0.8807\nAverage Pearson: 0.6105 \n------ fold: 3 --------\nDecisionTreeRegressor()\noverall MSE: 0.7413\nAverage Pearson: 0.6473 \n------ fold: 4 --------\nDecisionTreeRegressor()\noverall MSE: 0.9671\nAverage Pearson: 0.5756 \n------------------ KNN_t5 ------------------\n------ fold: 0 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4860\nAverage Pearson: 0.7090 \n------ fold: 1 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4908\nAverage Pearson: 0.7035 \n------ fold: 2 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.5112\nAverage Pearson: 0.6907 \n------ fold: 3 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4822\nAverage Pearson: 0.7086 \n------ fold: 4 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4733\nAverage Pearson: 0.7173 \n------------------ KNN_t5_kd ------------------\n------ fold: 0 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4168\nAverage Pearson: 0.7536 \n------ fold: 1 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4312\nAverage Pearson: 0.7479 \n------ fold: 2 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.3915\nAverage Pearson: 0.7680 \n------ fold: 3 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.3866\nAverage Pearson: 0.7735 \n------ fold: 4 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4118\nAverage Pearson: 0.7578 \n------------------ KNN_esm ------------------\n------ fold: 0 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.5552\nAverage Pearson: 0.6650 \n------ fold: 1 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.5322\nAverage Pearson: 0.6739 \n------ fold: 2 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.6129\nAverage Pearson: 0.6181 \n------ fold: 3 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.5609\nAverage Pearson: 0.6450 \n------ fold: 4 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.5899\nAverage Pearson: 0.6469 \n------------------ KNN_esm_kd ------------------\n------ fold: 0 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4869\nAverage Pearson: 0.7058 \n------ fold: 1 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4821\nAverage Pearson: 0.7044 \n------ fold: 2 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4459\nAverage Pearson: 0.7379 \n------ fold: 3 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4590\nAverage Pearson: 0.7241 \n------ fold: 4 --------\nKNeighborsRegressor(n_neighbors=3)\noverall MSE: 0.4438\nAverage Pearson: 0.7325 \n\n\n\nscore2 = pd.concat(metrics_list2)",
    "crumbs": [
      "DL/ML Training"
    ]
  },
  {
    "objectID": "ml_training.html#save-results",
    "href": "ml_training.html#save-results",
    "title": "DL/ML Training",
    "section": "Save results",
    "text": "Save results\n\nmetrics\n\nscore2['type'] = 'ML'\nscore['type']='DL'\n\n\nscores = pd.concat([score,score2])\n\n\nscores.sort_values('pearson_avg',ascending=False)\n\n\n\n\n\n\n\n\nfold\nmse\npearson_avg\nmodel\ntype\n\n\n\n\n3\n3\n0.321140\n0.814740\ncnn_t5_kd\nDL\n\n\n2\n2\n0.332671\n0.812157\ncnn_t5_kd\nDL\n\n\n3\n3\n0.323208\n0.807320\ncnn_esm_kd\nDL\n\n\n4\n4\n0.337893\n0.807076\ncnn_esm_kd\nDL\n\n\n2\n2\n0.341916\n0.804054\ncnn_esm_kd\nDL\n\n\n...\n...\n...\n...\n...\n...\n\n\n2\n2\n0.870463\n0.361619\nLasso_t5\nML\n\n\n4\n4\n0.871231\n0.359918\nElasticNet_t5\nML\n\n\n4\n4\n0.871660\n0.359292\nElasticNet_t5_kd\nML\n\n\n4\n4\n0.871864\n0.359087\nLasso_t5\nML\n\n\n4\n4\n0.871864\n0.359087\nLasso_t5_kd\nML\n\n\n\n\n160 rows × 5 columns\n\n\n\n\nscores.to_csv('raw/scores.csv',index=False)\n\n\n\noof\n\nlen(oofs2),len(oofs)\n\n(24, 8)\n\n\n\noofs2.keys(),oofs.keys()\n\n(dict_keys(['LinearRegression_t5', 'LinearRegression_t5_kd', 'LinearRegression_esm', 'LinearRegression_esm_kd', 'Lasso_t5', 'Lasso_t5_kd', 'Lasso_esm', 'Lasso_esm_kd', 'Ridge_t5', 'Ridge_t5_kd', 'Ridge_esm', 'Ridge_esm_kd', 'ElasticNet_t5', 'ElasticNet_t5_kd', 'ElasticNet_esm', 'ElasticNet_esm_kd', 'DecisionTreeRegressor_t5', 'DecisionTreeRegressor_t5_kd', 'DecisionTreeRegressor_esm', 'DecisionTreeRegressor_esm_kd', 'KNN_t5', 'KNN_t5_kd', 'KNN_esm', 'KNN_esm_kd']),\n dict_keys(['mlp_t5', 'mlp_t5_kd', 'mlp_esm', 'mlp_esm_kd', 'cnn_t5', 'cnn_t5_kd', 'cnn_esm', 'cnn_esm_kd']))\n\n\n\nOOF = {**oofs, **oofs2}\n\n\nlen(OOF)\n\n32\n\n\n\n# to save the dictionary\nsave_pickle('raw/oof.pkl',OOF)\n\n\n# to load\ndd  = load_pickle('raw/oof.pkl')\n\nlen(dd)\n\n32",
    "crumbs": [
      "DL/ML Training"
    ]
  }
]